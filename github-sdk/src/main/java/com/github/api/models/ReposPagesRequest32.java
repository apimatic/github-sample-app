/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.github.api.models.containers.ReposPagesRequest32Source;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for ReposPagesRequest32 type.
 */
public class ReposPagesRequest32 {
    private String cname;
    private Boolean httpsEnforced;
    private BuildType2Enum buildType;
    private Source22 source;

    /**
     * Default constructor.
     */
    public ReposPagesRequest32() {
    }

    /**
     * Initialization constructor.
     * @param  cname  String value for cname.
     * @param  httpsEnforced  Boolean value for httpsEnforced.
     * @param  buildType  BuildType2Enum value for buildType.
     * @param  source  Source22 value for source.
     */
    public ReposPagesRequest32(
            String cname,
            Boolean httpsEnforced,
            BuildType2Enum buildType,
            Source22 source) {
        this.cname = cname;
        this.httpsEnforced = httpsEnforced;
        this.buildType = buildType;
        this.source = source;
    }

    /**
     * Initialization constructor.
     * @param  cname  String value for cname.
     */
    @JsonCreator
    private ReposPagesRequest32(
            @JsonProperty("cname") String cname) {
        this.cname = cname;
    }

    /**
     * Getter for Cname.
     * Specify a custom domain for the repository. Sending a `null` value will remove the custom
     * domain. For more about custom domains, see "[Using a custom domain with GitHub
     * Pages](https://docs.github.com/articles/using-a-custom-domain-with-github-pages/)."
     * @return Returns the String
     */
    @JsonGetter("cname")
    public String getCname() {
        return cname;
    }

    /**
     * Setter for Cname.
     * Specify a custom domain for the repository. Sending a `null` value will remove the custom
     * domain. For more about custom domains, see "[Using a custom domain with GitHub
     * Pages](https://docs.github.com/articles/using-a-custom-domain-with-github-pages/)."
     * @param cname Value for String
     */
    @JsonSetter("cname")
    public void setCname(String cname) {
        this.cname = cname;
    }

    /**
     * Getter for HttpsEnforced.
     * Specify whether HTTPS should be enforced for the repository.
     * @return Returns the Boolean
     */
    @JsonGetter("https_enforced")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getHttpsEnforced() {
        return httpsEnforced;
    }

    /**
     * Setter for HttpsEnforced.
     * Specify whether HTTPS should be enforced for the repository.
     * @param httpsEnforced Value for Boolean
     */
    @JsonSetter("https_enforced")
    public void setHttpsEnforced(Boolean httpsEnforced) {
        this.httpsEnforced = httpsEnforced;
    }

    /**
     * Getter for BuildType.
     * @return Returns the BuildType2Enum
     */
    @JsonGetter("build_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public BuildType2Enum getBuildType() {
        return buildType;
    }

    /**
     * Setter for BuildType.
     * @param buildType Value for BuildType2Enum
     */
    @JsonSetter("build_type")
    public void setBuildType(BuildType2Enum buildType) {
        this.buildType = buildType;
    }

    /**
     * Getter for Source.
     * @return Returns the Source22
     */
    @JsonGetter("source")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Source22 getSource() {
        return source;
    }

    /**
     * Setter for Source.
     * @param source Value for Source22
     */
    @JsonSetter("source")
    public void setSource(Source22 source) {
        this.source = source;
    }

    /**
     * Converts this ReposPagesRequest32 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposPagesRequest32 [" + "cname=" + cname + ", httpsEnforced=" + httpsEnforced
                + ", buildType=" + buildType + ", source=" + source + "]";
    }

    /**
     * Builds a new {@link ReposPagesRequest32.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposPagesRequest32.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(cname)
                .httpsEnforced(getHttpsEnforced())
                .buildType(getBuildType())
                .source(getSource());
        return builder;
    }

    /**
     * Class to build instances of {@link ReposPagesRequest32}.
     */
    public static class Builder {
        private String cname;
        private Boolean httpsEnforced;
        private BuildType2Enum buildType;
        private Source22 source;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  cname  String value for cname.
         */
        public Builder(String cname) {
            this.cname = cname;
        }

        /**
         * Setter for cname.
         * @param  cname  String value for cname.
         * @return Builder
         */
        public Builder cname(String cname) {
            this.cname = cname;
            return this;
        }

        /**
         * Setter for httpsEnforced.
         * @param  httpsEnforced  Boolean value for httpsEnforced.
         * @return Builder
         */
        public Builder httpsEnforced(Boolean httpsEnforced) {
            this.httpsEnforced = httpsEnforced;
            return this;
        }

        /**
         * Setter for buildType.
         * @param  buildType  BuildType2Enum value for buildType.
         * @return Builder
         */
        public Builder buildType(BuildType2Enum buildType) {
            this.buildType = buildType;
            return this;
        }

        /**
         * Setter for source.
         * @param  source  Source22 value for source.
         * @return Builder
         */
        public Builder source(Source22 source) {
            this.source = source;
            return this;
        }

        /**
         * Builds a new {@link ReposPagesRequest32} object using the set fields.
         * @return {@link ReposPagesRequest32}
         */
        public ReposPagesRequest32 build() {
            return new ReposPagesRequest32(cname, httpsEnforced, buildType, source);
        }
    }
}
