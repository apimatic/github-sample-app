/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for PullRequestSimple type.
 */
public class PullRequestSimple {
    private String url;
    private int id;
    private String nodeId;
    private String htmlUrl;
    private String diffUrl;
    private String patchUrl;
    private String issueUrl;
    private String commitsUrl;
    private String reviewCommentsUrl;
    private String reviewCommentUrl;
    private String commentsUrl;
    private String statusesUrl;
    private int number;
    private String state;
    private boolean locked;
    private String title;
    private Object user;
    private String body;
    private List<Label1> labels;
    private Object milestone;
    private OptionalNullable<String> activeLockReason;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private LocalDateTime closedAt;
    private LocalDateTime mergedAt;
    private String mergeCommitSha;
    private Object assignee;
    private OptionalNullable<List<SimpleUser>> assignees;
    private OptionalNullable<List<SimpleUser>> requestedReviewers;
    private OptionalNullable<List<Team>> requestedTeams;
    private Head1 head;
    private Base1 base;
    private Links2 links;
    private AuthorAssociationEnum authorAssociation;
    private Object autoMerge;
    private Boolean draft;

    /**
     * Default constructor.
     */
    public PullRequestSimple() {
    }

    /**
     * Initialization constructor.
     * @param  url  String value for url.
     * @param  id  int value for id.
     * @param  nodeId  String value for nodeId.
     * @param  htmlUrl  String value for htmlUrl.
     * @param  diffUrl  String value for diffUrl.
     * @param  patchUrl  String value for patchUrl.
     * @param  issueUrl  String value for issueUrl.
     * @param  commitsUrl  String value for commitsUrl.
     * @param  reviewCommentsUrl  String value for reviewCommentsUrl.
     * @param  reviewCommentUrl  String value for reviewCommentUrl.
     * @param  commentsUrl  String value for commentsUrl.
     * @param  statusesUrl  String value for statusesUrl.
     * @param  number  int value for number.
     * @param  state  String value for state.
     * @param  locked  boolean value for locked.
     * @param  title  String value for title.
     * @param  user  Object value for user.
     * @param  body  String value for body.
     * @param  labels  List of Label1 value for labels.
     * @param  milestone  Object value for milestone.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  closedAt  LocalDateTime value for closedAt.
     * @param  mergedAt  LocalDateTime value for mergedAt.
     * @param  mergeCommitSha  String value for mergeCommitSha.
     * @param  assignee  Object value for assignee.
     * @param  head  Head1 value for head.
     * @param  base  Base1 value for base.
     * @param  links  Links2 value for links.
     * @param  authorAssociation  AuthorAssociationEnum value for authorAssociation.
     * @param  autoMerge  Object value for autoMerge.
     * @param  activeLockReason  String value for activeLockReason.
     * @param  assignees  List of SimpleUser value for assignees.
     * @param  requestedReviewers  List of SimpleUser value for requestedReviewers.
     * @param  requestedTeams  List of Team value for requestedTeams.
     * @param  draft  Boolean value for draft.
     */
    public PullRequestSimple(
            String url,
            int id,
            String nodeId,
            String htmlUrl,
            String diffUrl,
            String patchUrl,
            String issueUrl,
            String commitsUrl,
            String reviewCommentsUrl,
            String reviewCommentUrl,
            String commentsUrl,
            String statusesUrl,
            int number,
            String state,
            boolean locked,
            String title,
            Object user,
            String body,
            List<Label1> labels,
            Object milestone,
            LocalDateTime createdAt,
            LocalDateTime updatedAt,
            LocalDateTime closedAt,
            LocalDateTime mergedAt,
            String mergeCommitSha,
            Object assignee,
            Head1 head,
            Base1 base,
            Links2 links,
            AuthorAssociationEnum authorAssociation,
            Object autoMerge,
            String activeLockReason,
            List<SimpleUser> assignees,
            List<SimpleUser> requestedReviewers,
            List<Team> requestedTeams,
            Boolean draft) {
        this.url = url;
        this.id = id;
        this.nodeId = nodeId;
        this.htmlUrl = htmlUrl;
        this.diffUrl = diffUrl;
        this.patchUrl = patchUrl;
        this.issueUrl = issueUrl;
        this.commitsUrl = commitsUrl;
        this.reviewCommentsUrl = reviewCommentsUrl;
        this.reviewCommentUrl = reviewCommentUrl;
        this.commentsUrl = commentsUrl;
        this.statusesUrl = statusesUrl;
        this.number = number;
        this.state = state;
        this.locked = locked;
        this.title = title;
        this.user = user;
        this.body = body;
        this.labels = labels;
        this.milestone = milestone;
        this.activeLockReason = OptionalNullable.of(activeLockReason);
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.closedAt = closedAt;
        this.mergedAt = mergedAt;
        this.mergeCommitSha = mergeCommitSha;
        this.assignee = assignee;
        this.assignees = OptionalNullable.of(assignees);
        this.requestedReviewers = OptionalNullable.of(requestedReviewers);
        this.requestedTeams = OptionalNullable.of(requestedTeams);
        this.head = head;
        this.base = base;
        this.links = links;
        this.authorAssociation = authorAssociation;
        this.autoMerge = autoMerge;
        this.draft = draft;
    }

    /**
     * Internal initialization constructor.
     */
    protected PullRequestSimple(String url, int id, String nodeId, String htmlUrl, String diffUrl,
            String patchUrl, String issueUrl, String commitsUrl, String reviewCommentsUrl,
            String reviewCommentUrl, String commentsUrl, String statusesUrl, int number,
            String state, boolean locked, String title, Object user, String body,
            List<Label1> labels, Object milestone, LocalDateTime createdAt, LocalDateTime updatedAt,
            LocalDateTime closedAt, LocalDateTime mergedAt, String mergeCommitSha, Object assignee,
            Head1 head, Base1 base, Links2 links, AuthorAssociationEnum authorAssociation,
            Object autoMerge, OptionalNullable<String> activeLockReason,
            OptionalNullable<List<SimpleUser>> assignees,
            OptionalNullable<List<SimpleUser>> requestedReviewers,
            OptionalNullable<List<Team>> requestedTeams, Boolean draft) {
        this.url = url;
        this.id = id;
        this.nodeId = nodeId;
        this.htmlUrl = htmlUrl;
        this.diffUrl = diffUrl;
        this.patchUrl = patchUrl;
        this.issueUrl = issueUrl;
        this.commitsUrl = commitsUrl;
        this.reviewCommentsUrl = reviewCommentsUrl;
        this.reviewCommentUrl = reviewCommentUrl;
        this.commentsUrl = commentsUrl;
        this.statusesUrl = statusesUrl;
        this.number = number;
        this.state = state;
        this.locked = locked;
        this.title = title;
        this.user = user;
        this.body = body;
        this.labels = labels;
        this.milestone = milestone;
        this.activeLockReason = activeLockReason;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.closedAt = closedAt;
        this.mergedAt = mergedAt;
        this.mergeCommitSha = mergeCommitSha;
        this.assignee = assignee;
        this.assignees = assignees;
        this.requestedReviewers = requestedReviewers;
        this.requestedTeams = requestedTeams;
        this.head = head;
        this.base = base;
        this.links = links;
        this.authorAssociation = authorAssociation;
        this.autoMerge = autoMerge;
        this.draft = draft;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for Id.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for HtmlUrl.
     * @return Returns the String
     */
    @JsonGetter("html_url")
    public String getHtmlUrl() {
        return htmlUrl;
    }

    /**
     * Setter for HtmlUrl.
     * @param htmlUrl Value for String
     */
    @JsonSetter("html_url")
    public void setHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
    }

    /**
     * Getter for DiffUrl.
     * @return Returns the String
     */
    @JsonGetter("diff_url")
    public String getDiffUrl() {
        return diffUrl;
    }

    /**
     * Setter for DiffUrl.
     * @param diffUrl Value for String
     */
    @JsonSetter("diff_url")
    public void setDiffUrl(String diffUrl) {
        this.diffUrl = diffUrl;
    }

    /**
     * Getter for PatchUrl.
     * @return Returns the String
     */
    @JsonGetter("patch_url")
    public String getPatchUrl() {
        return patchUrl;
    }

    /**
     * Setter for PatchUrl.
     * @param patchUrl Value for String
     */
    @JsonSetter("patch_url")
    public void setPatchUrl(String patchUrl) {
        this.patchUrl = patchUrl;
    }

    /**
     * Getter for IssueUrl.
     * @return Returns the String
     */
    @JsonGetter("issue_url")
    public String getIssueUrl() {
        return issueUrl;
    }

    /**
     * Setter for IssueUrl.
     * @param issueUrl Value for String
     */
    @JsonSetter("issue_url")
    public void setIssueUrl(String issueUrl) {
        this.issueUrl = issueUrl;
    }

    /**
     * Getter for CommitsUrl.
     * @return Returns the String
     */
    @JsonGetter("commits_url")
    public String getCommitsUrl() {
        return commitsUrl;
    }

    /**
     * Setter for CommitsUrl.
     * @param commitsUrl Value for String
     */
    @JsonSetter("commits_url")
    public void setCommitsUrl(String commitsUrl) {
        this.commitsUrl = commitsUrl;
    }

    /**
     * Getter for ReviewCommentsUrl.
     * @return Returns the String
     */
    @JsonGetter("review_comments_url")
    public String getReviewCommentsUrl() {
        return reviewCommentsUrl;
    }

    /**
     * Setter for ReviewCommentsUrl.
     * @param reviewCommentsUrl Value for String
     */
    @JsonSetter("review_comments_url")
    public void setReviewCommentsUrl(String reviewCommentsUrl) {
        this.reviewCommentsUrl = reviewCommentsUrl;
    }

    /**
     * Getter for ReviewCommentUrl.
     * @return Returns the String
     */
    @JsonGetter("review_comment_url")
    public String getReviewCommentUrl() {
        return reviewCommentUrl;
    }

    /**
     * Setter for ReviewCommentUrl.
     * @param reviewCommentUrl Value for String
     */
    @JsonSetter("review_comment_url")
    public void setReviewCommentUrl(String reviewCommentUrl) {
        this.reviewCommentUrl = reviewCommentUrl;
    }

    /**
     * Getter for CommentsUrl.
     * @return Returns the String
     */
    @JsonGetter("comments_url")
    public String getCommentsUrl() {
        return commentsUrl;
    }

    /**
     * Setter for CommentsUrl.
     * @param commentsUrl Value for String
     */
    @JsonSetter("comments_url")
    public void setCommentsUrl(String commentsUrl) {
        this.commentsUrl = commentsUrl;
    }

    /**
     * Getter for StatusesUrl.
     * @return Returns the String
     */
    @JsonGetter("statuses_url")
    public String getStatusesUrl() {
        return statusesUrl;
    }

    /**
     * Setter for StatusesUrl.
     * @param statusesUrl Value for String
     */
    @JsonSetter("statuses_url")
    public void setStatusesUrl(String statusesUrl) {
        this.statusesUrl = statusesUrl;
    }

    /**
     * Getter for Number.
     * @return Returns the int
     */
    @JsonGetter("number")
    public int getNumber() {
        return number;
    }

    /**
     * Setter for Number.
     * @param number Value for int
     */
    @JsonSetter("number")
    public void setNumber(int number) {
        this.number = number;
    }

    /**
     * Getter for State.
     * @return Returns the String
     */
    @JsonGetter("state")
    public String getState() {
        return state;
    }

    /**
     * Setter for State.
     * @param state Value for String
     */
    @JsonSetter("state")
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for Locked.
     * @return Returns the boolean
     */
    @JsonGetter("locked")
    public boolean getLocked() {
        return locked;
    }

    /**
     * Setter for Locked.
     * @param locked Value for boolean
     */
    @JsonSetter("locked")
    public void setLocked(boolean locked) {
        this.locked = locked;
    }

    /**
     * Getter for Title.
     * @return Returns the String
     */
    @JsonGetter("title")
    public String getTitle() {
        return title;
    }

    /**
     * Setter for Title.
     * @param title Value for String
     */
    @JsonSetter("title")
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for User.
     * @return Returns the Object
     */
    @JsonGetter("user")
    public Object getUser() {
        return user;
    }

    /**
     * Setter for User.
     * @param user Value for Object
     */
    @JsonSetter("user")
    public void setUser(Object user) {
        this.user = user;
    }

    /**
     * Getter for Body.
     * @return Returns the String
     */
    @JsonGetter("body")
    public String getBody() {
        return body;
    }

    /**
     * Setter for Body.
     * @param body Value for String
     */
    @JsonSetter("body")
    public void setBody(String body) {
        this.body = body;
    }

    /**
     * Getter for Labels.
     * @return Returns the List of Label1
     */
    @JsonGetter("labels")
    public List<Label1> getLabels() {
        return labels;
    }

    /**
     * Setter for Labels.
     * @param labels Value for List of Label1
     */
    @JsonSetter("labels")
    public void setLabels(List<Label1> labels) {
        this.labels = labels;
    }

    /**
     * Getter for Milestone.
     * @return Returns the Object
     */
    @JsonGetter("milestone")
    public Object getMilestone() {
        return milestone;
    }

    /**
     * Setter for Milestone.
     * @param milestone Value for Object
     */
    @JsonSetter("milestone")
    public void setMilestone(Object milestone) {
        this.milestone = milestone;
    }

    /**
     * Internal Getter for ActiveLockReason.
     * @return Returns the Internal String
     */
    @JsonGetter("active_lock_reason")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetActiveLockReason() {
        return this.activeLockReason;
    }

    /**
     * Getter for ActiveLockReason.
     * @return Returns the String
     */
    public String getActiveLockReason() {
        return OptionalNullable.getFrom(activeLockReason);
    }

    /**
     * Setter for ActiveLockReason.
     * @param activeLockReason Value for String
     */
    @JsonSetter("active_lock_reason")
    public void setActiveLockReason(String activeLockReason) {
        this.activeLockReason = OptionalNullable.of(activeLockReason);
    }

    /**
     * UnSetter for ActiveLockReason.
     */
    public void unsetActiveLockReason() {
        activeLockReason = null;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for ClosedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("closed_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getClosedAt() {
        return closedAt;
    }

    /**
     * Setter for ClosedAt.
     * @param closedAt Value for LocalDateTime
     */
    @JsonSetter("closed_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setClosedAt(LocalDateTime closedAt) {
        this.closedAt = closedAt;
    }

    /**
     * Getter for MergedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("merged_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getMergedAt() {
        return mergedAt;
    }

    /**
     * Setter for MergedAt.
     * @param mergedAt Value for LocalDateTime
     */
    @JsonSetter("merged_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setMergedAt(LocalDateTime mergedAt) {
        this.mergedAt = mergedAt;
    }

    /**
     * Getter for MergeCommitSha.
     * @return Returns the String
     */
    @JsonGetter("merge_commit_sha")
    public String getMergeCommitSha() {
        return mergeCommitSha;
    }

    /**
     * Setter for MergeCommitSha.
     * @param mergeCommitSha Value for String
     */
    @JsonSetter("merge_commit_sha")
    public void setMergeCommitSha(String mergeCommitSha) {
        this.mergeCommitSha = mergeCommitSha;
    }

    /**
     * Getter for Assignee.
     * @return Returns the Object
     */
    @JsonGetter("assignee")
    public Object getAssignee() {
        return assignee;
    }

    /**
     * Setter for Assignee.
     * @param assignee Value for Object
     */
    @JsonSetter("assignee")
    public void setAssignee(Object assignee) {
        this.assignee = assignee;
    }

    /**
     * Internal Getter for Assignees.
     * @return Returns the Internal List of SimpleUser
     */
    @JsonGetter("assignees")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<List<SimpleUser>> internalGetAssignees() {
        return this.assignees;
    }

    /**
     * Getter for Assignees.
     * @return Returns the List of SimpleUser
     */
    public List<SimpleUser> getAssignees() {
        return OptionalNullable.getFrom(assignees);
    }

    /**
     * Setter for Assignees.
     * @param assignees Value for List of SimpleUser
     */
    @JsonSetter("assignees")
    public void setAssignees(List<SimpleUser> assignees) {
        this.assignees = OptionalNullable.of(assignees);
    }

    /**
     * UnSetter for Assignees.
     */
    public void unsetAssignees() {
        assignees = null;
    }

    /**
     * Internal Getter for RequestedReviewers.
     * @return Returns the Internal List of SimpleUser
     */
    @JsonGetter("requested_reviewers")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<List<SimpleUser>> internalGetRequestedReviewers() {
        return this.requestedReviewers;
    }

    /**
     * Getter for RequestedReviewers.
     * @return Returns the List of SimpleUser
     */
    public List<SimpleUser> getRequestedReviewers() {
        return OptionalNullable.getFrom(requestedReviewers);
    }

    /**
     * Setter for RequestedReviewers.
     * @param requestedReviewers Value for List of SimpleUser
     */
    @JsonSetter("requested_reviewers")
    public void setRequestedReviewers(List<SimpleUser> requestedReviewers) {
        this.requestedReviewers = OptionalNullable.of(requestedReviewers);
    }

    /**
     * UnSetter for RequestedReviewers.
     */
    public void unsetRequestedReviewers() {
        requestedReviewers = null;
    }

    /**
     * Internal Getter for RequestedTeams.
     * @return Returns the Internal List of Team
     */
    @JsonGetter("requested_teams")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<List<Team>> internalGetRequestedTeams() {
        return this.requestedTeams;
    }

    /**
     * Getter for RequestedTeams.
     * @return Returns the List of Team
     */
    public List<Team> getRequestedTeams() {
        return OptionalNullable.getFrom(requestedTeams);
    }

    /**
     * Setter for RequestedTeams.
     * @param requestedTeams Value for List of Team
     */
    @JsonSetter("requested_teams")
    public void setRequestedTeams(List<Team> requestedTeams) {
        this.requestedTeams = OptionalNullable.of(requestedTeams);
    }

    /**
     * UnSetter for RequestedTeams.
     */
    public void unsetRequestedTeams() {
        requestedTeams = null;
    }

    /**
     * Getter for Head.
     * @return Returns the Head1
     */
    @JsonGetter("head")
    public Head1 getHead() {
        return head;
    }

    /**
     * Setter for Head.
     * @param head Value for Head1
     */
    @JsonSetter("head")
    public void setHead(Head1 head) {
        this.head = head;
    }

    /**
     * Getter for Base.
     * @return Returns the Base1
     */
    @JsonGetter("base")
    public Base1 getBase() {
        return base;
    }

    /**
     * Setter for Base.
     * @param base Value for Base1
     */
    @JsonSetter("base")
    public void setBase(Base1 base) {
        this.base = base;
    }

    /**
     * Getter for Links.
     * @return Returns the Links2
     */
    @JsonGetter("_links")
    public Links2 getLinks() {
        return links;
    }

    /**
     * Setter for Links.
     * @param links Value for Links2
     */
    @JsonSetter("_links")
    public void setLinks(Links2 links) {
        this.links = links;
    }

    /**
     * Getter for AuthorAssociation.
     * @return Returns the AuthorAssociationEnum
     */
    @JsonGetter("author_association")
    public AuthorAssociationEnum getAuthorAssociation() {
        return authorAssociation;
    }

    /**
     * Setter for AuthorAssociation.
     * @param authorAssociation Value for AuthorAssociationEnum
     */
    @JsonSetter("author_association")
    public void setAuthorAssociation(AuthorAssociationEnum authorAssociation) {
        this.authorAssociation = authorAssociation;
    }

    /**
     * Getter for AutoMerge.
     * @return Returns the Object
     */
    @JsonGetter("auto_merge")
    public Object getAutoMerge() {
        return autoMerge;
    }

    /**
     * Setter for AutoMerge.
     * @param autoMerge Value for Object
     */
    @JsonSetter("auto_merge")
    public void setAutoMerge(Object autoMerge) {
        this.autoMerge = autoMerge;
    }

    /**
     * Getter for Draft.
     * Indicates whether or not the pull request is a draft.
     * @return Returns the Boolean
     */
    @JsonGetter("draft")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getDraft() {
        return draft;
    }

    /**
     * Setter for Draft.
     * Indicates whether or not the pull request is a draft.
     * @param draft Value for Boolean
     */
    @JsonSetter("draft")
    public void setDraft(Boolean draft) {
        this.draft = draft;
    }

    /**
     * Converts this PullRequestSimple into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PullRequestSimple [" + "url=" + url + ", id=" + id + ", nodeId=" + nodeId
                + ", htmlUrl=" + htmlUrl + ", diffUrl=" + diffUrl + ", patchUrl=" + patchUrl
                + ", issueUrl=" + issueUrl + ", commitsUrl=" + commitsUrl + ", reviewCommentsUrl="
                + reviewCommentsUrl + ", reviewCommentUrl=" + reviewCommentUrl + ", commentsUrl="
                + commentsUrl + ", statusesUrl=" + statusesUrl + ", number=" + number + ", state="
                + state + ", locked=" + locked + ", title=" + title + ", user=" + user + ", body="
                + body + ", labels=" + labels + ", milestone=" + milestone + ", createdAt="
                + createdAt + ", updatedAt=" + updatedAt + ", closedAt=" + closedAt + ", mergedAt="
                + mergedAt + ", mergeCommitSha=" + mergeCommitSha + ", assignee=" + assignee
                + ", head=" + head + ", base=" + base + ", links=" + links + ", authorAssociation="
                + authorAssociation + ", autoMerge=" + autoMerge + ", activeLockReason="
                + activeLockReason + ", assignees=" + assignees + ", requestedReviewers="
                + requestedReviewers + ", requestedTeams=" + requestedTeams + ", draft=" + draft
                + "]";
    }

    /**
     * Builds a new {@link PullRequestSimple.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PullRequestSimple.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(url, id, nodeId, htmlUrl, diffUrl, patchUrl, issueUrl,
                commitsUrl, reviewCommentsUrl, reviewCommentUrl, commentsUrl, statusesUrl, number,
                state, locked, title, user, body, labels, milestone, createdAt, updatedAt, closedAt,
                mergedAt, mergeCommitSha, assignee, head, base, links, authorAssociation, autoMerge)
                .draft(getDraft());
        builder.activeLockReason = internalGetActiveLockReason();
        builder.assignees = internalGetAssignees();
        builder.requestedReviewers = internalGetRequestedReviewers();
        builder.requestedTeams = internalGetRequestedTeams();
        return builder;
    }

    /**
     * Class to build instances of {@link PullRequestSimple}.
     */
    public static class Builder {
        private String url;
        private int id;
        private String nodeId;
        private String htmlUrl;
        private String diffUrl;
        private String patchUrl;
        private String issueUrl;
        private String commitsUrl;
        private String reviewCommentsUrl;
        private String reviewCommentUrl;
        private String commentsUrl;
        private String statusesUrl;
        private int number;
        private String state;
        private boolean locked;
        private String title;
        private Object user;
        private String body;
        private List<Label1> labels;
        private Object milestone;
        private LocalDateTime createdAt;
        private LocalDateTime updatedAt;
        private LocalDateTime closedAt;
        private LocalDateTime mergedAt;
        private String mergeCommitSha;
        private Object assignee;
        private Head1 head;
        private Base1 base;
        private Links2 links;
        private AuthorAssociationEnum authorAssociation;
        private Object autoMerge;
        private OptionalNullable<String> activeLockReason;
        private OptionalNullable<List<SimpleUser>> assignees;
        private OptionalNullable<List<SimpleUser>> requestedReviewers;
        private OptionalNullable<List<Team>> requestedTeams;
        private Boolean draft;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  url  String value for url.
         * @param  id  int value for id.
         * @param  nodeId  String value for nodeId.
         * @param  htmlUrl  String value for htmlUrl.
         * @param  diffUrl  String value for diffUrl.
         * @param  patchUrl  String value for patchUrl.
         * @param  issueUrl  String value for issueUrl.
         * @param  commitsUrl  String value for commitsUrl.
         * @param  reviewCommentsUrl  String value for reviewCommentsUrl.
         * @param  reviewCommentUrl  String value for reviewCommentUrl.
         * @param  commentsUrl  String value for commentsUrl.
         * @param  statusesUrl  String value for statusesUrl.
         * @param  number  int value for number.
         * @param  state  String value for state.
         * @param  locked  boolean value for locked.
         * @param  title  String value for title.
         * @param  user  Object value for user.
         * @param  body  String value for body.
         * @param  labels  List of Label1 value for labels.
         * @param  milestone  Object value for milestone.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @param  closedAt  LocalDateTime value for closedAt.
         * @param  mergedAt  LocalDateTime value for mergedAt.
         * @param  mergeCommitSha  String value for mergeCommitSha.
         * @param  assignee  Object value for assignee.
         * @param  head  Head1 value for head.
         * @param  base  Base1 value for base.
         * @param  links  Links2 value for links.
         * @param  authorAssociation  AuthorAssociationEnum value for authorAssociation.
         * @param  autoMerge  Object value for autoMerge.
         */
        public Builder(String url, int id, String nodeId, String htmlUrl, String diffUrl,
                String patchUrl, String issueUrl, String commitsUrl, String reviewCommentsUrl,
                String reviewCommentUrl, String commentsUrl, String statusesUrl, int number,
                String state, boolean locked, String title, Object user, String body,
                List<Label1> labels, Object milestone, LocalDateTime createdAt,
                LocalDateTime updatedAt, LocalDateTime closedAt, LocalDateTime mergedAt,
                String mergeCommitSha, Object assignee, Head1 head, Base1 base, Links2 links,
                AuthorAssociationEnum authorAssociation, Object autoMerge) {
            this.url = url;
            this.id = id;
            this.nodeId = nodeId;
            this.htmlUrl = htmlUrl;
            this.diffUrl = diffUrl;
            this.patchUrl = patchUrl;
            this.issueUrl = issueUrl;
            this.commitsUrl = commitsUrl;
            this.reviewCommentsUrl = reviewCommentsUrl;
            this.reviewCommentUrl = reviewCommentUrl;
            this.commentsUrl = commentsUrl;
            this.statusesUrl = statusesUrl;
            this.number = number;
            this.state = state;
            this.locked = locked;
            this.title = title;
            this.user = user;
            this.body = body;
            this.labels = labels;
            this.milestone = milestone;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
            this.closedAt = closedAt;
            this.mergedAt = mergedAt;
            this.mergeCommitSha = mergeCommitSha;
            this.assignee = assignee;
            this.head = head;
            this.base = base;
            this.links = links;
            this.authorAssociation = authorAssociation;
            this.autoMerge = autoMerge;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for htmlUrl.
         * @param  htmlUrl  String value for htmlUrl.
         * @return Builder
         */
        public Builder htmlUrl(String htmlUrl) {
            this.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * Setter for diffUrl.
         * @param  diffUrl  String value for diffUrl.
         * @return Builder
         */
        public Builder diffUrl(String diffUrl) {
            this.diffUrl = diffUrl;
            return this;
        }

        /**
         * Setter for patchUrl.
         * @param  patchUrl  String value for patchUrl.
         * @return Builder
         */
        public Builder patchUrl(String patchUrl) {
            this.patchUrl = patchUrl;
            return this;
        }

        /**
         * Setter for issueUrl.
         * @param  issueUrl  String value for issueUrl.
         * @return Builder
         */
        public Builder issueUrl(String issueUrl) {
            this.issueUrl = issueUrl;
            return this;
        }

        /**
         * Setter for commitsUrl.
         * @param  commitsUrl  String value for commitsUrl.
         * @return Builder
         */
        public Builder commitsUrl(String commitsUrl) {
            this.commitsUrl = commitsUrl;
            return this;
        }

        /**
         * Setter for reviewCommentsUrl.
         * @param  reviewCommentsUrl  String value for reviewCommentsUrl.
         * @return Builder
         */
        public Builder reviewCommentsUrl(String reviewCommentsUrl) {
            this.reviewCommentsUrl = reviewCommentsUrl;
            return this;
        }

        /**
         * Setter for reviewCommentUrl.
         * @param  reviewCommentUrl  String value for reviewCommentUrl.
         * @return Builder
         */
        public Builder reviewCommentUrl(String reviewCommentUrl) {
            this.reviewCommentUrl = reviewCommentUrl;
            return this;
        }

        /**
         * Setter for commentsUrl.
         * @param  commentsUrl  String value for commentsUrl.
         * @return Builder
         */
        public Builder commentsUrl(String commentsUrl) {
            this.commentsUrl = commentsUrl;
            return this;
        }

        /**
         * Setter for statusesUrl.
         * @param  statusesUrl  String value for statusesUrl.
         * @return Builder
         */
        public Builder statusesUrl(String statusesUrl) {
            this.statusesUrl = statusesUrl;
            return this;
        }

        /**
         * Setter for number.
         * @param  number  int value for number.
         * @return Builder
         */
        public Builder number(int number) {
            this.number = number;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  String value for state.
         * @return Builder
         */
        public Builder state(String state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for locked.
         * @param  locked  boolean value for locked.
         * @return Builder
         */
        public Builder locked(boolean locked) {
            this.locked = locked;
            return this;
        }

        /**
         * Setter for title.
         * @param  title  String value for title.
         * @return Builder
         */
        public Builder title(String title) {
            this.title = title;
            return this;
        }

        /**
         * Setter for user.
         * @param  user  Object value for user.
         * @return Builder
         */
        public Builder user(Object user) {
            this.user = user;
            return this;
        }

        /**
         * Setter for body.
         * @param  body  String value for body.
         * @return Builder
         */
        public Builder body(String body) {
            this.body = body;
            return this;
        }

        /**
         * Setter for labels.
         * @param  labels  List of Label1 value for labels.
         * @return Builder
         */
        public Builder labels(List<Label1> labels) {
            this.labels = labels;
            return this;
        }

        /**
         * Setter for milestone.
         * @param  milestone  Object value for milestone.
         * @return Builder
         */
        public Builder milestone(Object milestone) {
            this.milestone = milestone;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for closedAt.
         * @param  closedAt  LocalDateTime value for closedAt.
         * @return Builder
         */
        public Builder closedAt(LocalDateTime closedAt) {
            this.closedAt = closedAt;
            return this;
        }

        /**
         * Setter for mergedAt.
         * @param  mergedAt  LocalDateTime value for mergedAt.
         * @return Builder
         */
        public Builder mergedAt(LocalDateTime mergedAt) {
            this.mergedAt = mergedAt;
            return this;
        }

        /**
         * Setter for mergeCommitSha.
         * @param  mergeCommitSha  String value for mergeCommitSha.
         * @return Builder
         */
        public Builder mergeCommitSha(String mergeCommitSha) {
            this.mergeCommitSha = mergeCommitSha;
            return this;
        }

        /**
         * Setter for assignee.
         * @param  assignee  Object value for assignee.
         * @return Builder
         */
        public Builder assignee(Object assignee) {
            this.assignee = assignee;
            return this;
        }

        /**
         * Setter for head.
         * @param  head  Head1 value for head.
         * @return Builder
         */
        public Builder head(Head1 head) {
            this.head = head;
            return this;
        }

        /**
         * Setter for base.
         * @param  base  Base1 value for base.
         * @return Builder
         */
        public Builder base(Base1 base) {
            this.base = base;
            return this;
        }

        /**
         * Setter for links.
         * @param  links  Links2 value for links.
         * @return Builder
         */
        public Builder links(Links2 links) {
            this.links = links;
            return this;
        }

        /**
         * Setter for authorAssociation.
         * @param  authorAssociation  AuthorAssociationEnum value for authorAssociation.
         * @return Builder
         */
        public Builder authorAssociation(AuthorAssociationEnum authorAssociation) {
            this.authorAssociation = authorAssociation;
            return this;
        }

        /**
         * Setter for autoMerge.
         * @param  autoMerge  Object value for autoMerge.
         * @return Builder
         */
        public Builder autoMerge(Object autoMerge) {
            this.autoMerge = autoMerge;
            return this;
        }

        /**
         * Setter for activeLockReason.
         * @param  activeLockReason  String value for activeLockReason.
         * @return Builder
         */
        public Builder activeLockReason(String activeLockReason) {
            this.activeLockReason = OptionalNullable.of(activeLockReason);
            return this;
        }

        /**
         * UnSetter for activeLockReason.
         * @return Builder
         */
        public Builder unsetActiveLockReason() {
            activeLockReason = null;
            return this;
        }

        /**
         * Setter for assignees.
         * @param  assignees  List of SimpleUser value for assignees.
         * @return Builder
         */
        public Builder assignees(List<SimpleUser> assignees) {
            this.assignees = OptionalNullable.of(assignees);
            return this;
        }

        /**
         * UnSetter for assignees.
         * @return Builder
         */
        public Builder unsetAssignees() {
            assignees = null;
            return this;
        }

        /**
         * Setter for requestedReviewers.
         * @param  requestedReviewers  List of SimpleUser value for requestedReviewers.
         * @return Builder
         */
        public Builder requestedReviewers(List<SimpleUser> requestedReviewers) {
            this.requestedReviewers = OptionalNullable.of(requestedReviewers);
            return this;
        }

        /**
         * UnSetter for requestedReviewers.
         * @return Builder
         */
        public Builder unsetRequestedReviewers() {
            requestedReviewers = null;
            return this;
        }

        /**
         * Setter for requestedTeams.
         * @param  requestedTeams  List of Team value for requestedTeams.
         * @return Builder
         */
        public Builder requestedTeams(List<Team> requestedTeams) {
            this.requestedTeams = OptionalNullable.of(requestedTeams);
            return this;
        }

        /**
         * UnSetter for requestedTeams.
         * @return Builder
         */
        public Builder unsetRequestedTeams() {
            requestedTeams = null;
            return this;
        }

        /**
         * Setter for draft.
         * @param  draft  Boolean value for draft.
         * @return Builder
         */
        public Builder draft(Boolean draft) {
            this.draft = draft;
            return this;
        }

        /**
         * Builds a new {@link PullRequestSimple} object using the set fields.
         * @return {@link PullRequestSimple}
         */
        public PullRequestSimple build() {
            return new PullRequestSimple(url, id, nodeId, htmlUrl, diffUrl, patchUrl, issueUrl,
                    commitsUrl, reviewCommentsUrl, reviewCommentUrl, commentsUrl, statusesUrl,
                    number, state, locked, title, user, body, labels, milestone, createdAt,
                    updatedAt, closedAt, mergedAt, mergeCommitSha, assignee, head, base, links,
                    authorAssociation, autoMerge, activeLockReason, assignees, requestedReviewers,
                    requestedTeams, draft);
        }
    }
}
