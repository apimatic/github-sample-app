/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.github.api.ApiHelper;
import com.github.api.models.ReposPullsPullNumberRequestedReviewersRequest;
import com.github.api.models.ReposPullsPullNumberRequestedReviewersRequest1;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = PullsRequestReviewersBody.PullsRequestReviewersBodyDeserializer.class)
public abstract class PullsRequestReviewersBody {
    
    /**
     * Any-of type initialization method.
     * @param reposPullsPullNumberRequestedReviewersRequest ReposPullsPullNumberRequestedReviewersRequest value for reposPullsPullNumberRequestedReviewersRequest.
     * @return The ReposPullsPullNumberRequestedReviewersRequestCase object.
     */
    public static PullsRequestReviewersBody fromReposPullsPullNumberRequestedReviewersRequest(
            ReposPullsPullNumberRequestedReviewersRequest reposPullsPullNumberRequestedReviewersRequest) {
        return reposPullsPullNumberRequestedReviewersRequest == null ? null : new ReposPullsPullNumberRequestedReviewersRequestCase(reposPullsPullNumberRequestedReviewersRequest);
    }

    /**
     * Any-of type initialization method.
     * @param reposPullsPullNumberRequestedReviewersRequest1 ReposPullsPullNumberRequestedReviewersRequest1 value for reposPullsPullNumberRequestedReviewersRequest1.
     * @return The ReposPullsPullNumberRequestedReviewersRequest1Case object.
     */
    public static PullsRequestReviewersBody fromReposPullsPullNumberRequestedReviewersRequest1(
            ReposPullsPullNumberRequestedReviewersRequest1 reposPullsPullNumberRequestedReviewersRequest1) {
        return reposPullsPullNumberRequestedReviewersRequest1 == null ? null : new ReposPullsPullNumberRequestedReviewersRequest1Case(reposPullsPullNumberRequestedReviewersRequest1);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R reposPullsPullNumberRequestedReviewersRequest(ReposPullsPullNumberRequestedReviewersRequest reposPullsPullNumberRequestedReviewersRequest);

        R reposPullsPullNumberRequestedReviewersRequest1(ReposPullsPullNumberRequestedReviewersRequest1 reposPullsPullNumberRequestedReviewersRequest1);
    }

    /**
     * This is a implementation class for ReposPullsPullNumberRequestedReviewersRequestCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase
    private static class ReposPullsPullNumberRequestedReviewersRequestCase extends PullsRequestReviewersBody {

        @JsonValue
        private ReposPullsPullNumberRequestedReviewersRequest reposPullsPullNumberRequestedReviewersRequest;

        ReposPullsPullNumberRequestedReviewersRequestCase(ReposPullsPullNumberRequestedReviewersRequest reposPullsPullNumberRequestedReviewersRequest) {
            this.reposPullsPullNumberRequestedReviewersRequest = reposPullsPullNumberRequestedReviewersRequest;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.reposPullsPullNumberRequestedReviewersRequest(this.reposPullsPullNumberRequestedReviewersRequest);
        }

        @JsonCreator
        private ReposPullsPullNumberRequestedReviewersRequestCase(JsonNode jsonNode) throws IOException {
            this.reposPullsPullNumberRequestedReviewersRequest = ApiHelper.deserialize(jsonNode,
                ReposPullsPullNumberRequestedReviewersRequest.class);
        }

        @Override
        public String toString() {
            return reposPullsPullNumberRequestedReviewersRequest.toString();
        }
    }

    /**
     * This is a implementation class for ReposPullsPullNumberRequestedReviewersRequest1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase
    private static class ReposPullsPullNumberRequestedReviewersRequest1Case extends PullsRequestReviewersBody {

        @JsonValue
        private ReposPullsPullNumberRequestedReviewersRequest1 reposPullsPullNumberRequestedReviewersRequest1;

        ReposPullsPullNumberRequestedReviewersRequest1Case(ReposPullsPullNumberRequestedReviewersRequest1 reposPullsPullNumberRequestedReviewersRequest1) {
            this.reposPullsPullNumberRequestedReviewersRequest1 = reposPullsPullNumberRequestedReviewersRequest1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.reposPullsPullNumberRequestedReviewersRequest1(this.reposPullsPullNumberRequestedReviewersRequest1);
        }

        @JsonCreator
        private ReposPullsPullNumberRequestedReviewersRequest1Case(JsonNode jsonNode) throws IOException {
            this.reposPullsPullNumberRequestedReviewersRequest1 = ApiHelper.deserialize(jsonNode,
                ReposPullsPullNumberRequestedReviewersRequest1.class);
        }

        @Override
        public String toString() {
            return reposPullsPullNumberRequestedReviewersRequest1.toString();
        }
    }

    /**
     * This is a custom deserializer class for PullsRequestReviewersBody.
     */
    protected static class PullsRequestReviewersBodyDeserializer
            extends JsonDeserializer<PullsRequestReviewersBody> {

        @Override
        public PullsRequestReviewersBody deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(
                    ReposPullsPullNumberRequestedReviewersRequestCase.class,
                    ReposPullsPullNumberRequestedReviewersRequest1Case.class), false);
        }
    }

}
