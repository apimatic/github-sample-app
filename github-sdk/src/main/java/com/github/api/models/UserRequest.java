/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for UserRequest type.
 */
public class UserRequest {
    private String name;
    private String email;
    private String blog;
    private OptionalNullable<String> twitterUsername;
    private String company;
    private String location;
    private Boolean hireable;
    private String bio;

    /**
     * Default constructor.
     */
    public UserRequest() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  email  String value for email.
     * @param  blog  String value for blog.
     * @param  twitterUsername  String value for twitterUsername.
     * @param  company  String value for company.
     * @param  location  String value for location.
     * @param  hireable  Boolean value for hireable.
     * @param  bio  String value for bio.
     */
    public UserRequest(
            String name,
            String email,
            String blog,
            String twitterUsername,
            String company,
            String location,
            Boolean hireable,
            String bio) {
        this.name = name;
        this.email = email;
        this.blog = blog;
        this.twitterUsername = OptionalNullable.of(twitterUsername);
        this.company = company;
        this.location = location;
        this.hireable = hireable;
        this.bio = bio;
    }

    /**
     * Internal initialization constructor.
     */
    protected UserRequest(String name, String email, String blog,
            OptionalNullable<String> twitterUsername, String company, String location,
            Boolean hireable, String bio) {
        this.name = name;
        this.email = email;
        this.blog = blog;
        this.twitterUsername = twitterUsername;
        this.company = company;
        this.location = location;
        this.hireable = hireable;
        this.bio = bio;
    }

    /**
     * Getter for Name.
     * The new name of the user.
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The new name of the user.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Email.
     * The publicly visible email address of the user.
     * @return Returns the String
     */
    @JsonGetter("email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmail() {
        return email;
    }

    /**
     * Setter for Email.
     * The publicly visible email address of the user.
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for Blog.
     * The new blog URL of the user.
     * @return Returns the String
     */
    @JsonGetter("blog")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBlog() {
        return blog;
    }

    /**
     * Setter for Blog.
     * The new blog URL of the user.
     * @param blog Value for String
     */
    @JsonSetter("blog")
    public void setBlog(String blog) {
        this.blog = blog;
    }

    /**
     * Internal Getter for TwitterUsername.
     * The new Twitter username of the user.
     * @return Returns the Internal String
     */
    @JsonGetter("twitter_username")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetTwitterUsername() {
        return this.twitterUsername;
    }

    /**
     * Getter for TwitterUsername.
     * The new Twitter username of the user.
     * @return Returns the String
     */
    public String getTwitterUsername() {
        return OptionalNullable.getFrom(twitterUsername);
    }

    /**
     * Setter for TwitterUsername.
     * The new Twitter username of the user.
     * @param twitterUsername Value for String
     */
    @JsonSetter("twitter_username")
    public void setTwitterUsername(String twitterUsername) {
        this.twitterUsername = OptionalNullable.of(twitterUsername);
    }

    /**
     * UnSetter for TwitterUsername.
     * The new Twitter username of the user.
     */
    public void unsetTwitterUsername() {
        twitterUsername = null;
    }

    /**
     * Getter for Company.
     * The new company of the user.
     * @return Returns the String
     */
    @JsonGetter("company")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCompany() {
        return company;
    }

    /**
     * Setter for Company.
     * The new company of the user.
     * @param company Value for String
     */
    @JsonSetter("company")
    public void setCompany(String company) {
        this.company = company;
    }

    /**
     * Getter for Location.
     * The new location of the user.
     * @return Returns the String
     */
    @JsonGetter("location")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLocation() {
        return location;
    }

    /**
     * Setter for Location.
     * The new location of the user.
     * @param location Value for String
     */
    @JsonSetter("location")
    public void setLocation(String location) {
        this.location = location;
    }

    /**
     * Getter for Hireable.
     * The new hiring availability of the user.
     * @return Returns the Boolean
     */
    @JsonGetter("hireable")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getHireable() {
        return hireable;
    }

    /**
     * Setter for Hireable.
     * The new hiring availability of the user.
     * @param hireable Value for Boolean
     */
    @JsonSetter("hireable")
    public void setHireable(Boolean hireable) {
        this.hireable = hireable;
    }

    /**
     * Getter for Bio.
     * The new short biography of the user.
     * @return Returns the String
     */
    @JsonGetter("bio")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBio() {
        return bio;
    }

    /**
     * Setter for Bio.
     * The new short biography of the user.
     * @param bio Value for String
     */
    @JsonSetter("bio")
    public void setBio(String bio) {
        this.bio = bio;
    }

    /**
     * Converts this UserRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UserRequest [" + "name=" + name + ", email=" + email + ", blog=" + blog
                + ", twitterUsername=" + twitterUsername + ", company=" + company + ", location="
                + location + ", hireable=" + hireable + ", bio=" + bio + "]";
    }

    /**
     * Builds a new {@link UserRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UserRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .name(getName())
                .email(getEmail())
                .blog(getBlog())
                .company(getCompany())
                .location(getLocation())
                .hireable(getHireable())
                .bio(getBio());
        builder.twitterUsername = internalGetTwitterUsername();
        return builder;
    }

    /**
     * Class to build instances of {@link UserRequest}.
     */
    public static class Builder {
        private String name;
        private String email;
        private String blog;
        private OptionalNullable<String> twitterUsername;
        private String company;
        private String location;
        private Boolean hireable;
        private String bio;



        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = email;
            return this;
        }

        /**
         * Setter for blog.
         * @param  blog  String value for blog.
         * @return Builder
         */
        public Builder blog(String blog) {
            this.blog = blog;
            return this;
        }

        /**
         * Setter for twitterUsername.
         * @param  twitterUsername  String value for twitterUsername.
         * @return Builder
         */
        public Builder twitterUsername(String twitterUsername) {
            this.twitterUsername = OptionalNullable.of(twitterUsername);
            return this;
        }

        /**
         * UnSetter for twitterUsername.
         * @return Builder
         */
        public Builder unsetTwitterUsername() {
            twitterUsername = null;
            return this;
        }

        /**
         * Setter for company.
         * @param  company  String value for company.
         * @return Builder
         */
        public Builder company(String company) {
            this.company = company;
            return this;
        }

        /**
         * Setter for location.
         * @param  location  String value for location.
         * @return Builder
         */
        public Builder location(String location) {
            this.location = location;
            return this;
        }

        /**
         * Setter for hireable.
         * @param  hireable  Boolean value for hireable.
         * @return Builder
         */
        public Builder hireable(Boolean hireable) {
            this.hireable = hireable;
            return this;
        }

        /**
         * Setter for bio.
         * @param  bio  String value for bio.
         * @return Builder
         */
        public Builder bio(String bio) {
            this.bio = bio;
            return this;
        }

        /**
         * Builds a new {@link UserRequest} object using the set fields.
         * @return {@link UserRequest}
         */
        public UserRequest build() {
            return new UserRequest(name, email, blog, twitterUsername, company, location, hireable,
                    bio);
        }
    }
}
