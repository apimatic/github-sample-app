/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;
import java.util.List;

/**
 * This is a model class for SearchResultTextMatch type.
 */
public class SearchResultTextMatch {
    private String objectUrl;
    private OptionalNullable<String> objectType;
    private String property;
    private String fragment;
    private List<Match> matches;

    /**
     * Default constructor.
     */
    public SearchResultTextMatch() {
    }

    /**
     * Initialization constructor.
     * @param  objectUrl  String value for objectUrl.
     * @param  objectType  String value for objectType.
     * @param  property  String value for property.
     * @param  fragment  String value for fragment.
     * @param  matches  List of Match value for matches.
     */
    public SearchResultTextMatch(
            String objectUrl,
            String objectType,
            String property,
            String fragment,
            List<Match> matches) {
        this.objectUrl = objectUrl;
        this.objectType = OptionalNullable.of(objectType);
        this.property = property;
        this.fragment = fragment;
        this.matches = matches;
    }

    /**
     * Internal initialization constructor.
     */
    protected SearchResultTextMatch(String objectUrl, OptionalNullable<String> objectType,
            String property, String fragment, List<Match> matches) {
        this.objectUrl = objectUrl;
        this.objectType = objectType;
        this.property = property;
        this.fragment = fragment;
        this.matches = matches;
    }

    /**
     * Getter for ObjectUrl.
     * @return Returns the String
     */
    @JsonGetter("object_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getObjectUrl() {
        return objectUrl;
    }

    /**
     * Setter for ObjectUrl.
     * @param objectUrl Value for String
     */
    @JsonSetter("object_url")
    public void setObjectUrl(String objectUrl) {
        this.objectUrl = objectUrl;
    }

    /**
     * Internal Getter for ObjectType.
     * @return Returns the Internal String
     */
    @JsonGetter("object_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetObjectType() {
        return this.objectType;
    }

    /**
     * Getter for ObjectType.
     * @return Returns the String
     */
    public String getObjectType() {
        return OptionalNullable.getFrom(objectType);
    }

    /**
     * Setter for ObjectType.
     * @param objectType Value for String
     */
    @JsonSetter("object_type")
    public void setObjectType(String objectType) {
        this.objectType = OptionalNullable.of(objectType);
    }

    /**
     * UnSetter for ObjectType.
     */
    public void unsetObjectType() {
        objectType = null;
    }

    /**
     * Getter for Property.
     * @return Returns the String
     */
    @JsonGetter("property")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getProperty() {
        return property;
    }

    /**
     * Setter for Property.
     * @param property Value for String
     */
    @JsonSetter("property")
    public void setProperty(String property) {
        this.property = property;
    }

    /**
     * Getter for Fragment.
     * @return Returns the String
     */
    @JsonGetter("fragment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFragment() {
        return fragment;
    }

    /**
     * Setter for Fragment.
     * @param fragment Value for String
     */
    @JsonSetter("fragment")
    public void setFragment(String fragment) {
        this.fragment = fragment;
    }

    /**
     * Getter for Matches.
     * @return Returns the List of Match
     */
    @JsonGetter("matches")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Match> getMatches() {
        return matches;
    }

    /**
     * Setter for Matches.
     * @param matches Value for List of Match
     */
    @JsonSetter("matches")
    public void setMatches(List<Match> matches) {
        this.matches = matches;
    }

    /**
     * Converts this SearchResultTextMatch into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SearchResultTextMatch [" + "objectUrl=" + objectUrl + ", objectType=" + objectType
                + ", property=" + property + ", fragment=" + fragment + ", matches=" + matches
                + "]";
    }

    /**
     * Builds a new {@link SearchResultTextMatch.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SearchResultTextMatch.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .objectUrl(getObjectUrl())
                .property(getProperty())
                .fragment(getFragment())
                .matches(getMatches());
        builder.objectType = internalGetObjectType();
        return builder;
    }

    /**
     * Class to build instances of {@link SearchResultTextMatch}.
     */
    public static class Builder {
        private String objectUrl;
        private OptionalNullable<String> objectType;
        private String property;
        private String fragment;
        private List<Match> matches;



        /**
         * Setter for objectUrl.
         * @param  objectUrl  String value for objectUrl.
         * @return Builder
         */
        public Builder objectUrl(String objectUrl) {
            this.objectUrl = objectUrl;
            return this;
        }

        /**
         * Setter for objectType.
         * @param  objectType  String value for objectType.
         * @return Builder
         */
        public Builder objectType(String objectType) {
            this.objectType = OptionalNullable.of(objectType);
            return this;
        }

        /**
         * UnSetter for objectType.
         * @return Builder
         */
        public Builder unsetObjectType() {
            objectType = null;
            return this;
        }

        /**
         * Setter for property.
         * @param  property  String value for property.
         * @return Builder
         */
        public Builder property(String property) {
            this.property = property;
            return this;
        }

        /**
         * Setter for fragment.
         * @param  fragment  String value for fragment.
         * @return Builder
         */
        public Builder fragment(String fragment) {
            this.fragment = fragment;
            return this;
        }

        /**
         * Setter for matches.
         * @param  matches  List of Match value for matches.
         * @return Builder
         */
        public Builder matches(List<Match> matches) {
            this.matches = matches;
            return this;
        }

        /**
         * Builds a new {@link SearchResultTextMatch} object using the set fields.
         * @return {@link SearchResultTextMatch}
         */
        public SearchResultTextMatch build() {
            return new SearchResultTextMatch(objectUrl, objectType, property, fragment, matches);
        }
    }
}
