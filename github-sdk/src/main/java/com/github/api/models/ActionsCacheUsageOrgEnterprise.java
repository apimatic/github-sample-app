/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for ActionsCacheUsageOrgEnterprise type.
 */
public class ActionsCacheUsageOrgEnterprise {
    private int totalActiveCachesCount;
    private int totalActiveCachesSizeInBytes;

    /**
     * Default constructor.
     */
    public ActionsCacheUsageOrgEnterprise() {
    }

    /**
     * Initialization constructor.
     * @param  totalActiveCachesCount  int value for totalActiveCachesCount.
     * @param  totalActiveCachesSizeInBytes  int value for totalActiveCachesSizeInBytes.
     */
    public ActionsCacheUsageOrgEnterprise(
            int totalActiveCachesCount,
            int totalActiveCachesSizeInBytes) {
        this.totalActiveCachesCount = totalActiveCachesCount;
        this.totalActiveCachesSizeInBytes = totalActiveCachesSizeInBytes;
    }

    /**
     * Getter for TotalActiveCachesCount.
     * The count of active caches across all repositories of an enterprise or an organization.
     * @return Returns the int
     */
    @JsonGetter("total_active_caches_count")
    public int getTotalActiveCachesCount() {
        return totalActiveCachesCount;
    }

    /**
     * Setter for TotalActiveCachesCount.
     * The count of active caches across all repositories of an enterprise or an organization.
     * @param totalActiveCachesCount Value for int
     */
    @JsonSetter("total_active_caches_count")
    public void setTotalActiveCachesCount(int totalActiveCachesCount) {
        this.totalActiveCachesCount = totalActiveCachesCount;
    }

    /**
     * Getter for TotalActiveCachesSizeInBytes.
     * The total size in bytes of all active cache items across all repositories of an enterprise or
     * an organization.
     * @return Returns the int
     */
    @JsonGetter("total_active_caches_size_in_bytes")
    public int getTotalActiveCachesSizeInBytes() {
        return totalActiveCachesSizeInBytes;
    }

    /**
     * Setter for TotalActiveCachesSizeInBytes.
     * The total size in bytes of all active cache items across all repositories of an enterprise or
     * an organization.
     * @param totalActiveCachesSizeInBytes Value for int
     */
    @JsonSetter("total_active_caches_size_in_bytes")
    public void setTotalActiveCachesSizeInBytes(int totalActiveCachesSizeInBytes) {
        this.totalActiveCachesSizeInBytes = totalActiveCachesSizeInBytes;
    }

    /**
     * Converts this ActionsCacheUsageOrgEnterprise into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ActionsCacheUsageOrgEnterprise [" + "totalActiveCachesCount="
                + totalActiveCachesCount + ", totalActiveCachesSizeInBytes="
                + totalActiveCachesSizeInBytes + "]";
    }

    /**
     * Builds a new {@link ActionsCacheUsageOrgEnterprise.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ActionsCacheUsageOrgEnterprise.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(totalActiveCachesCount, totalActiveCachesSizeInBytes);
        return builder;
    }

    /**
     * Class to build instances of {@link ActionsCacheUsageOrgEnterprise}.
     */
    public static class Builder {
        private int totalActiveCachesCount;
        private int totalActiveCachesSizeInBytes;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  totalActiveCachesCount  int value for totalActiveCachesCount.
         * @param  totalActiveCachesSizeInBytes  int value for totalActiveCachesSizeInBytes.
         */
        public Builder(int totalActiveCachesCount, int totalActiveCachesSizeInBytes) {
            this.totalActiveCachesCount = totalActiveCachesCount;
            this.totalActiveCachesSizeInBytes = totalActiveCachesSizeInBytes;
        }

        /**
         * Setter for totalActiveCachesCount.
         * @param  totalActiveCachesCount  int value for totalActiveCachesCount.
         * @return Builder
         */
        public Builder totalActiveCachesCount(int totalActiveCachesCount) {
            this.totalActiveCachesCount = totalActiveCachesCount;
            return this;
        }

        /**
         * Setter for totalActiveCachesSizeInBytes.
         * @param  totalActiveCachesSizeInBytes  int value for totalActiveCachesSizeInBytes.
         * @return Builder
         */
        public Builder totalActiveCachesSizeInBytes(int totalActiveCachesSizeInBytes) {
            this.totalActiveCachesSizeInBytes = totalActiveCachesSizeInBytes;
            return this;
        }

        /**
         * Builds a new {@link ActionsCacheUsageOrgEnterprise} object using the set fields.
         * @return {@link ActionsCacheUsageOrgEnterprise}
         */
        public ActionsCacheUsageOrgEnterprise build() {
            return new ActionsCacheUsageOrgEnterprise(totalActiveCachesCount,
                    totalActiveCachesSizeInBytes);
        }
    }
}
