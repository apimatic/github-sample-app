/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for ReposAutolinksResponse type.
 */
public class ReposAutolinksResponse {
    private int id;
    private String keyPrefix;
    private String urlTemplate;
    private boolean isAlphanumeric;

    /**
     * Default constructor.
     */
    public ReposAutolinksResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  int value for id.
     * @param  keyPrefix  String value for keyPrefix.
     * @param  urlTemplate  String value for urlTemplate.
     * @param  isAlphanumeric  boolean value for isAlphanumeric.
     */
    public ReposAutolinksResponse(
            int id,
            String keyPrefix,
            String urlTemplate,
            boolean isAlphanumeric) {
        this.id = id;
        this.keyPrefix = keyPrefix;
        this.urlTemplate = urlTemplate;
        this.isAlphanumeric = isAlphanumeric;
    }

    /**
     * Getter for Id.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for KeyPrefix.
     * The prefix of a key that is linkified.
     * @return Returns the String
     */
    @JsonGetter("key_prefix")
    public String getKeyPrefix() {
        return keyPrefix;
    }

    /**
     * Setter for KeyPrefix.
     * The prefix of a key that is linkified.
     * @param keyPrefix Value for String
     */
    @JsonSetter("key_prefix")
    public void setKeyPrefix(String keyPrefix) {
        this.keyPrefix = keyPrefix;
    }

    /**
     * Getter for UrlTemplate.
     * A template for the target URL that is generated if a key was found.
     * @return Returns the String
     */
    @JsonGetter("url_template")
    public String getUrlTemplate() {
        return urlTemplate;
    }

    /**
     * Setter for UrlTemplate.
     * A template for the target URL that is generated if a key was found.
     * @param urlTemplate Value for String
     */
    @JsonSetter("url_template")
    public void setUrlTemplate(String urlTemplate) {
        this.urlTemplate = urlTemplate;
    }

    /**
     * Getter for IsAlphanumeric.
     * Whether this autolink reference matches alphanumeric characters. If false, this autolink
     * reference only matches numeric characters.
     * @return Returns the boolean
     */
    @JsonGetter("is_alphanumeric")
    public boolean getIsAlphanumeric() {
        return isAlphanumeric;
    }

    /**
     * Setter for IsAlphanumeric.
     * Whether this autolink reference matches alphanumeric characters. If false, this autolink
     * reference only matches numeric characters.
     * @param isAlphanumeric Value for boolean
     */
    @JsonSetter("is_alphanumeric")
    public void setIsAlphanumeric(boolean isAlphanumeric) {
        this.isAlphanumeric = isAlphanumeric;
    }

    /**
     * Converts this ReposAutolinksResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposAutolinksResponse [" + "id=" + id + ", keyPrefix=" + keyPrefix
                + ", urlTemplate=" + urlTemplate + ", isAlphanumeric=" + isAlphanumeric + "]";
    }

    /**
     * Builds a new {@link ReposAutolinksResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposAutolinksResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, keyPrefix, urlTemplate, isAlphanumeric);
        return builder;
    }

    /**
     * Class to build instances of {@link ReposAutolinksResponse}.
     */
    public static class Builder {
        private int id;
        private String keyPrefix;
        private String urlTemplate;
        private boolean isAlphanumeric;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  int value for id.
         * @param  keyPrefix  String value for keyPrefix.
         * @param  urlTemplate  String value for urlTemplate.
         * @param  isAlphanumeric  boolean value for isAlphanumeric.
         */
        public Builder(int id, String keyPrefix, String urlTemplate, boolean isAlphanumeric) {
            this.id = id;
            this.keyPrefix = keyPrefix;
            this.urlTemplate = urlTemplate;
            this.isAlphanumeric = isAlphanumeric;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for keyPrefix.
         * @param  keyPrefix  String value for keyPrefix.
         * @return Builder
         */
        public Builder keyPrefix(String keyPrefix) {
            this.keyPrefix = keyPrefix;
            return this;
        }

        /**
         * Setter for urlTemplate.
         * @param  urlTemplate  String value for urlTemplate.
         * @return Builder
         */
        public Builder urlTemplate(String urlTemplate) {
            this.urlTemplate = urlTemplate;
            return this;
        }

        /**
         * Setter for isAlphanumeric.
         * @param  isAlphanumeric  boolean value for isAlphanumeric.
         * @return Builder
         */
        public Builder isAlphanumeric(boolean isAlphanumeric) {
            this.isAlphanumeric = isAlphanumeric;
            return this;
        }

        /**
         * Builds a new {@link ReposAutolinksResponse} object using the set fields.
         * @return {@link ReposAutolinksResponse}
         */
        public ReposAutolinksResponse build() {
            return new ReposAutolinksResponse(id, keyPrefix, urlTemplate, isAlphanumeric);
        }
    }
}
