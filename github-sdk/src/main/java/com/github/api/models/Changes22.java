/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Changes22 type.
 */
public class Changes22 {
    private FieldValue fieldValue;

    /**
     * Default constructor.
     */
    public Changes22() {
    }

    /**
     * Initialization constructor.
     * @param  fieldValue  FieldValue value for fieldValue.
     */
    @JsonCreator
    public Changes22(
            @JsonProperty("field_value") FieldValue fieldValue) {
        this.fieldValue = fieldValue;
    }

    /**
     * Getter for FieldValue.
     * @return Returns the FieldValue
     */
    @JsonGetter("field_value")
    public FieldValue getFieldValue() {
        return fieldValue;
    }

    /**
     * Setter for FieldValue.
     * @param fieldValue Value for FieldValue
     */
    @JsonSetter("field_value")
    public void setFieldValue(FieldValue fieldValue) {
        this.fieldValue = fieldValue;
    }

    /**
     * Converts this Changes22 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Changes22 [" + "fieldValue=" + fieldValue + "]";
    }

    /**
     * Builds a new {@link Changes22.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Changes22.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(fieldValue);
        return builder;
    }

    /**
     * Class to build instances of {@link Changes22}.
     */
    public static class Builder {
        private FieldValue fieldValue;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  fieldValue  FieldValue value for fieldValue.
         */
        public Builder(FieldValue fieldValue) {
            this.fieldValue = fieldValue;
        }

        /**
         * Setter for fieldValue.
         * @param  fieldValue  FieldValue value for fieldValue.
         * @return Builder
         */
        public Builder fieldValue(FieldValue fieldValue) {
            this.fieldValue = fieldValue;
            return this;
        }

        /**
         * Builds a new {@link Changes22} object using the set fields.
         * @return {@link Changes22}
         */
        public Changes22 build() {
            return new Changes22(fieldValue);
        }
    }
}
