/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.github.api.models.containers.GistsRequestPublic;
import io.apimatic.core.types.BaseModel;
import java.util.Map;

/**
 * This is a model class for GistsRequest type.
 */
public class GistsRequest {
    private String description;
    private Map<String, Files4> files;
    private GistsRequestPublic mPublic;

    /**
     * Default constructor.
     */
    public GistsRequest() {
    }

    /**
     * Initialization constructor.
     * @param  files  Map of String, value for files.
     * @param  description  String value for description.
     * @param  mPublic  GistsRequestPublic value for mPublic.
     */
    public GistsRequest(
            Map<String, Files4> files,
            String description,
            GistsRequestPublic mPublic) {
        this.description = description;
        this.files = files;
        this.mPublic = mPublic;
    }

    /**
     * Getter for Description.
     * Description of the gist
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Description of the gist
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Files.
     * Names and content for the files that make up the gist
     * @return Returns the Map of String, Files4
     */
    @JsonGetter("files")
    public Map<String, Files4> getFiles() {
        return files;
    }

    /**
     * Setter for Files.
     * Names and content for the files that make up the gist
     * @param files Value for Map of String, Files4
     */
    @JsonSetter("files")
    public void setFiles(Map<String, Files4> files) {
        this.files = files;
    }

    /**
     * Getter for Public.
     * @return Returns the GistsRequestPublic
     */
    @JsonGetter("public")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public GistsRequestPublic getPublic() {
        return mPublic;
    }

    /**
     * Setter for Public.
     * @param mPublic Value for GistsRequestPublic
     */
    @JsonSetter("public")
    public void setPublic(GistsRequestPublic mPublic) {
        this.mPublic = mPublic;
    }

    /**
     * Converts this GistsRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GistsRequest [" + "files=" + files + ", description=" + description + ", mPublic="
                + mPublic + "]";
    }

    /**
     * Builds a new {@link GistsRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GistsRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(files)
                .description(getDescription())
                .mPublic(getPublic());
        return builder;
    }

    /**
     * Class to build instances of {@link GistsRequest}.
     */
    public static class Builder {
        private Map<String, Files4> files;
        private String description;
        private GistsRequestPublic mPublic;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  files  Map of String, value for files.
         */
        public Builder(Map<String, Files4> files) {
            this.files = files;
        }

        /**
         * Setter for files.
         * @param  files  Map of String, value for files.
         * @return Builder
         */
        public Builder files(Map<String, Files4> files) {
            this.files = files;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for mPublic.
         * @param  mPublic  GistsRequestPublic value for mPublic.
         * @return Builder
         */
        public Builder mPublic(GistsRequestPublic mPublic) {
            this.mPublic = mPublic;
            return this;
        }

        /**
         * Builds a new {@link GistsRequest} object using the set fields.
         * @return {@link GistsRequest}
         */
        public GistsRequest build() {
            return new GistsRequest(files, description, mPublic);
        }
    }
}
