/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * Type6121Enum to be used.
 */
public enum Type6121Enum {
    ALL,

    ENUM_PUBLIC,

    ENUM_PRIVATE,

    FORKS,

    SOURCES,

    MEMBER;


    private static TreeMap<String, Type6121Enum> valueMap = new TreeMap<>();
    private String value;

    static {
        ALL.value = "all";
        ENUM_PUBLIC.value = "public";
        ENUM_PRIVATE.value = "private";
        FORKS.value = "forks";
        SOURCES.value = "sources";
        MEMBER.value = "member";

        valueMap.put("all", ALL);
        valueMap.put("public", ENUM_PUBLIC);
        valueMap.put("private", ENUM_PRIVATE);
        valueMap.put("forks", FORKS);
        valueMap.put("sources", SOURCES);
        valueMap.put("member", MEMBER);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static Type6121Enum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of Type6121Enum values to list of string values.
     * @param toConvert The list of Type6121Enum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<Type6121Enum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (Type6121Enum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 