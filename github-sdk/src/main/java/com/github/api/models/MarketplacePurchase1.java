/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for MarketplacePurchase1 type.
 */
public class MarketplacePurchase1 {
    private String billingCycle;
    private OptionalNullable<String> nextBillingDate;
    private Boolean isInstalled;
    private OptionalNullable<Integer> unitCount;
    private Boolean onFreeTrial;
    private OptionalNullable<String> freeTrialEndsOn;
    private String updatedAt;
    private Plan5 plan;

    /**
     * Default constructor.
     */
    public MarketplacePurchase1() {
    }

    /**
     * Initialization constructor.
     * @param  billingCycle  String value for billingCycle.
     * @param  nextBillingDate  String value for nextBillingDate.
     * @param  isInstalled  Boolean value for isInstalled.
     * @param  unitCount  Integer value for unitCount.
     * @param  onFreeTrial  Boolean value for onFreeTrial.
     * @param  freeTrialEndsOn  String value for freeTrialEndsOn.
     * @param  updatedAt  String value for updatedAt.
     * @param  plan  Plan5 value for plan.
     */
    public MarketplacePurchase1(
            String billingCycle,
            String nextBillingDate,
            Boolean isInstalled,
            Integer unitCount,
            Boolean onFreeTrial,
            String freeTrialEndsOn,
            String updatedAt,
            Plan5 plan) {
        this.billingCycle = billingCycle;
        this.nextBillingDate = OptionalNullable.of(nextBillingDate);
        this.isInstalled = isInstalled;
        this.unitCount = OptionalNullable.of(unitCount);
        this.onFreeTrial = onFreeTrial;
        this.freeTrialEndsOn = OptionalNullable.of(freeTrialEndsOn);
        this.updatedAt = updatedAt;
        this.plan = plan;
    }

    /**
     * Internal initialization constructor.
     */
    protected MarketplacePurchase1(String billingCycle, OptionalNullable<String> nextBillingDate,
            Boolean isInstalled, OptionalNullable<Integer> unitCount, Boolean onFreeTrial,
            OptionalNullable<String> freeTrialEndsOn, String updatedAt, Plan5 plan) {
        this.billingCycle = billingCycle;
        this.nextBillingDate = nextBillingDate;
        this.isInstalled = isInstalled;
        this.unitCount = unitCount;
        this.onFreeTrial = onFreeTrial;
        this.freeTrialEndsOn = freeTrialEndsOn;
        this.updatedAt = updatedAt;
        this.plan = plan;
    }

    /**
     * Getter for BillingCycle.
     * @return Returns the String
     */
    @JsonGetter("billing_cycle")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingCycle() {
        return billingCycle;
    }

    /**
     * Setter for BillingCycle.
     * @param billingCycle Value for String
     */
    @JsonSetter("billing_cycle")
    public void setBillingCycle(String billingCycle) {
        this.billingCycle = billingCycle;
    }

    /**
     * Internal Getter for NextBillingDate.
     * @return Returns the Internal String
     */
    @JsonGetter("next_billing_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetNextBillingDate() {
        return this.nextBillingDate;
    }

    /**
     * Getter for NextBillingDate.
     * @return Returns the String
     */
    public String getNextBillingDate() {
        return OptionalNullable.getFrom(nextBillingDate);
    }

    /**
     * Setter for NextBillingDate.
     * @param nextBillingDate Value for String
     */
    @JsonSetter("next_billing_date")
    public void setNextBillingDate(String nextBillingDate) {
        this.nextBillingDate = OptionalNullable.of(nextBillingDate);
    }

    /**
     * UnSetter for NextBillingDate.
     */
    public void unsetNextBillingDate() {
        nextBillingDate = null;
    }

    /**
     * Getter for IsInstalled.
     * @return Returns the Boolean
     */
    @JsonGetter("is_installed")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsInstalled() {
        return isInstalled;
    }

    /**
     * Setter for IsInstalled.
     * @param isInstalled Value for Boolean
     */
    @JsonSetter("is_installed")
    public void setIsInstalled(Boolean isInstalled) {
        this.isInstalled = isInstalled;
    }

    /**
     * Internal Getter for UnitCount.
     * @return Returns the Internal Integer
     */
    @JsonGetter("unit_count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetUnitCount() {
        return this.unitCount;
    }

    /**
     * Getter for UnitCount.
     * @return Returns the Integer
     */
    public Integer getUnitCount() {
        return OptionalNullable.getFrom(unitCount);
    }

    /**
     * Setter for UnitCount.
     * @param unitCount Value for Integer
     */
    @JsonSetter("unit_count")
    public void setUnitCount(Integer unitCount) {
        this.unitCount = OptionalNullable.of(unitCount);
    }

    /**
     * UnSetter for UnitCount.
     */
    public void unsetUnitCount() {
        unitCount = null;
    }

    /**
     * Getter for OnFreeTrial.
     * @return Returns the Boolean
     */
    @JsonGetter("on_free_trial")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getOnFreeTrial() {
        return onFreeTrial;
    }

    /**
     * Setter for OnFreeTrial.
     * @param onFreeTrial Value for Boolean
     */
    @JsonSetter("on_free_trial")
    public void setOnFreeTrial(Boolean onFreeTrial) {
        this.onFreeTrial = onFreeTrial;
    }

    /**
     * Internal Getter for FreeTrialEndsOn.
     * @return Returns the Internal String
     */
    @JsonGetter("free_trial_ends_on")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFreeTrialEndsOn() {
        return this.freeTrialEndsOn;
    }

    /**
     * Getter for FreeTrialEndsOn.
     * @return Returns the String
     */
    public String getFreeTrialEndsOn() {
        return OptionalNullable.getFrom(freeTrialEndsOn);
    }

    /**
     * Setter for FreeTrialEndsOn.
     * @param freeTrialEndsOn Value for String
     */
    @JsonSetter("free_trial_ends_on")
    public void setFreeTrialEndsOn(String freeTrialEndsOn) {
        this.freeTrialEndsOn = OptionalNullable.of(freeTrialEndsOn);
    }

    /**
     * UnSetter for FreeTrialEndsOn.
     */
    public void unsetFreeTrialEndsOn() {
        freeTrialEndsOn = null;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the String
     */
    @JsonGetter("updated_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for String
     */
    @JsonSetter("updated_at")
    public void setUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Plan.
     * @return Returns the Plan5
     */
    @JsonGetter("plan")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Plan5 getPlan() {
        return plan;
    }

    /**
     * Setter for Plan.
     * @param plan Value for Plan5
     */
    @JsonSetter("plan")
    public void setPlan(Plan5 plan) {
        this.plan = plan;
    }

    /**
     * Converts this MarketplacePurchase1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "MarketplacePurchase1 [" + "billingCycle=" + billingCycle + ", nextBillingDate="
                + nextBillingDate + ", isInstalled=" + isInstalled + ", unitCount=" + unitCount
                + ", onFreeTrial=" + onFreeTrial + ", freeTrialEndsOn=" + freeTrialEndsOn
                + ", updatedAt=" + updatedAt + ", plan=" + plan + "]";
    }

    /**
     * Builds a new {@link MarketplacePurchase1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link MarketplacePurchase1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .billingCycle(getBillingCycle())
                .isInstalled(getIsInstalled())
                .onFreeTrial(getOnFreeTrial())
                .updatedAt(getUpdatedAt())
                .plan(getPlan());
        builder.nextBillingDate = internalGetNextBillingDate();
        builder.unitCount = internalGetUnitCount();
        builder.freeTrialEndsOn = internalGetFreeTrialEndsOn();
        return builder;
    }

    /**
     * Class to build instances of {@link MarketplacePurchase1}.
     */
    public static class Builder {
        private String billingCycle;
        private OptionalNullable<String> nextBillingDate;
        private Boolean isInstalled;
        private OptionalNullable<Integer> unitCount;
        private Boolean onFreeTrial;
        private OptionalNullable<String> freeTrialEndsOn;
        private String updatedAt;
        private Plan5 plan;



        /**
         * Setter for billingCycle.
         * @param  billingCycle  String value for billingCycle.
         * @return Builder
         */
        public Builder billingCycle(String billingCycle) {
            this.billingCycle = billingCycle;
            return this;
        }

        /**
         * Setter for nextBillingDate.
         * @param  nextBillingDate  String value for nextBillingDate.
         * @return Builder
         */
        public Builder nextBillingDate(String nextBillingDate) {
            this.nextBillingDate = OptionalNullable.of(nextBillingDate);
            return this;
        }

        /**
         * UnSetter for nextBillingDate.
         * @return Builder
         */
        public Builder unsetNextBillingDate() {
            nextBillingDate = null;
            return this;
        }

        /**
         * Setter for isInstalled.
         * @param  isInstalled  Boolean value for isInstalled.
         * @return Builder
         */
        public Builder isInstalled(Boolean isInstalled) {
            this.isInstalled = isInstalled;
            return this;
        }

        /**
         * Setter for unitCount.
         * @param  unitCount  Integer value for unitCount.
         * @return Builder
         */
        public Builder unitCount(Integer unitCount) {
            this.unitCount = OptionalNullable.of(unitCount);
            return this;
        }

        /**
         * UnSetter for unitCount.
         * @return Builder
         */
        public Builder unsetUnitCount() {
            unitCount = null;
            return this;
        }

        /**
         * Setter for onFreeTrial.
         * @param  onFreeTrial  Boolean value for onFreeTrial.
         * @return Builder
         */
        public Builder onFreeTrial(Boolean onFreeTrial) {
            this.onFreeTrial = onFreeTrial;
            return this;
        }

        /**
         * Setter for freeTrialEndsOn.
         * @param  freeTrialEndsOn  String value for freeTrialEndsOn.
         * @return Builder
         */
        public Builder freeTrialEndsOn(String freeTrialEndsOn) {
            this.freeTrialEndsOn = OptionalNullable.of(freeTrialEndsOn);
            return this;
        }

        /**
         * UnSetter for freeTrialEndsOn.
         * @return Builder
         */
        public Builder unsetFreeTrialEndsOn() {
            freeTrialEndsOn = null;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  String value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for plan.
         * @param  plan  Plan5 value for plan.
         * @return Builder
         */
        public Builder plan(Plan5 plan) {
            this.plan = plan;
            return this;
        }

        /**
         * Builds a new {@link MarketplacePurchase1} object using the set fields.
         * @return {@link MarketplacePurchase1}
         */
        public MarketplacePurchase1 build() {
            return new MarketplacePurchase1(billingCycle, nextBillingDate, isInstalled, unitCount,
                    onFreeTrial, freeTrialEndsOn, updatedAt, plan);
        }
    }
}
