/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for MarketplaceListingAccountsResponse type.
 */
public class MarketplaceListingAccountsResponse {
    private String url;
    private String type;
    private int id;
    private String login;
    private String organizationBillingEmail;
    private OptionalNullable<String> email;
    private Object marketplacePendingChange;
    private MarketplacePurchase1 marketplacePurchase;

    /**
     * Default constructor.
     */
    public MarketplaceListingAccountsResponse() {
    }

    /**
     * Initialization constructor.
     * @param  url  String value for url.
     * @param  type  String value for type.
     * @param  id  int value for id.
     * @param  login  String value for login.
     * @param  marketplacePurchase  MarketplacePurchase1 value for marketplacePurchase.
     * @param  organizationBillingEmail  String value for organizationBillingEmail.
     * @param  email  String value for email.
     * @param  marketplacePendingChange  Object value for marketplacePendingChange.
     */
    public MarketplaceListingAccountsResponse(
            String url,
            String type,
            int id,
            String login,
            MarketplacePurchase1 marketplacePurchase,
            String organizationBillingEmail,
            String email,
            Object marketplacePendingChange) {
        this.url = url;
        this.type = type;
        this.id = id;
        this.login = login;
        this.organizationBillingEmail = organizationBillingEmail;
        this.email = OptionalNullable.of(email);
        this.marketplacePendingChange = marketplacePendingChange;
        this.marketplacePurchase = marketplacePurchase;
    }

    /**
     * Internal initialization constructor.
     */
    protected MarketplaceListingAccountsResponse(String url, String type, int id, String login,
            MarketplacePurchase1 marketplacePurchase, String organizationBillingEmail,
            OptionalNullable<String> email, Object marketplacePendingChange) {
        this.url = url;
        this.type = type;
        this.id = id;
        this.login = login;
        this.organizationBillingEmail = organizationBillingEmail;
        this.email = email;
        this.marketplacePendingChange = marketplacePendingChange;
        this.marketplacePurchase = marketplacePurchase;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Id.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for Login.
     * @return Returns the String
     */
    @JsonGetter("login")
    public String getLogin() {
        return login;
    }

    /**
     * Setter for Login.
     * @param login Value for String
     */
    @JsonSetter("login")
    public void setLogin(String login) {
        this.login = login;
    }

    /**
     * Getter for OrganizationBillingEmail.
     * @return Returns the String
     */
    @JsonGetter("organization_billing_email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOrganizationBillingEmail() {
        return organizationBillingEmail;
    }

    /**
     * Setter for OrganizationBillingEmail.
     * @param organizationBillingEmail Value for String
     */
    @JsonSetter("organization_billing_email")
    public void setOrganizationBillingEmail(String organizationBillingEmail) {
        this.organizationBillingEmail = organizationBillingEmail;
    }

    /**
     * Internal Getter for Email.
     * @return Returns the Internal String
     */
    @JsonGetter("email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetEmail() {
        return this.email;
    }

    /**
     * Getter for Email.
     * @return Returns the String
     */
    public String getEmail() {
        return OptionalNullable.getFrom(email);
    }

    /**
     * Setter for Email.
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = OptionalNullable.of(email);
    }

    /**
     * UnSetter for Email.
     */
    public void unsetEmail() {
        email = null;
    }

    /**
     * Getter for MarketplacePendingChange.
     * @return Returns the Object
     */
    @JsonGetter("marketplace_pending_change")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getMarketplacePendingChange() {
        return marketplacePendingChange;
    }

    /**
     * Setter for MarketplacePendingChange.
     * @param marketplacePendingChange Value for Object
     */
    @JsonSetter("marketplace_pending_change")
    public void setMarketplacePendingChange(Object marketplacePendingChange) {
        this.marketplacePendingChange = marketplacePendingChange;
    }

    /**
     * Getter for MarketplacePurchase.
     * @return Returns the MarketplacePurchase1
     */
    @JsonGetter("marketplace_purchase")
    public MarketplacePurchase1 getMarketplacePurchase() {
        return marketplacePurchase;
    }

    /**
     * Setter for MarketplacePurchase.
     * @param marketplacePurchase Value for MarketplacePurchase1
     */
    @JsonSetter("marketplace_purchase")
    public void setMarketplacePurchase(MarketplacePurchase1 marketplacePurchase) {
        this.marketplacePurchase = marketplacePurchase;
    }

    /**
     * Converts this MarketplaceListingAccountsResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "MarketplaceListingAccountsResponse [" + "url=" + url + ", type=" + type + ", id="
                + id + ", login=" + login + ", marketplacePurchase=" + marketplacePurchase
                + ", organizationBillingEmail=" + organizationBillingEmail + ", email=" + email
                + ", marketplacePendingChange=" + marketplacePendingChange + "]";
    }

    /**
     * Builds a new {@link MarketplaceListingAccountsResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link MarketplaceListingAccountsResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(url, type, id, login, marketplacePurchase)
                .organizationBillingEmail(getOrganizationBillingEmail())
                .marketplacePendingChange(getMarketplacePendingChange());
        builder.email = internalGetEmail();
        return builder;
    }

    /**
     * Class to build instances of {@link MarketplaceListingAccountsResponse}.
     */
    public static class Builder {
        private String url;
        private String type;
        private int id;
        private String login;
        private MarketplacePurchase1 marketplacePurchase;
        private String organizationBillingEmail;
        private OptionalNullable<String> email;
        private Object marketplacePendingChange;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  url  String value for url.
         * @param  type  String value for type.
         * @param  id  int value for id.
         * @param  login  String value for login.
         * @param  marketplacePurchase  MarketplacePurchase1 value for marketplacePurchase.
         */
        public Builder(String url, String type, int id, String login,
                MarketplacePurchase1 marketplacePurchase) {
            this.url = url;
            this.type = type;
            this.id = id;
            this.login = login;
            this.marketplacePurchase = marketplacePurchase;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for login.
         * @param  login  String value for login.
         * @return Builder
         */
        public Builder login(String login) {
            this.login = login;
            return this;
        }

        /**
         * Setter for marketplacePurchase.
         * @param  marketplacePurchase  MarketplacePurchase1 value for marketplacePurchase.
         * @return Builder
         */
        public Builder marketplacePurchase(MarketplacePurchase1 marketplacePurchase) {
            this.marketplacePurchase = marketplacePurchase;
            return this;
        }

        /**
         * Setter for organizationBillingEmail.
         * @param  organizationBillingEmail  String value for organizationBillingEmail.
         * @return Builder
         */
        public Builder organizationBillingEmail(String organizationBillingEmail) {
            this.organizationBillingEmail = organizationBillingEmail;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = OptionalNullable.of(email);
            return this;
        }

        /**
         * UnSetter for email.
         * @return Builder
         */
        public Builder unsetEmail() {
            email = null;
            return this;
        }

        /**
         * Setter for marketplacePendingChange.
         * @param  marketplacePendingChange  Object value for marketplacePendingChange.
         * @return Builder
         */
        public Builder marketplacePendingChange(Object marketplacePendingChange) {
            this.marketplacePendingChange = marketplacePendingChange;
            return this;
        }

        /**
         * Builds a new {@link MarketplaceListingAccountsResponse} object using the set fields.
         * @return {@link MarketplaceListingAccountsResponse}
         */
        public MarketplaceListingAccountsResponse build() {
            return new MarketplaceListingAccountsResponse(url, type, id, login, marketplacePurchase,
                    organizationBillingEmail, email, marketplacePendingChange);
        }
    }
}
