/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for PorterAuthor type.
 */
public class PorterAuthor {
    private int id;
    private String remoteId;
    private String remoteName;
    private String email;
    private String name;
    private String url;
    private String importUrl;

    /**
     * Default constructor.
     */
    public PorterAuthor() {
    }

    /**
     * Initialization constructor.
     * @param  id  int value for id.
     * @param  remoteId  String value for remoteId.
     * @param  remoteName  String value for remoteName.
     * @param  email  String value for email.
     * @param  name  String value for name.
     * @param  url  String value for url.
     * @param  importUrl  String value for importUrl.
     */
    public PorterAuthor(
            int id,
            String remoteId,
            String remoteName,
            String email,
            String name,
            String url,
            String importUrl) {
        this.id = id;
        this.remoteId = remoteId;
        this.remoteName = remoteName;
        this.email = email;
        this.name = name;
        this.url = url;
        this.importUrl = importUrl;
    }

    /**
     * Getter for Id.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for RemoteId.
     * @return Returns the String
     */
    @JsonGetter("remote_id")
    public String getRemoteId() {
        return remoteId;
    }

    /**
     * Setter for RemoteId.
     * @param remoteId Value for String
     */
    @JsonSetter("remote_id")
    public void setRemoteId(String remoteId) {
        this.remoteId = remoteId;
    }

    /**
     * Getter for RemoteName.
     * @return Returns the String
     */
    @JsonGetter("remote_name")
    public String getRemoteName() {
        return remoteName;
    }

    /**
     * Setter for RemoteName.
     * @param remoteName Value for String
     */
    @JsonSetter("remote_name")
    public void setRemoteName(String remoteName) {
        this.remoteName = remoteName;
    }

    /**
     * Getter for Email.
     * @return Returns the String
     */
    @JsonGetter("email")
    public String getEmail() {
        return email;
    }

    /**
     * Setter for Email.
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for ImportUrl.
     * @return Returns the String
     */
    @JsonGetter("import_url")
    public String getImportUrl() {
        return importUrl;
    }

    /**
     * Setter for ImportUrl.
     * @param importUrl Value for String
     */
    @JsonSetter("import_url")
    public void setImportUrl(String importUrl) {
        this.importUrl = importUrl;
    }

    /**
     * Converts this PorterAuthor into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PorterAuthor [" + "id=" + id + ", remoteId=" + remoteId + ", remoteName="
                + remoteName + ", email=" + email + ", name=" + name + ", url=" + url
                + ", importUrl=" + importUrl + "]";
    }

    /**
     * Builds a new {@link PorterAuthor.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PorterAuthor.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, remoteId, remoteName, email, name, url, importUrl);
        return builder;
    }

    /**
     * Class to build instances of {@link PorterAuthor}.
     */
    public static class Builder {
        private int id;
        private String remoteId;
        private String remoteName;
        private String email;
        private String name;
        private String url;
        private String importUrl;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  int value for id.
         * @param  remoteId  String value for remoteId.
         * @param  remoteName  String value for remoteName.
         * @param  email  String value for email.
         * @param  name  String value for name.
         * @param  url  String value for url.
         * @param  importUrl  String value for importUrl.
         */
        public Builder(int id, String remoteId, String remoteName, String email, String name,
                String url, String importUrl) {
            this.id = id;
            this.remoteId = remoteId;
            this.remoteName = remoteName;
            this.email = email;
            this.name = name;
            this.url = url;
            this.importUrl = importUrl;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for remoteId.
         * @param  remoteId  String value for remoteId.
         * @return Builder
         */
        public Builder remoteId(String remoteId) {
            this.remoteId = remoteId;
            return this;
        }

        /**
         * Setter for remoteName.
         * @param  remoteName  String value for remoteName.
         * @return Builder
         */
        public Builder remoteName(String remoteName) {
            this.remoteName = remoteName;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = email;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for importUrl.
         * @param  importUrl  String value for importUrl.
         * @return Builder
         */
        public Builder importUrl(String importUrl) {
            this.importUrl = importUrl;
            return this;
        }

        /**
         * Builds a new {@link PorterAuthor} object using the set fields.
         * @return {@link PorterAuthor}
         */
        public PorterAuthor build() {
            return new PorterAuthor(id, remoteId, remoteName, email, name, url, importUrl);
        }
    }
}
