/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;
import java.time.LocalDateTime;

/**
 * This is a model class for Step type.
 */
public class Step {
    private Status3Enum status;
    private String conclusion;
    private String name;
    private int number;
    private OptionalNullable<LocalDateTime> startedAt;
    private OptionalNullable<LocalDateTime> completedAt;

    /**
     * Default constructor.
     */
    public Step() {
    }

    /**
     * Initialization constructor.
     * @param  status  Status3Enum value for status.
     * @param  conclusion  String value for conclusion.
     * @param  name  String value for name.
     * @param  number  int value for number.
     * @param  startedAt  LocalDateTime value for startedAt.
     * @param  completedAt  LocalDateTime value for completedAt.
     */
    public Step(
            Status3Enum status,
            String conclusion,
            String name,
            int number,
            LocalDateTime startedAt,
            LocalDateTime completedAt) {
        this.status = status;
        this.conclusion = conclusion;
        this.name = name;
        this.number = number;
        this.startedAt = OptionalNullable.of(startedAt);
        this.completedAt = OptionalNullable.of(completedAt);
    }

    /**
     * Internal initialization constructor.
     */
    protected Step(Status3Enum status, String conclusion, String name, int number,
            OptionalNullable<LocalDateTime> startedAt,
            OptionalNullable<LocalDateTime> completedAt) {
        this.status = status;
        this.conclusion = conclusion;
        this.name = name;
        this.number = number;
        this.startedAt = startedAt;
        this.completedAt = completedAt;
    }

    /**
     * Getter for Status.
     * @return Returns the Status3Enum
     */
    @JsonGetter("status")
    public Status3Enum getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * @param status Value for Status3Enum
     */
    @JsonSetter("status")
    public void setStatus(Status3Enum status) {
        this.status = status;
    }

    /**
     * Getter for Conclusion.
     * The outcome of the job.
     * @return Returns the String
     */
    @JsonGetter("conclusion")
    public String getConclusion() {
        return conclusion;
    }

    /**
     * Setter for Conclusion.
     * The outcome of the job.
     * @param conclusion Value for String
     */
    @JsonSetter("conclusion")
    public void setConclusion(String conclusion) {
        this.conclusion = conclusion;
    }

    /**
     * Getter for Name.
     * The name of the job.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the job.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Number.
     * @return Returns the int
     */
    @JsonGetter("number")
    public int getNumber() {
        return number;
    }

    /**
     * Setter for Number.
     * @param number Value for int
     */
    @JsonSetter("number")
    public void setNumber(int number) {
        this.number = number;
    }

    /**
     * Internal Getter for StartedAt.
     * The time that the step started, in ISO 8601 format.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("started_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetStartedAt() {
        return this.startedAt;
    }

    /**
     * Getter for StartedAt.
     * The time that the step started, in ISO 8601 format.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getStartedAt() {
        return OptionalNullable.getFrom(startedAt);
    }

    /**
     * Setter for StartedAt.
     * The time that the step started, in ISO 8601 format.
     * @param startedAt Value for LocalDateTime
     */
    @JsonSetter("started_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setStartedAt(LocalDateTime startedAt) {
        this.startedAt = OptionalNullable.of(startedAt);
    }

    /**
     * UnSetter for StartedAt.
     * The time that the step started, in ISO 8601 format.
     */
    public void unsetStartedAt() {
        startedAt = null;
    }

    /**
     * Internal Getter for CompletedAt.
     * The time that the job finished, in ISO 8601 format.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("completed_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetCompletedAt() {
        return this.completedAt;
    }

    /**
     * Getter for CompletedAt.
     * The time that the job finished, in ISO 8601 format.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getCompletedAt() {
        return OptionalNullable.getFrom(completedAt);
    }

    /**
     * Setter for CompletedAt.
     * The time that the job finished, in ISO 8601 format.
     * @param completedAt Value for LocalDateTime
     */
    @JsonSetter("completed_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCompletedAt(LocalDateTime completedAt) {
        this.completedAt = OptionalNullable.of(completedAt);
    }

    /**
     * UnSetter for CompletedAt.
     * The time that the job finished, in ISO 8601 format.
     */
    public void unsetCompletedAt() {
        completedAt = null;
    }

    /**
     * Converts this Step into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Step [" + "status=" + status + ", conclusion=" + conclusion + ", name=" + name
                + ", number=" + number + ", startedAt=" + startedAt + ", completedAt=" + completedAt
                + "]";
    }

    /**
     * Builds a new {@link Step.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Step.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(status, conclusion, name, number);
        builder.startedAt = internalGetStartedAt();
        builder.completedAt = internalGetCompletedAt();
        return builder;
    }

    /**
     * Class to build instances of {@link Step}.
     */
    public static class Builder {
        private Status3Enum status;
        private String conclusion;
        private String name;
        private int number;
        private OptionalNullable<LocalDateTime> startedAt;
        private OptionalNullable<LocalDateTime> completedAt;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  status  Status3Enum value for status.
         * @param  conclusion  String value for conclusion.
         * @param  name  String value for name.
         * @param  number  int value for number.
         */
        public Builder(Status3Enum status, String conclusion, String name, int number) {
            this.status = status;
            this.conclusion = conclusion;
            this.name = name;
            this.number = number;
        }

        /**
         * Setter for status.
         * @param  status  Status3Enum value for status.
         * @return Builder
         */
        public Builder status(Status3Enum status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for conclusion.
         * @param  conclusion  String value for conclusion.
         * @return Builder
         */
        public Builder conclusion(String conclusion) {
            this.conclusion = conclusion;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for number.
         * @param  number  int value for number.
         * @return Builder
         */
        public Builder number(int number) {
            this.number = number;
            return this;
        }

        /**
         * Setter for startedAt.
         * @param  startedAt  LocalDateTime value for startedAt.
         * @return Builder
         */
        public Builder startedAt(LocalDateTime startedAt) {
            this.startedAt = OptionalNullable.of(startedAt);
            return this;
        }

        /**
         * UnSetter for startedAt.
         * @return Builder
         */
        public Builder unsetStartedAt() {
            startedAt = null;
            return this;
        }

        /**
         * Setter for completedAt.
         * @param  completedAt  LocalDateTime value for completedAt.
         * @return Builder
         */
        public Builder completedAt(LocalDateTime completedAt) {
            this.completedAt = OptionalNullable.of(completedAt);
            return this;
        }

        /**
         * UnSetter for completedAt.
         * @return Builder
         */
        public Builder unsetCompletedAt() {
            completedAt = null;
            return this;
        }

        /**
         * Builds a new {@link Step} object using the set fields.
         * @return {@link Step}
         */
        public Step build() {
            return new Step(status, conclusion, name, number, startedAt, completedAt);
        }
    }
}
