/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for From3 type.
 */
public class From3 {
    private Organization organization;
    private Object user;

    /**
     * Default constructor.
     */
    public From3() {
    }

    /**
     * Initialization constructor.
     * @param  organization  Organization value for organization.
     * @param  user  Object value for user.
     */
    public From3(
            Organization organization,
            Object user) {
        this.organization = organization;
        this.user = user;
    }

    /**
     * Getter for Organization.
     * @return Returns the Organization
     */
    @JsonGetter("organization")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Organization getOrganization() {
        return organization;
    }

    /**
     * Setter for Organization.
     * @param organization Value for Organization
     */
    @JsonSetter("organization")
    public void setOrganization(Organization organization) {
        this.organization = organization;
    }

    /**
     * Getter for User.
     * @return Returns the Object
     */
    @JsonGetter("user")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getUser() {
        return user;
    }

    /**
     * Setter for User.
     * @param user Value for Object
     */
    @JsonSetter("user")
    public void setUser(Object user) {
        this.user = user;
    }

    /**
     * Converts this From3 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "From3 [" + "organization=" + organization + ", user=" + user + "]";
    }

    /**
     * Builds a new {@link From3.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link From3.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .organization(getOrganization())
                .user(getUser());
        return builder;
    }

    /**
     * Class to build instances of {@link From3}.
     */
    public static class Builder {
        private Organization organization;
        private Object user;



        /**
         * Setter for organization.
         * @param  organization  Organization value for organization.
         * @return Builder
         */
        public Builder organization(Organization organization) {
            this.organization = organization;
            return this;
        }

        /**
         * Setter for user.
         * @param  user  Object value for user.
         * @return Builder
         */
        public Builder user(Object user) {
            this.user = user;
            return this;
        }

        /**
         * Builds a new {@link From3} object using the set fields.
         * @return {@link From3}
         */
        public From3 build() {
            return new From3(organization, user);
        }
    }
}
