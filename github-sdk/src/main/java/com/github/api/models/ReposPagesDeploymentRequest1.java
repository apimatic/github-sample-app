/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for ReposPagesDeploymentRequest1 type.
 */
public class ReposPagesDeploymentRequest1 {
    private String artifactUrl;
    private String environment;
    private String pagesBuildVersion;
    private String oidcToken;

    /**
     * Default constructor.
     */
    public ReposPagesDeploymentRequest1() {
        environment = "github-pages";
    }

    /**
     * Initialization constructor.
     * @param  artifactUrl  String value for artifactUrl.
     * @param  pagesBuildVersion  String value for pagesBuildVersion.
     * @param  oidcToken  String value for oidcToken.
     * @param  environment  String value for environment.
     */
    public ReposPagesDeploymentRequest1(
            String artifactUrl,
            String pagesBuildVersion,
            String oidcToken,
            String environment) {
        this.artifactUrl = artifactUrl;
        this.environment = environment;
        this.pagesBuildVersion = pagesBuildVersion;
        this.oidcToken = oidcToken;
    }

    /**
     * Getter for ArtifactUrl.
     * The URL of an artifact that contains the .zip or .tar of static assets to deploy. The
     * artifact belongs to the repository.
     * @return Returns the String
     */
    @JsonGetter("artifact_url")
    public String getArtifactUrl() {
        return artifactUrl;
    }

    /**
     * Setter for ArtifactUrl.
     * The URL of an artifact that contains the .zip or .tar of static assets to deploy. The
     * artifact belongs to the repository.
     * @param artifactUrl Value for String
     */
    @JsonSetter("artifact_url")
    public void setArtifactUrl(String artifactUrl) {
        this.artifactUrl = artifactUrl;
    }

    /**
     * Getter for Environment.
     * The target environment for this GitHub Pages deployment.
     * @return Returns the String
     */
    @JsonGetter("environment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEnvironment() {
        return environment;
    }

    /**
     * Setter for Environment.
     * The target environment for this GitHub Pages deployment.
     * @param environment Value for String
     */
    @JsonSetter("environment")
    public void setEnvironment(String environment) {
        this.environment = environment;
    }

    /**
     * Getter for PagesBuildVersion.
     * A unique string that represents the version of the build for this deployment.
     * @return Returns the String
     */
    @JsonGetter("pages_build_version")
    public String getPagesBuildVersion() {
        return pagesBuildVersion;
    }

    /**
     * Setter for PagesBuildVersion.
     * A unique string that represents the version of the build for this deployment.
     * @param pagesBuildVersion Value for String
     */
    @JsonSetter("pages_build_version")
    public void setPagesBuildVersion(String pagesBuildVersion) {
        this.pagesBuildVersion = pagesBuildVersion;
    }

    /**
     * Getter for OidcToken.
     * The OIDC token issued by GitHub Actions certifying the origin of the deployment.
     * @return Returns the String
     */
    @JsonGetter("oidc_token")
    public String getOidcToken() {
        return oidcToken;
    }

    /**
     * Setter for OidcToken.
     * The OIDC token issued by GitHub Actions certifying the origin of the deployment.
     * @param oidcToken Value for String
     */
    @JsonSetter("oidc_token")
    public void setOidcToken(String oidcToken) {
        this.oidcToken = oidcToken;
    }

    /**
     * Converts this ReposPagesDeploymentRequest1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposPagesDeploymentRequest1 [" + "artifactUrl=" + artifactUrl
                + ", pagesBuildVersion=" + pagesBuildVersion + ", oidcToken=" + oidcToken
                + ", environment=" + environment + "]";
    }

    /**
     * Builds a new {@link ReposPagesDeploymentRequest1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposPagesDeploymentRequest1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(artifactUrl, pagesBuildVersion, oidcToken)
                .environment(getEnvironment());
        return builder;
    }

    /**
     * Class to build instances of {@link ReposPagesDeploymentRequest1}.
     */
    public static class Builder {
        private String artifactUrl;
        private String pagesBuildVersion;
        private String oidcToken;
        private String environment = "github-pages";

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  artifactUrl  String value for artifactUrl.
         * @param  pagesBuildVersion  String value for pagesBuildVersion.
         * @param  oidcToken  String value for oidcToken.
         */
        public Builder(String artifactUrl, String pagesBuildVersion, String oidcToken) {
            this.artifactUrl = artifactUrl;
            this.pagesBuildVersion = pagesBuildVersion;
            this.oidcToken = oidcToken;
        }

        /**
         * Setter for artifactUrl.
         * @param  artifactUrl  String value for artifactUrl.
         * @return Builder
         */
        public Builder artifactUrl(String artifactUrl) {
            this.artifactUrl = artifactUrl;
            return this;
        }

        /**
         * Setter for pagesBuildVersion.
         * @param  pagesBuildVersion  String value for pagesBuildVersion.
         * @return Builder
         */
        public Builder pagesBuildVersion(String pagesBuildVersion) {
            this.pagesBuildVersion = pagesBuildVersion;
            return this;
        }

        /**
         * Setter for oidcToken.
         * @param  oidcToken  String value for oidcToken.
         * @return Builder
         */
        public Builder oidcToken(String oidcToken) {
            this.oidcToken = oidcToken;
            return this;
        }

        /**
         * Setter for environment.
         * @param  environment  String value for environment.
         * @return Builder
         */
        public Builder environment(String environment) {
            this.environment = environment;
            return this;
        }

        /**
         * Builds a new {@link ReposPagesDeploymentRequest1} object using the set fields.
         * @return {@link ReposPagesDeploymentRequest1}
         */
        public ReposPagesDeploymentRequest1 build() {
            return new ReposPagesDeploymentRequest1(artifactUrl, pagesBuildVersion, oidcToken,
                    environment);
        }
    }
}
