/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;

/**
 * This is a model class for Key type.
 */
public class Key {
    private String key;
    private int id;
    private String url;
    private String title;
    private LocalDateTime createdAt;
    private boolean verified;
    private boolean readOnly;

    /**
     * Default constructor.
     */
    public Key() {
    }

    /**
     * Initialization constructor.
     * @param  key  String value for key.
     * @param  id  int value for id.
     * @param  url  String value for url.
     * @param  title  String value for title.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  verified  boolean value for verified.
     * @param  readOnly  boolean value for readOnly.
     */
    public Key(
            String key,
            int id,
            String url,
            String title,
            LocalDateTime createdAt,
            boolean verified,
            boolean readOnly) {
        this.key = key;
        this.id = id;
        this.url = url;
        this.title = title;
        this.createdAt = createdAt;
        this.verified = verified;
        this.readOnly = readOnly;
    }

    /**
     * Getter for Key.
     * @return Returns the String
     */
    @JsonGetter("key")
    public String getKey() {
        return key;
    }

    /**
     * Setter for Key.
     * @param key Value for String
     */
    @JsonSetter("key")
    public void setKey(String key) {
        this.key = key;
    }

    /**
     * Getter for Id.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for Title.
     * @return Returns the String
     */
    @JsonGetter("title")
    public String getTitle() {
        return title;
    }

    /**
     * Setter for Title.
     * @param title Value for String
     */
    @JsonSetter("title")
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for Verified.
     * @return Returns the boolean
     */
    @JsonGetter("verified")
    public boolean getVerified() {
        return verified;
    }

    /**
     * Setter for Verified.
     * @param verified Value for boolean
     */
    @JsonSetter("verified")
    public void setVerified(boolean verified) {
        this.verified = verified;
    }

    /**
     * Getter for ReadOnly.
     * @return Returns the boolean
     */
    @JsonGetter("read_only")
    public boolean getReadOnly() {
        return readOnly;
    }

    /**
     * Setter for ReadOnly.
     * @param readOnly Value for boolean
     */
    @JsonSetter("read_only")
    public void setReadOnly(boolean readOnly) {
        this.readOnly = readOnly;
    }

    /**
     * Converts this Key into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Key [" + "key=" + key + ", id=" + id + ", url=" + url + ", title=" + title
                + ", createdAt=" + createdAt + ", verified=" + verified + ", readOnly=" + readOnly
                + "]";
    }

    /**
     * Builds a new {@link Key.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Key.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(key, id, url, title, createdAt, verified, readOnly);
        return builder;
    }

    /**
     * Class to build instances of {@link Key}.
     */
    public static class Builder {
        private String key;
        private int id;
        private String url;
        private String title;
        private LocalDateTime createdAt;
        private boolean verified;
        private boolean readOnly;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  key  String value for key.
         * @param  id  int value for id.
         * @param  url  String value for url.
         * @param  title  String value for title.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  verified  boolean value for verified.
         * @param  readOnly  boolean value for readOnly.
         */
        public Builder(String key, int id, String url, String title, LocalDateTime createdAt,
                boolean verified, boolean readOnly) {
            this.key = key;
            this.id = id;
            this.url = url;
            this.title = title;
            this.createdAt = createdAt;
            this.verified = verified;
            this.readOnly = readOnly;
        }

        /**
         * Setter for key.
         * @param  key  String value for key.
         * @return Builder
         */
        public Builder key(String key) {
            this.key = key;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for title.
         * @param  title  String value for title.
         * @return Builder
         */
        public Builder title(String title) {
            this.title = title;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for verified.
         * @param  verified  boolean value for verified.
         * @return Builder
         */
        public Builder verified(boolean verified) {
            this.verified = verified;
            return this;
        }

        /**
         * Setter for readOnly.
         * @param  readOnly  boolean value for readOnly.
         * @return Builder
         */
        public Builder readOnly(boolean readOnly) {
            this.readOnly = readOnly;
            return this;
        }

        /**
         * Builds a new {@link Key} object using the set fields.
         * @return {@link Key}
         */
        public Key build() {
            return new Key(key, id, url, title, createdAt, verified, readOnly);
        }
    }
}
