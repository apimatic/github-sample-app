/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for SecretScanningLocationCommit type.
 */
public class SecretScanningLocationCommit {
    private String path;
    private double startLine;
    private double endLine;
    private double startColumn;
    private double endColumn;
    private String blobSha;
    private String blobUrl;
    private String commitSha;
    private String commitUrl;

    /**
     * Default constructor.
     */
    public SecretScanningLocationCommit() {
    }

    /**
     * Initialization constructor.
     * @param  path  String value for path.
     * @param  startLine  double value for startLine.
     * @param  endLine  double value for endLine.
     * @param  startColumn  double value for startColumn.
     * @param  endColumn  double value for endColumn.
     * @param  blobSha  String value for blobSha.
     * @param  blobUrl  String value for blobUrl.
     * @param  commitSha  String value for commitSha.
     * @param  commitUrl  String value for commitUrl.
     */
    @JsonCreator
    public SecretScanningLocationCommit(
            @JsonProperty("path") String path,
            @JsonProperty("start_line") double startLine,
            @JsonProperty("end_line") double endLine,
            @JsonProperty("start_column") double startColumn,
            @JsonProperty("end_column") double endColumn,
            @JsonProperty("blob_sha") String blobSha,
            @JsonProperty("blob_url") String blobUrl,
            @JsonProperty("commit_sha") String commitSha,
            @JsonProperty("commit_url") String commitUrl) {
        this.path = path;
        this.startLine = startLine;
        this.endLine = endLine;
        this.startColumn = startColumn;
        this.endColumn = endColumn;
        this.blobSha = blobSha;
        this.blobUrl = blobUrl;
        this.commitSha = commitSha;
        this.commitUrl = commitUrl;
    }

    /**
     * Getter for Path.
     * The file path in the repository
     * @return Returns the String
     */
    @JsonGetter("path")
    public String getPath() {
        return path;
    }

    /**
     * Setter for Path.
     * The file path in the repository
     * @param path Value for String
     */
    @JsonSetter("path")
    public void setPath(String path) {
        this.path = path;
    }

    /**
     * Getter for StartLine.
     * Line number at which the secret starts in the file
     * @return Returns the double
     */
    @JsonGetter("start_line")
    public double getStartLine() {
        return startLine;
    }

    /**
     * Setter for StartLine.
     * Line number at which the secret starts in the file
     * @param startLine Value for double
     */
    @JsonSetter("start_line")
    public void setStartLine(double startLine) {
        this.startLine = startLine;
    }

    /**
     * Getter for EndLine.
     * Line number at which the secret ends in the file
     * @return Returns the double
     */
    @JsonGetter("end_line")
    public double getEndLine() {
        return endLine;
    }

    /**
     * Setter for EndLine.
     * Line number at which the secret ends in the file
     * @param endLine Value for double
     */
    @JsonSetter("end_line")
    public void setEndLine(double endLine) {
        this.endLine = endLine;
    }

    /**
     * Getter for StartColumn.
     * The column at which the secret starts within the start line when the file is interpreted as
     * 8BIT ASCII
     * @return Returns the double
     */
    @JsonGetter("start_column")
    public double getStartColumn() {
        return startColumn;
    }

    /**
     * Setter for StartColumn.
     * The column at which the secret starts within the start line when the file is interpreted as
     * 8BIT ASCII
     * @param startColumn Value for double
     */
    @JsonSetter("start_column")
    public void setStartColumn(double startColumn) {
        this.startColumn = startColumn;
    }

    /**
     * Getter for EndColumn.
     * The column at which the secret ends within the end line when the file is interpreted as 8BIT
     * ASCII
     * @return Returns the double
     */
    @JsonGetter("end_column")
    public double getEndColumn() {
        return endColumn;
    }

    /**
     * Setter for EndColumn.
     * The column at which the secret ends within the end line when the file is interpreted as 8BIT
     * ASCII
     * @param endColumn Value for double
     */
    @JsonSetter("end_column")
    public void setEndColumn(double endColumn) {
        this.endColumn = endColumn;
    }

    /**
     * Getter for BlobSha.
     * SHA-1 hash ID of the associated blob
     * @return Returns the String
     */
    @JsonGetter("blob_sha")
    public String getBlobSha() {
        return blobSha;
    }

    /**
     * Setter for BlobSha.
     * SHA-1 hash ID of the associated blob
     * @param blobSha Value for String
     */
    @JsonSetter("blob_sha")
    public void setBlobSha(String blobSha) {
        this.blobSha = blobSha;
    }

    /**
     * Getter for BlobUrl.
     * The API URL to get the associated blob resource
     * @return Returns the String
     */
    @JsonGetter("blob_url")
    public String getBlobUrl() {
        return blobUrl;
    }

    /**
     * Setter for BlobUrl.
     * The API URL to get the associated blob resource
     * @param blobUrl Value for String
     */
    @JsonSetter("blob_url")
    public void setBlobUrl(String blobUrl) {
        this.blobUrl = blobUrl;
    }

    /**
     * Getter for CommitSha.
     * SHA-1 hash ID of the associated commit
     * @return Returns the String
     */
    @JsonGetter("commit_sha")
    public String getCommitSha() {
        return commitSha;
    }

    /**
     * Setter for CommitSha.
     * SHA-1 hash ID of the associated commit
     * @param commitSha Value for String
     */
    @JsonSetter("commit_sha")
    public void setCommitSha(String commitSha) {
        this.commitSha = commitSha;
    }

    /**
     * Getter for CommitUrl.
     * The API URL to get the associated commit resource
     * @return Returns the String
     */
    @JsonGetter("commit_url")
    public String getCommitUrl() {
        return commitUrl;
    }

    /**
     * Setter for CommitUrl.
     * The API URL to get the associated commit resource
     * @param commitUrl Value for String
     */
    @JsonSetter("commit_url")
    public void setCommitUrl(String commitUrl) {
        this.commitUrl = commitUrl;
    }

    /**
     * Converts this SecretScanningLocationCommit into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SecretScanningLocationCommit [" + "path=" + path + ", startLine=" + startLine
                + ", endLine=" + endLine + ", startColumn=" + startColumn + ", endColumn="
                + endColumn + ", blobSha=" + blobSha + ", blobUrl=" + blobUrl + ", commitSha="
                + commitSha + ", commitUrl=" + commitUrl + "]";
    }

    /**
     * Builds a new {@link SecretScanningLocationCommit.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SecretScanningLocationCommit.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(path, startLine, endLine, startColumn, endColumn, blobSha,
                blobUrl, commitSha, commitUrl);
        return builder;
    }

    /**
     * Class to build instances of {@link SecretScanningLocationCommit}.
     */
    public static class Builder {
        private String path;
        private double startLine;
        private double endLine;
        private double startColumn;
        private double endColumn;
        private String blobSha;
        private String blobUrl;
        private String commitSha;
        private String commitUrl;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  path  String value for path.
         * @param  startLine  double value for startLine.
         * @param  endLine  double value for endLine.
         * @param  startColumn  double value for startColumn.
         * @param  endColumn  double value for endColumn.
         * @param  blobSha  String value for blobSha.
         * @param  blobUrl  String value for blobUrl.
         * @param  commitSha  String value for commitSha.
         * @param  commitUrl  String value for commitUrl.
         */
        public Builder(String path, double startLine, double endLine, double startColumn,
                double endColumn, String blobSha, String blobUrl, String commitSha,
                String commitUrl) {
            this.path = path;
            this.startLine = startLine;
            this.endLine = endLine;
            this.startColumn = startColumn;
            this.endColumn = endColumn;
            this.blobSha = blobSha;
            this.blobUrl = blobUrl;
            this.commitSha = commitSha;
            this.commitUrl = commitUrl;
        }

        /**
         * Setter for path.
         * @param  path  String value for path.
         * @return Builder
         */
        public Builder path(String path) {
            this.path = path;
            return this;
        }

        /**
         * Setter for startLine.
         * @param  startLine  double value for startLine.
         * @return Builder
         */
        public Builder startLine(double startLine) {
            this.startLine = startLine;
            return this;
        }

        /**
         * Setter for endLine.
         * @param  endLine  double value for endLine.
         * @return Builder
         */
        public Builder endLine(double endLine) {
            this.endLine = endLine;
            return this;
        }

        /**
         * Setter for startColumn.
         * @param  startColumn  double value for startColumn.
         * @return Builder
         */
        public Builder startColumn(double startColumn) {
            this.startColumn = startColumn;
            return this;
        }

        /**
         * Setter for endColumn.
         * @param  endColumn  double value for endColumn.
         * @return Builder
         */
        public Builder endColumn(double endColumn) {
            this.endColumn = endColumn;
            return this;
        }

        /**
         * Setter for blobSha.
         * @param  blobSha  String value for blobSha.
         * @return Builder
         */
        public Builder blobSha(String blobSha) {
            this.blobSha = blobSha;
            return this;
        }

        /**
         * Setter for blobUrl.
         * @param  blobUrl  String value for blobUrl.
         * @return Builder
         */
        public Builder blobUrl(String blobUrl) {
            this.blobUrl = blobUrl;
            return this;
        }

        /**
         * Setter for commitSha.
         * @param  commitSha  String value for commitSha.
         * @return Builder
         */
        public Builder commitSha(String commitSha) {
            this.commitSha = commitSha;
            return this;
        }

        /**
         * Setter for commitUrl.
         * @param  commitUrl  String value for commitUrl.
         * @return Builder
         */
        public Builder commitUrl(String commitUrl) {
            this.commitUrl = commitUrl;
            return this;
        }

        /**
         * Builds a new {@link SecretScanningLocationCommit} object using the set fields.
         * @return {@link SecretScanningLocationCommit}
         */
        public SecretScanningLocationCommit build() {
            return new SecretScanningLocationCommit(path, startLine, endLine, startColumn,
                    endColumn, blobSha, blobUrl, commitSha, commitUrl);
        }
    }
}
