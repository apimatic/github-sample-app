/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for ShortBranch type.
 */
public class ShortBranch {
    private String name;
    private Commit3 commit;
    private boolean mProtected;
    private Protection protection;
    private String protectionUrl;

    /**
     * Default constructor.
     */
    public ShortBranch() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  commit  Commit3 value for commit.
     * @param  mProtected  boolean value for mProtected.
     * @param  protection  Protection value for protection.
     * @param  protectionUrl  String value for protectionUrl.
     */
    public ShortBranch(
            String name,
            Commit3 commit,
            boolean mProtected,
            Protection protection,
            String protectionUrl) {
        this.name = name;
        this.commit = commit;
        this.mProtected = mProtected;
        this.protection = protection;
        this.protectionUrl = protectionUrl;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Commit.
     * @return Returns the Commit3
     */
    @JsonGetter("commit")
    public Commit3 getCommit() {
        return commit;
    }

    /**
     * Setter for Commit.
     * @param commit Value for Commit3
     */
    @JsonSetter("commit")
    public void setCommit(Commit3 commit) {
        this.commit = commit;
    }

    /**
     * Getter for Protected.
     * @return Returns the boolean
     */
    @JsonGetter("protected")
    public boolean getProtected() {
        return mProtected;
    }

    /**
     * Setter for Protected.
     * @param mProtected Value for boolean
     */
    @JsonSetter("protected")
    public void setProtected(boolean mProtected) {
        this.mProtected = mProtected;
    }

    /**
     * Getter for Protection.
     * @return Returns the Protection
     */
    @JsonGetter("protection")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Protection getProtection() {
        return protection;
    }

    /**
     * Setter for Protection.
     * @param protection Value for Protection
     */
    @JsonSetter("protection")
    public void setProtection(Protection protection) {
        this.protection = protection;
    }

    /**
     * Getter for ProtectionUrl.
     * @return Returns the String
     */
    @JsonGetter("protection_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getProtectionUrl() {
        return protectionUrl;
    }

    /**
     * Setter for ProtectionUrl.
     * @param protectionUrl Value for String
     */
    @JsonSetter("protection_url")
    public void setProtectionUrl(String protectionUrl) {
        this.protectionUrl = protectionUrl;
    }

    /**
     * Converts this ShortBranch into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ShortBranch [" + "name=" + name + ", commit=" + commit + ", mProtected="
                + mProtected + ", protection=" + protection + ", protectionUrl=" + protectionUrl
                + "]";
    }

    /**
     * Builds a new {@link ShortBranch.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ShortBranch.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, commit, mProtected)
                .protection(getProtection())
                .protectionUrl(getProtectionUrl());
        return builder;
    }

    /**
     * Class to build instances of {@link ShortBranch}.
     */
    public static class Builder {
        private String name;
        private Commit3 commit;
        private boolean mProtected;
        private Protection protection;
        private String protectionUrl;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  commit  Commit3 value for commit.
         * @param  mProtected  boolean value for mProtected.
         */
        public Builder(String name, Commit3 commit, boolean mProtected) {
            this.name = name;
            this.commit = commit;
            this.mProtected = mProtected;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for commit.
         * @param  commit  Commit3 value for commit.
         * @return Builder
         */
        public Builder commit(Commit3 commit) {
            this.commit = commit;
            return this;
        }

        /**
         * Setter for mProtected.
         * @param  mProtected  boolean value for mProtected.
         * @return Builder
         */
        public Builder mProtected(boolean mProtected) {
            this.mProtected = mProtected;
            return this;
        }

        /**
         * Setter for protection.
         * @param  protection  Protection value for protection.
         * @return Builder
         */
        public Builder protection(Protection protection) {
            this.protection = protection;
            return this;
        }

        /**
         * Setter for protectionUrl.
         * @param  protectionUrl  String value for protectionUrl.
         * @return Builder
         */
        public Builder protectionUrl(String protectionUrl) {
            this.protectionUrl = protectionUrl;
            return this;
        }

        /**
         * Builds a new {@link ShortBranch} object using the set fields.
         * @return {@link ShortBranch}
         */
        public ShortBranch build() {
            return new ShortBranch(name, commit, mProtected, protection, protectionUrl);
        }
    }
}
