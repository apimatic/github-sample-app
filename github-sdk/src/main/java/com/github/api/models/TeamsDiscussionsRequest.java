/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for TeamsDiscussionsRequest type.
 */
public class TeamsDiscussionsRequest {
    private String title;
    private String body;
    private Boolean mPrivate;

    /**
     * Default constructor.
     */
    public TeamsDiscussionsRequest() {
        mPrivate = false;
    }

    /**
     * Initialization constructor.
     * @param  title  String value for title.
     * @param  body  String value for body.
     * @param  mPrivate  Boolean value for mPrivate.
     */
    public TeamsDiscussionsRequest(
            String title,
            String body,
            Boolean mPrivate) {
        this.title = title;
        this.body = body;
        this.mPrivate = mPrivate;
    }

    /**
     * Getter for Title.
     * The discussion post's title.
     * @return Returns the String
     */
    @JsonGetter("title")
    public String getTitle() {
        return title;
    }

    /**
     * Setter for Title.
     * The discussion post's title.
     * @param title Value for String
     */
    @JsonSetter("title")
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for Body.
     * The discussion post's body text.
     * @return Returns the String
     */
    @JsonGetter("body")
    public String getBody() {
        return body;
    }

    /**
     * Setter for Body.
     * The discussion post's body text.
     * @param body Value for String
     */
    @JsonSetter("body")
    public void setBody(String body) {
        this.body = body;
    }

    /**
     * Getter for Private.
     * Private posts are only visible to team members, organization owners, and team maintainers.
     * Public posts are visible to all members of the organization. Set to `true` to create a
     * private post.
     * @return Returns the Boolean
     */
    @JsonGetter("private")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getPrivate() {
        return mPrivate;
    }

    /**
     * Setter for Private.
     * Private posts are only visible to team members, organization owners, and team maintainers.
     * Public posts are visible to all members of the organization. Set to `true` to create a
     * private post.
     * @param mPrivate Value for Boolean
     */
    @JsonSetter("private")
    public void setPrivate(Boolean mPrivate) {
        this.mPrivate = mPrivate;
    }

    /**
     * Converts this TeamsDiscussionsRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TeamsDiscussionsRequest [" + "title=" + title + ", body=" + body + ", mPrivate="
                + mPrivate + "]";
    }

    /**
     * Builds a new {@link TeamsDiscussionsRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link TeamsDiscussionsRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(title, body)
                .mPrivate(getPrivate());
        return builder;
    }

    /**
     * Class to build instances of {@link TeamsDiscussionsRequest}.
     */
    public static class Builder {
        private String title;
        private String body;
        private Boolean mPrivate = false;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  title  String value for title.
         * @param  body  String value for body.
         */
        public Builder(String title, String body) {
            this.title = title;
            this.body = body;
        }

        /**
         * Setter for title.
         * @param  title  String value for title.
         * @return Builder
         */
        public Builder title(String title) {
            this.title = title;
            return this;
        }

        /**
         * Setter for body.
         * @param  body  String value for body.
         * @return Builder
         */
        public Builder body(String body) {
            this.body = body;
            return this;
        }

        /**
         * Setter for mPrivate.
         * @param  mPrivate  Boolean value for mPrivate.
         * @return Builder
         */
        public Builder mPrivate(Boolean mPrivate) {
            this.mPrivate = mPrivate;
            return this;
        }

        /**
         * Builds a new {@link TeamsDiscussionsRequest} object using the set fields.
         * @return {@link TeamsDiscussionsRequest}
         */
        public TeamsDiscussionsRequest build() {
            return new TeamsDiscussionsRequest(title, body, mPrivate);
        }
    }
}
