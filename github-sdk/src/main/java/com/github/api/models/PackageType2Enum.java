/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * PackageType2Enum to be used.
 */
public enum PackageType2Enum {
    NPM,

    MAVEN,

    RUBYGEMS,

    DOCKER,

    NUGET,

    CONTAINER;


    private static TreeMap<String, PackageType2Enum> valueMap = new TreeMap<>();
    private String value;

    static {
        NPM.value = "npm";
        MAVEN.value = "maven";
        RUBYGEMS.value = "rubygems";
        DOCKER.value = "docker";
        NUGET.value = "nuget";
        CONTAINER.value = "container";

        valueMap.put("npm", NPM);
        valueMap.put("maven", MAVEN);
        valueMap.put("rubygems", RUBYGEMS);
        valueMap.put("docker", DOCKER);
        valueMap.put("nuget", NUGET);
        valueMap.put("container", CONTAINER);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static PackageType2Enum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of PackageType2Enum values to list of string values.
     * @param toConvert The list of PackageType2Enum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<PackageType2Enum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (PackageType2Enum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 