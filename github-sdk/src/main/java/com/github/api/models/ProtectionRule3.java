/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for ProtectionRule3 type.
 */
public class ProtectionRule3 {
    private Integer id;
    private String nodeId;
    private String type;
    private Integer waitTimer;
    private List<Reviewer> reviewers;

    /**
     * Default constructor.
     */
    public ProtectionRule3() {
    }

    /**
     * Initialization constructor.
     * @param  id  Integer value for id.
     * @param  nodeId  String value for nodeId.
     * @param  type  String value for type.
     * @param  waitTimer  Integer value for waitTimer.
     * @param  reviewers  List of Reviewer value for reviewers.
     */
    public ProtectionRule3(
            Integer id,
            String nodeId,
            String type,
            Integer waitTimer,
            List<Reviewer> reviewers) {
        this.id = id;
        this.nodeId = nodeId;
        this.type = type;
        this.waitTimer = waitTimer;
        this.reviewers = reviewers;
    }

    /**
     * Getter for Id.
     * @return Returns the Integer
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for Integer
     */
    @JsonSetter("id")
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for WaitTimer.
     * The amount of time to delay a job after the job is initially triggered. The time (in minutes)
     * must be an integer between 0 and 43,200 (30 days).
     * @return Returns the Integer
     */
    @JsonGetter("wait_timer")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getWaitTimer() {
        return waitTimer;
    }

    /**
     * Setter for WaitTimer.
     * The amount of time to delay a job after the job is initially triggered. The time (in minutes)
     * must be an integer between 0 and 43,200 (30 days).
     * @param waitTimer Value for Integer
     */
    @JsonSetter("wait_timer")
    public void setWaitTimer(Integer waitTimer) {
        this.waitTimer = waitTimer;
    }

    /**
     * Getter for Reviewers.
     * The people or teams that may approve jobs that reference the environment. You can list up to
     * six users or teams as reviewers. The reviewers must have at least read access to the
     * repository. Only one of the required reviewers needs to approve the job for it to proceed.
     * @return Returns the List of Reviewer
     */
    @JsonGetter("reviewers")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Reviewer> getReviewers() {
        return reviewers;
    }

    /**
     * Setter for Reviewers.
     * The people or teams that may approve jobs that reference the environment. You can list up to
     * six users or teams as reviewers. The reviewers must have at least read access to the
     * repository. Only one of the required reviewers needs to approve the job for it to proceed.
     * @param reviewers Value for List of Reviewer
     */
    @JsonSetter("reviewers")
    public void setReviewers(List<Reviewer> reviewers) {
        this.reviewers = reviewers;
    }

    /**
     * Converts this ProtectionRule3 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ProtectionRule3 [" + "id=" + id + ", nodeId=" + nodeId + ", type=" + type
                + ", waitTimer=" + waitTimer + ", reviewers=" + reviewers + "]";
    }

    /**
     * Builds a new {@link ProtectionRule3.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ProtectionRule3.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .nodeId(getNodeId())
                .type(getType())
                .waitTimer(getWaitTimer())
                .reviewers(getReviewers());
        return builder;
    }

    /**
     * Class to build instances of {@link ProtectionRule3}.
     */
    public static class Builder {
        private Integer id;
        private String nodeId;
        private String type;
        private Integer waitTimer;
        private List<Reviewer> reviewers;



        /**
         * Setter for id.
         * @param  id  Integer value for id.
         * @return Builder
         */
        public Builder id(Integer id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for waitTimer.
         * @param  waitTimer  Integer value for waitTimer.
         * @return Builder
         */
        public Builder waitTimer(Integer waitTimer) {
            this.waitTimer = waitTimer;
            return this;
        }

        /**
         * Setter for reviewers.
         * @param  reviewers  List of Reviewer value for reviewers.
         * @return Builder
         */
        public Builder reviewers(List<Reviewer> reviewers) {
            this.reviewers = reviewers;
            return this;
        }

        /**
         * Builds a new {@link ProtectionRule3} object using the set fields.
         * @return {@link ProtectionRule3}
         */
        public ProtectionRule3 build() {
            return new ProtectionRule3(id, nodeId, type, waitTimer, reviewers);
        }
    }
}
