/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for ActionsBillingUsage type.
 */
public class ActionsBillingUsage {
    private int totalMinutesUsed;
    private int totalPaidMinutesUsed;
    private int includedMinutes;
    private MinutesUsedBreakdown minutesUsedBreakdown;

    /**
     * Default constructor.
     */
    public ActionsBillingUsage() {
    }

    /**
     * Initialization constructor.
     * @param  totalMinutesUsed  int value for totalMinutesUsed.
     * @param  totalPaidMinutesUsed  int value for totalPaidMinutesUsed.
     * @param  includedMinutes  int value for includedMinutes.
     * @param  minutesUsedBreakdown  MinutesUsedBreakdown value for minutesUsedBreakdown.
     */
    public ActionsBillingUsage(
            int totalMinutesUsed,
            int totalPaidMinutesUsed,
            int includedMinutes,
            MinutesUsedBreakdown minutesUsedBreakdown) {
        this.totalMinutesUsed = totalMinutesUsed;
        this.totalPaidMinutesUsed = totalPaidMinutesUsed;
        this.includedMinutes = includedMinutes;
        this.minutesUsedBreakdown = minutesUsedBreakdown;
    }

    /**
     * Getter for TotalMinutesUsed.
     * The sum of the free and paid GitHub Actions minutes used.
     * @return Returns the int
     */
    @JsonGetter("total_minutes_used")
    public int getTotalMinutesUsed() {
        return totalMinutesUsed;
    }

    /**
     * Setter for TotalMinutesUsed.
     * The sum of the free and paid GitHub Actions minutes used.
     * @param totalMinutesUsed Value for int
     */
    @JsonSetter("total_minutes_used")
    public void setTotalMinutesUsed(int totalMinutesUsed) {
        this.totalMinutesUsed = totalMinutesUsed;
    }

    /**
     * Getter for TotalPaidMinutesUsed.
     * The total paid GitHub Actions minutes used.
     * @return Returns the int
     */
    @JsonGetter("total_paid_minutes_used")
    public int getTotalPaidMinutesUsed() {
        return totalPaidMinutesUsed;
    }

    /**
     * Setter for TotalPaidMinutesUsed.
     * The total paid GitHub Actions minutes used.
     * @param totalPaidMinutesUsed Value for int
     */
    @JsonSetter("total_paid_minutes_used")
    public void setTotalPaidMinutesUsed(int totalPaidMinutesUsed) {
        this.totalPaidMinutesUsed = totalPaidMinutesUsed;
    }

    /**
     * Getter for IncludedMinutes.
     * The amount of free GitHub Actions minutes available.
     * @return Returns the int
     */
    @JsonGetter("included_minutes")
    public int getIncludedMinutes() {
        return includedMinutes;
    }

    /**
     * Setter for IncludedMinutes.
     * The amount of free GitHub Actions minutes available.
     * @param includedMinutes Value for int
     */
    @JsonSetter("included_minutes")
    public void setIncludedMinutes(int includedMinutes) {
        this.includedMinutes = includedMinutes;
    }

    /**
     * Getter for MinutesUsedBreakdown.
     * @return Returns the MinutesUsedBreakdown
     */
    @JsonGetter("minutes_used_breakdown")
    public MinutesUsedBreakdown getMinutesUsedBreakdown() {
        return minutesUsedBreakdown;
    }

    /**
     * Setter for MinutesUsedBreakdown.
     * @param minutesUsedBreakdown Value for MinutesUsedBreakdown
     */
    @JsonSetter("minutes_used_breakdown")
    public void setMinutesUsedBreakdown(MinutesUsedBreakdown minutesUsedBreakdown) {
        this.minutesUsedBreakdown = minutesUsedBreakdown;
    }

    /**
     * Converts this ActionsBillingUsage into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ActionsBillingUsage [" + "totalMinutesUsed=" + totalMinutesUsed
                + ", totalPaidMinutesUsed=" + totalPaidMinutesUsed + ", includedMinutes="
                + includedMinutes + ", minutesUsedBreakdown=" + minutesUsedBreakdown + "]";
    }

    /**
     * Builds a new {@link ActionsBillingUsage.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ActionsBillingUsage.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(totalMinutesUsed, totalPaidMinutesUsed, includedMinutes,
                minutesUsedBreakdown);
        return builder;
    }

    /**
     * Class to build instances of {@link ActionsBillingUsage}.
     */
    public static class Builder {
        private int totalMinutesUsed;
        private int totalPaidMinutesUsed;
        private int includedMinutes;
        private MinutesUsedBreakdown minutesUsedBreakdown;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  totalMinutesUsed  int value for totalMinutesUsed.
         * @param  totalPaidMinutesUsed  int value for totalPaidMinutesUsed.
         * @param  includedMinutes  int value for includedMinutes.
         * @param  minutesUsedBreakdown  MinutesUsedBreakdown value for minutesUsedBreakdown.
         */
        public Builder(int totalMinutesUsed, int totalPaidMinutesUsed, int includedMinutes,
                MinutesUsedBreakdown minutesUsedBreakdown) {
            this.totalMinutesUsed = totalMinutesUsed;
            this.totalPaidMinutesUsed = totalPaidMinutesUsed;
            this.includedMinutes = includedMinutes;
            this.minutesUsedBreakdown = minutesUsedBreakdown;
        }

        /**
         * Setter for totalMinutesUsed.
         * @param  totalMinutesUsed  int value for totalMinutesUsed.
         * @return Builder
         */
        public Builder totalMinutesUsed(int totalMinutesUsed) {
            this.totalMinutesUsed = totalMinutesUsed;
            return this;
        }

        /**
         * Setter for totalPaidMinutesUsed.
         * @param  totalPaidMinutesUsed  int value for totalPaidMinutesUsed.
         * @return Builder
         */
        public Builder totalPaidMinutesUsed(int totalPaidMinutesUsed) {
            this.totalPaidMinutesUsed = totalPaidMinutesUsed;
            return this;
        }

        /**
         * Setter for includedMinutes.
         * @param  includedMinutes  int value for includedMinutes.
         * @return Builder
         */
        public Builder includedMinutes(int includedMinutes) {
            this.includedMinutes = includedMinutes;
            return this;
        }

        /**
         * Setter for minutesUsedBreakdown.
         * @param  minutesUsedBreakdown  MinutesUsedBreakdown value for minutesUsedBreakdown.
         * @return Builder
         */
        public Builder minutesUsedBreakdown(MinutesUsedBreakdown minutesUsedBreakdown) {
            this.minutesUsedBreakdown = minutesUsedBreakdown;
            return this;
        }

        /**
         * Builds a new {@link ActionsBillingUsage} object using the set fields.
         * @return {@link ActionsBillingUsage}
         */
        public ActionsBillingUsage build() {
            return new ActionsBillingUsage(totalMinutesUsed, totalPaidMinutesUsed, includedMinutes,
                    minutesUsedBreakdown);
        }
    }
}
