/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Commit6 type.
 */
public class Commit6 {
    private Author5 author;
    private Object committer;
    private int commentCount;
    private String message;
    private Commit3 tree;
    private String url;
    private Verification verification;

    /**
     * Default constructor.
     */
    public Commit6() {
    }

    /**
     * Initialization constructor.
     * @param  author  Author5 value for author.
     * @param  committer  Object value for committer.
     * @param  commentCount  int value for commentCount.
     * @param  message  String value for message.
     * @param  tree  Commit3 value for tree.
     * @param  url  String value for url.
     * @param  verification  Verification value for verification.
     */
    public Commit6(
            Author5 author,
            Object committer,
            int commentCount,
            String message,
            Commit3 tree,
            String url,
            Verification verification) {
        this.author = author;
        this.committer = committer;
        this.commentCount = commentCount;
        this.message = message;
        this.tree = tree;
        this.url = url;
        this.verification = verification;
    }

    /**
     * Getter for Author.
     * @return Returns the Author5
     */
    @JsonGetter("author")
    public Author5 getAuthor() {
        return author;
    }

    /**
     * Setter for Author.
     * @param author Value for Author5
     */
    @JsonSetter("author")
    public void setAuthor(Author5 author) {
        this.author = author;
    }

    /**
     * Getter for Committer.
     * @return Returns the Object
     */
    @JsonGetter("committer")
    public Object getCommitter() {
        return committer;
    }

    /**
     * Setter for Committer.
     * @param committer Value for Object
     */
    @JsonSetter("committer")
    public void setCommitter(Object committer) {
        this.committer = committer;
    }

    /**
     * Getter for CommentCount.
     * @return Returns the int
     */
    @JsonGetter("comment_count")
    public int getCommentCount() {
        return commentCount;
    }

    /**
     * Setter for CommentCount.
     * @param commentCount Value for int
     */
    @JsonSetter("comment_count")
    public void setCommentCount(int commentCount) {
        this.commentCount = commentCount;
    }

    /**
     * Getter for Message.
     * @return Returns the String
     */
    @JsonGetter("message")
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for Tree.
     * @return Returns the Commit3
     */
    @JsonGetter("tree")
    public Commit3 getTree() {
        return tree;
    }

    /**
     * Setter for Tree.
     * @param tree Value for Commit3
     */
    @JsonSetter("tree")
    public void setTree(Commit3 tree) {
        this.tree = tree;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for Verification.
     * @return Returns the Verification
     */
    @JsonGetter("verification")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Verification getVerification() {
        return verification;
    }

    /**
     * Setter for Verification.
     * @param verification Value for Verification
     */
    @JsonSetter("verification")
    public void setVerification(Verification verification) {
        this.verification = verification;
    }

    /**
     * Converts this Commit6 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Commit6 [" + "author=" + author + ", committer=" + committer + ", commentCount="
                + commentCount + ", message=" + message + ", tree=" + tree + ", url=" + url
                + ", verification=" + verification + "]";
    }

    /**
     * Builds a new {@link Commit6.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Commit6.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(author, committer, commentCount, message, tree, url)
                .verification(getVerification());
        return builder;
    }

    /**
     * Class to build instances of {@link Commit6}.
     */
    public static class Builder {
        private Author5 author;
        private Object committer;
        private int commentCount;
        private String message;
        private Commit3 tree;
        private String url;
        private Verification verification;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  author  Author5 value for author.
         * @param  committer  Object value for committer.
         * @param  commentCount  int value for commentCount.
         * @param  message  String value for message.
         * @param  tree  Commit3 value for tree.
         * @param  url  String value for url.
         */
        public Builder(Author5 author, Object committer, int commentCount, String message,
                Commit3 tree, String url) {
            this.author = author;
            this.committer = committer;
            this.commentCount = commentCount;
            this.message = message;
            this.tree = tree;
            this.url = url;
        }

        /**
         * Setter for author.
         * @param  author  Author5 value for author.
         * @return Builder
         */
        public Builder author(Author5 author) {
            this.author = author;
            return this;
        }

        /**
         * Setter for committer.
         * @param  committer  Object value for committer.
         * @return Builder
         */
        public Builder committer(Object committer) {
            this.committer = committer;
            return this;
        }

        /**
         * Setter for commentCount.
         * @param  commentCount  int value for commentCount.
         * @return Builder
         */
        public Builder commentCount(int commentCount) {
            this.commentCount = commentCount;
            return this;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for tree.
         * @param  tree  Commit3 value for tree.
         * @return Builder
         */
        public Builder tree(Commit3 tree) {
            this.tree = tree;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for verification.
         * @param  verification  Verification value for verification.
         * @return Builder
         */
        public Builder verification(Verification verification) {
            this.verification = verification;
            return this;
        }

        /**
         * Builds a new {@link Commit6} object using the set fields.
         * @return {@link Commit6}
         */
        public Commit6 build() {
            return new Commit6(author, committer, commentCount, message, tree, url, verification);
        }
    }
}
