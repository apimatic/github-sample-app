/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * Status10Enum to be used.
 */
public enum Status10Enum {
    AUTH,

    ERROR,

    NONE,

    DETECTING,

    CHOOSE,

    AUTH_FAILED,

    IMPORTING,

    MAPPING,

    WAITING_TO_PUSH,

    PUSHING,

    COMPLETE,

    SETUP,

    UNKNOWN,

    DETECTION_FOUND_MULTIPLE,

    DETECTION_FOUND_NOTHING,

    DETECTION_NEEDS_AUTH;


    private static TreeMap<String, Status10Enum> valueMap = new TreeMap<>();
    private String value;

    static {
        AUTH.value = "auth";
        ERROR.value = "error";
        NONE.value = "none";
        DETECTING.value = "detecting";
        CHOOSE.value = "choose";
        AUTH_FAILED.value = "auth_failed";
        IMPORTING.value = "importing";
        MAPPING.value = "mapping";
        WAITING_TO_PUSH.value = "waiting_to_push";
        PUSHING.value = "pushing";
        COMPLETE.value = "complete";
        SETUP.value = "setup";
        UNKNOWN.value = "unknown";
        DETECTION_FOUND_MULTIPLE.value = "detection_found_multiple";
        DETECTION_FOUND_NOTHING.value = "detection_found_nothing";
        DETECTION_NEEDS_AUTH.value = "detection_needs_auth";

        valueMap.put("auth", AUTH);
        valueMap.put("error", ERROR);
        valueMap.put("none", NONE);
        valueMap.put("detecting", DETECTING);
        valueMap.put("choose", CHOOSE);
        valueMap.put("auth_failed", AUTH_FAILED);
        valueMap.put("importing", IMPORTING);
        valueMap.put("mapping", MAPPING);
        valueMap.put("waiting_to_push", WAITING_TO_PUSH);
        valueMap.put("pushing", PUSHING);
        valueMap.put("complete", COMPLETE);
        valueMap.put("setup", SETUP);
        valueMap.put("unknown", UNKNOWN);
        valueMap.put("detection_found_multiple", DETECTION_FOUND_MULTIPLE);
        valueMap.put("detection_found_nothing", DETECTION_FOUND_NOTHING);
        valueMap.put("detection_needs_auth", DETECTION_NEEDS_AUTH);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static Status10Enum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of Status10Enum values to list of string values.
     * @param toConvert The list of Status10Enum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<Status10Enum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (Status10Enum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 