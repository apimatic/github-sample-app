/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for ReposTrafficViewsResponse type.
 */
public class ReposTrafficViewsResponse {
    private int count;
    private int uniques;
    private List<Traffic> views;

    /**
     * Default constructor.
     */
    public ReposTrafficViewsResponse() {
    }

    /**
     * Initialization constructor.
     * @param  count  int value for count.
     * @param  uniques  int value for uniques.
     * @param  views  List of Traffic value for views.
     */
    public ReposTrafficViewsResponse(
            int count,
            int uniques,
            List<Traffic> views) {
        this.count = count;
        this.uniques = uniques;
        this.views = views;
    }

    /**
     * Getter for Count.
     * @return Returns the int
     */
    @JsonGetter("count")
    public int getCount() {
        return count;
    }

    /**
     * Setter for Count.
     * @param count Value for int
     */
    @JsonSetter("count")
    public void setCount(int count) {
        this.count = count;
    }

    /**
     * Getter for Uniques.
     * @return Returns the int
     */
    @JsonGetter("uniques")
    public int getUniques() {
        return uniques;
    }

    /**
     * Setter for Uniques.
     * @param uniques Value for int
     */
    @JsonSetter("uniques")
    public void setUniques(int uniques) {
        this.uniques = uniques;
    }

    /**
     * Getter for Views.
     * @return Returns the List of Traffic
     */
    @JsonGetter("views")
    public List<Traffic> getViews() {
        return views;
    }

    /**
     * Setter for Views.
     * @param views Value for List of Traffic
     */
    @JsonSetter("views")
    public void setViews(List<Traffic> views) {
        this.views = views;
    }

    /**
     * Converts this ReposTrafficViewsResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposTrafficViewsResponse [" + "count=" + count + ", uniques=" + uniques
                + ", views=" + views + "]";
    }

    /**
     * Builds a new {@link ReposTrafficViewsResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposTrafficViewsResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(count, uniques, views);
        return builder;
    }

    /**
     * Class to build instances of {@link ReposTrafficViewsResponse}.
     */
    public static class Builder {
        private int count;
        private int uniques;
        private List<Traffic> views;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  count  int value for count.
         * @param  uniques  int value for uniques.
         * @param  views  List of Traffic value for views.
         */
        public Builder(int count, int uniques, List<Traffic> views) {
            this.count = count;
            this.uniques = uniques;
            this.views = views;
        }

        /**
         * Setter for count.
         * @param  count  int value for count.
         * @return Builder
         */
        public Builder count(int count) {
            this.count = count;
            return this;
        }

        /**
         * Setter for uniques.
         * @param  uniques  int value for uniques.
         * @return Builder
         */
        public Builder uniques(int uniques) {
            this.uniques = uniques;
            return this;
        }

        /**
         * Setter for views.
         * @param  views  List of Traffic value for views.
         * @return Builder
         */
        public Builder views(List<Traffic> views) {
            this.views = views;
            return this;
        }

        /**
         * Builds a new {@link ReposTrafficViewsResponse} object using the set fields.
         * @return {@link ReposTrafficViewsResponse}
         */
        public ReposTrafficViewsResponse build() {
            return new ReposTrafficViewsResponse(count, uniques, views);
        }
    }
}
