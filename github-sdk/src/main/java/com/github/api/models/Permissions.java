/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Permissions type.
 */
public class Permissions {
    private String issues;
    private String checks;
    private String metadata;
    private String contents;
    private String deployments;

    /**
     * Default constructor.
     */
    public Permissions() {
    }

    /**
     * Initialization constructor.
     * @param  issues  String value for issues.
     * @param  checks  String value for checks.
     * @param  metadata  String value for metadata.
     * @param  contents  String value for contents.
     * @param  deployments  String value for deployments.
     */
    public Permissions(
            String issues,
            String checks,
            String metadata,
            String contents,
            String deployments) {
        this.issues = issues;
        this.checks = checks;
        this.metadata = metadata;
        this.contents = contents;
        this.deployments = deployments;
    }

    /**
     * Getter for Issues.
     * @return Returns the String
     */
    @JsonGetter("issues")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIssues() {
        return issues;
    }

    /**
     * Setter for Issues.
     * @param issues Value for String
     */
    @JsonSetter("issues")
    public void setIssues(String issues) {
        this.issues = issues;
    }

    /**
     * Getter for Checks.
     * @return Returns the String
     */
    @JsonGetter("checks")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getChecks() {
        return checks;
    }

    /**
     * Setter for Checks.
     * @param checks Value for String
     */
    @JsonSetter("checks")
    public void setChecks(String checks) {
        this.checks = checks;
    }

    /**
     * Getter for Metadata.
     * @return Returns the String
     */
    @JsonGetter("metadata")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * @param metadata Value for String
     */
    @JsonSetter("metadata")
    public void setMetadata(String metadata) {
        this.metadata = metadata;
    }

    /**
     * Getter for Contents.
     * @return Returns the String
     */
    @JsonGetter("contents")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getContents() {
        return contents;
    }

    /**
     * Setter for Contents.
     * @param contents Value for String
     */
    @JsonSetter("contents")
    public void setContents(String contents) {
        this.contents = contents;
    }

    /**
     * Getter for Deployments.
     * @return Returns the String
     */
    @JsonGetter("deployments")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDeployments() {
        return deployments;
    }

    /**
     * Setter for Deployments.
     * @param deployments Value for String
     */
    @JsonSetter("deployments")
    public void setDeployments(String deployments) {
        this.deployments = deployments;
    }

    /**
     * Converts this Permissions into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Permissions [" + "issues=" + issues + ", checks=" + checks + ", metadata="
                + metadata + ", contents=" + contents + ", deployments=" + deployments + "]";
    }

    /**
     * Builds a new {@link Permissions.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Permissions.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .issues(getIssues())
                .checks(getChecks())
                .metadata(getMetadata())
                .contents(getContents())
                .deployments(getDeployments());
        return builder;
    }

    /**
     * Class to build instances of {@link Permissions}.
     */
    public static class Builder {
        private String issues;
        private String checks;
        private String metadata;
        private String contents;
        private String deployments;



        /**
         * Setter for issues.
         * @param  issues  String value for issues.
         * @return Builder
         */
        public Builder issues(String issues) {
            this.issues = issues;
            return this;
        }

        /**
         * Setter for checks.
         * @param  checks  String value for checks.
         * @return Builder
         */
        public Builder checks(String checks) {
            this.checks = checks;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  String value for metadata.
         * @return Builder
         */
        public Builder metadata(String metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Setter for contents.
         * @param  contents  String value for contents.
         * @return Builder
         */
        public Builder contents(String contents) {
            this.contents = contents;
            return this;
        }

        /**
         * Setter for deployments.
         * @param  deployments  String value for deployments.
         * @return Builder
         */
        public Builder deployments(String deployments) {
            this.deployments = deployments;
            return this;
        }

        /**
         * Builds a new {@link Permissions} object using the set fields.
         * @return {@link Permissions}
         */
        public Permissions build() {
            return new Permissions(issues, checks, metadata, contents, deployments);
        }
    }
}
