/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;

/**
 * This is a model class for GistCommit type.
 */
public class GistCommit {
    private String url;
    private String version;
    private Object user;
    private ChangeStatus changeStatus;
    private LocalDateTime committedAt;

    /**
     * Default constructor.
     */
    public GistCommit() {
    }

    /**
     * Initialization constructor.
     * @param  url  String value for url.
     * @param  version  String value for version.
     * @param  user  Object value for user.
     * @param  changeStatus  ChangeStatus value for changeStatus.
     * @param  committedAt  LocalDateTime value for committedAt.
     */
    public GistCommit(
            String url,
            String version,
            Object user,
            ChangeStatus changeStatus,
            LocalDateTime committedAt) {
        this.url = url;
        this.version = version;
        this.user = user;
        this.changeStatus = changeStatus;
        this.committedAt = committedAt;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for Version.
     * @return Returns the String
     */
    @JsonGetter("version")
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for User.
     * @return Returns the Object
     */
    @JsonGetter("user")
    public Object getUser() {
        return user;
    }

    /**
     * Setter for User.
     * @param user Value for Object
     */
    @JsonSetter("user")
    public void setUser(Object user) {
        this.user = user;
    }

    /**
     * Getter for ChangeStatus.
     * @return Returns the ChangeStatus
     */
    @JsonGetter("change_status")
    public ChangeStatus getChangeStatus() {
        return changeStatus;
    }

    /**
     * Setter for ChangeStatus.
     * @param changeStatus Value for ChangeStatus
     */
    @JsonSetter("change_status")
    public void setChangeStatus(ChangeStatus changeStatus) {
        this.changeStatus = changeStatus;
    }

    /**
     * Getter for CommittedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("committed_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCommittedAt() {
        return committedAt;
    }

    /**
     * Setter for CommittedAt.
     * @param committedAt Value for LocalDateTime
     */
    @JsonSetter("committed_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCommittedAt(LocalDateTime committedAt) {
        this.committedAt = committedAt;
    }

    /**
     * Converts this GistCommit into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GistCommit [" + "url=" + url + ", version=" + version + ", user=" + user
                + ", changeStatus=" + changeStatus + ", committedAt=" + committedAt + "]";
    }

    /**
     * Builds a new {@link GistCommit.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GistCommit.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(url, version, user, changeStatus, committedAt);
        return builder;
    }

    /**
     * Class to build instances of {@link GistCommit}.
     */
    public static class Builder {
        private String url;
        private String version;
        private Object user;
        private ChangeStatus changeStatus;
        private LocalDateTime committedAt;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  url  String value for url.
         * @param  version  String value for version.
         * @param  user  Object value for user.
         * @param  changeStatus  ChangeStatus value for changeStatus.
         * @param  committedAt  LocalDateTime value for committedAt.
         */
        public Builder(String url, String version, Object user, ChangeStatus changeStatus,
                LocalDateTime committedAt) {
            this.url = url;
            this.version = version;
            this.user = user;
            this.changeStatus = changeStatus;
            this.committedAt = committedAt;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for user.
         * @param  user  Object value for user.
         * @return Builder
         */
        public Builder user(Object user) {
            this.user = user;
            return this;
        }

        /**
         * Setter for changeStatus.
         * @param  changeStatus  ChangeStatus value for changeStatus.
         * @return Builder
         */
        public Builder changeStatus(ChangeStatus changeStatus) {
            this.changeStatus = changeStatus;
            return this;
        }

        /**
         * Setter for committedAt.
         * @param  committedAt  LocalDateTime value for committedAt.
         * @return Builder
         */
        public Builder committedAt(LocalDateTime committedAt) {
            this.committedAt = committedAt;
            return this;
        }

        /**
         * Builds a new {@link GistCommit} object using the set fields.
         * @return {@link GistCommit}
         */
        public GistCommit build() {
            return new GistCommit(url, version, user, changeStatus, committedAt);
        }
    }
}
