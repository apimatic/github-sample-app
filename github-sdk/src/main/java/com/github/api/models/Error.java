/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.github.api.models.containers.ErrorValue;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Error type.
 */
public class Error {
    private String resource;
    private String field;
    private String message;
    private String code;
    private Integer index;
    private ErrorValue value;

    /**
     * Default constructor.
     */
    public Error() {
    }

    /**
     * Initialization constructor.
     * @param  code  String value for code.
     * @param  resource  String value for resource.
     * @param  field  String value for field.
     * @param  message  String value for message.
     * @param  index  Integer value for index.
     * @param  value  ErrorValue value for value.
     */
    public Error(
            String code,
            String resource,
            String field,
            String message,
            Integer index,
            ErrorValue value) {
        this.resource = resource;
        this.field = field;
        this.message = message;
        this.code = code;
        this.index = index;
        this.value = value;
    }

    /**
     * Getter for Resource.
     * @return Returns the String
     */
    @JsonGetter("resource")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getResource() {
        return resource;
    }

    /**
     * Setter for Resource.
     * @param resource Value for String
     */
    @JsonSetter("resource")
    public void setResource(String resource) {
        this.resource = resource;
    }

    /**
     * Getter for Field.
     * @return Returns the String
     */
    @JsonGetter("field")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getField() {
        return field;
    }

    /**
     * Setter for Field.
     * @param field Value for String
     */
    @JsonSetter("field")
    public void setField(String field) {
        this.field = field;
    }

    /**
     * Getter for Message.
     * @return Returns the String
     */
    @JsonGetter("message")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for Code.
     * @return Returns the String
     */
    @JsonGetter("code")
    public String getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * @param code Value for String
     */
    @JsonSetter("code")
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for Index.
     * @return Returns the Integer
     */
    @JsonGetter("index")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIndex() {
        return index;
    }

    /**
     * Setter for Index.
     * @param index Value for Integer
     */
    @JsonSetter("index")
    public void setIndex(Integer index) {
        this.index = index;
    }

    /**
     * Getter for Value.
     * @return Returns the ErrorValue
     */
    @JsonGetter("value")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ErrorValue getValue() {
        return value;
    }

    /**
     * Setter for Value.
     * @param value Value for ErrorValue
     */
    @JsonSetter("value")
    public void setValue(ErrorValue value) {
        this.value = value;
    }

    /**
     * Converts this Error into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Error [" + "code=" + code + ", resource=" + resource + ", field=" + field
                + ", message=" + message + ", index=" + index + ", value=" + value + "]";
    }

    /**
     * Builds a new {@link Error.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Error.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(code)
                .resource(getResource())
                .field(getField())
                .message(getMessage())
                .index(getIndex())
                .value(getValue());
        return builder;
    }

    /**
     * Class to build instances of {@link Error}.
     */
    public static class Builder {
        private String code;
        private String resource;
        private String field;
        private String message;
        private Integer index;
        private ErrorValue value;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  code  String value for code.
         */
        public Builder(String code) {
            this.code = code;
        }

        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for resource.
         * @param  resource  String value for resource.
         * @return Builder
         */
        public Builder resource(String resource) {
            this.resource = resource;
            return this;
        }

        /**
         * Setter for field.
         * @param  field  String value for field.
         * @return Builder
         */
        public Builder field(String field) {
            this.field = field;
            return this;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for index.
         * @param  index  Integer value for index.
         * @return Builder
         */
        public Builder index(Integer index) {
            this.index = index;
            return this;
        }

        /**
         * Setter for value.
         * @param  value  ErrorValue value for value.
         * @return Builder
         */
        public Builder value(ErrorValue value) {
            this.value = value;
            return this;
        }

        /**
         * Builds a new {@link Error} object using the set fields.
         * @return {@link Error}
         */
        public Error build() {
            return new Error(code, resource, field, message, index, value);
        }
    }
}
