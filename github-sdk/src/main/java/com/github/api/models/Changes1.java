/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Changes1 type.
 */
public class Changes1 {
    private Category1 category;

    /**
     * Default constructor.
     */
    public Changes1() {
    }

    /**
     * Initialization constructor.
     * @param  category  Category1 value for category.
     */
    public Changes1(
            Category1 category) {
        this.category = category;
    }

    /**
     * Getter for Category.
     * @return Returns the Category1
     */
    @JsonGetter("category")
    public Category1 getCategory() {
        return category;
    }

    /**
     * Setter for Category.
     * @param category Value for Category1
     */
    @JsonSetter("category")
    public void setCategory(Category1 category) {
        this.category = category;
    }

    /**
     * Converts this Changes1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Changes1 [" + "category=" + category + "]";
    }

    /**
     * Builds a new {@link Changes1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Changes1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(category);
        return builder;
    }

    /**
     * Class to build instances of {@link Changes1}.
     */
    public static class Builder {
        private Category1 category;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  category  Category1 value for category.
         */
        public Builder(Category1 category) {
            this.category = category;
        }

        /**
         * Setter for category.
         * @param  category  Category1 value for category.
         * @return Builder
         */
        public Builder category(Category1 category) {
            this.category = category;
            return this;
        }

        /**
         * Builds a new {@link Changes1} object using the set fields.
         * @return {@link Changes1}
         */
        public Changes1 build() {
            return new Changes1(category);
        }
    }
}
