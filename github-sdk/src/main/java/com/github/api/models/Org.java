/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Org type.
 */
public class Org {
    private int id;
    private String login;
    private String displayLogin;
    private String gravatarId;
    private String url;
    private String avatarUrl;

    /**
     * Default constructor.
     */
    public Org() {
    }

    /**
     * Initialization constructor.
     * @param  id  int value for id.
     * @param  login  String value for login.
     * @param  gravatarId  String value for gravatarId.
     * @param  url  String value for url.
     * @param  avatarUrl  String value for avatarUrl.
     * @param  displayLogin  String value for displayLogin.
     */
    public Org(
            int id,
            String login,
            String gravatarId,
            String url,
            String avatarUrl,
            String displayLogin) {
        this.id = id;
        this.login = login;
        this.displayLogin = displayLogin;
        this.gravatarId = gravatarId;
        this.url = url;
        this.avatarUrl = avatarUrl;
    }

    /**
     * Getter for Id.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for Login.
     * @return Returns the String
     */
    @JsonGetter("login")
    public String getLogin() {
        return login;
    }

    /**
     * Setter for Login.
     * @param login Value for String
     */
    @JsonSetter("login")
    public void setLogin(String login) {
        this.login = login;
    }

    /**
     * Getter for DisplayLogin.
     * @return Returns the String
     */
    @JsonGetter("display_login")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDisplayLogin() {
        return displayLogin;
    }

    /**
     * Setter for DisplayLogin.
     * @param displayLogin Value for String
     */
    @JsonSetter("display_login")
    public void setDisplayLogin(String displayLogin) {
        this.displayLogin = displayLogin;
    }

    /**
     * Getter for GravatarId.
     * @return Returns the String
     */
    @JsonGetter("gravatar_id")
    public String getGravatarId() {
        return gravatarId;
    }

    /**
     * Setter for GravatarId.
     * @param gravatarId Value for String
     */
    @JsonSetter("gravatar_id")
    public void setGravatarId(String gravatarId) {
        this.gravatarId = gravatarId;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for AvatarUrl.
     * @return Returns the String
     */
    @JsonGetter("avatar_url")
    public String getAvatarUrl() {
        return avatarUrl;
    }

    /**
     * Setter for AvatarUrl.
     * @param avatarUrl Value for String
     */
    @JsonSetter("avatar_url")
    public void setAvatarUrl(String avatarUrl) {
        this.avatarUrl = avatarUrl;
    }

    /**
     * Converts this Org into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Org [" + "id=" + id + ", login=" + login + ", gravatarId=" + gravatarId + ", url="
                + url + ", avatarUrl=" + avatarUrl + ", displayLogin=" + displayLogin + "]";
    }

    /**
     * Builds a new {@link Org.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Org.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, login, gravatarId, url, avatarUrl)
                .displayLogin(getDisplayLogin());
        return builder;
    }

    /**
     * Class to build instances of {@link Org}.
     */
    public static class Builder {
        private int id;
        private String login;
        private String gravatarId;
        private String url;
        private String avatarUrl;
        private String displayLogin;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  int value for id.
         * @param  login  String value for login.
         * @param  gravatarId  String value for gravatarId.
         * @param  url  String value for url.
         * @param  avatarUrl  String value for avatarUrl.
         */
        public Builder(int id, String login, String gravatarId, String url, String avatarUrl) {
            this.id = id;
            this.login = login;
            this.gravatarId = gravatarId;
            this.url = url;
            this.avatarUrl = avatarUrl;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for login.
         * @param  login  String value for login.
         * @return Builder
         */
        public Builder login(String login) {
            this.login = login;
            return this;
        }

        /**
         * Setter for gravatarId.
         * @param  gravatarId  String value for gravatarId.
         * @return Builder
         */
        public Builder gravatarId(String gravatarId) {
            this.gravatarId = gravatarId;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for avatarUrl.
         * @param  avatarUrl  String value for avatarUrl.
         * @return Builder
         */
        public Builder avatarUrl(String avatarUrl) {
            this.avatarUrl = avatarUrl;
            return this;
        }

        /**
         * Setter for displayLogin.
         * @param  displayLogin  String value for displayLogin.
         * @return Builder
         */
        public Builder displayLogin(String displayLogin) {
            this.displayLogin = displayLogin;
            return this;
        }

        /**
         * Builds a new {@link Org} object using the set fields.
         * @return {@link Org}
         */
        public Org build() {
            return new Org(id, login, gravatarId, url, avatarUrl, displayLogin);
        }
    }
}
