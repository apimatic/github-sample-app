/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for MinutesUsedBreakdown type.
 */
public class MinutesUsedBreakdown {
    private Integer uBUNTU;
    private Integer mACOS;
    private Integer wINDOWS;
    private Integer ubuntu4Core;
    private Integer ubuntu8Core;
    private Integer ubuntu16Core;
    private Integer ubuntu32Core;
    private Integer ubuntu64Core;
    private Integer windows4Core;
    private Integer windows8Core;
    private Integer windows16Core;
    private Integer windows32Core;
    private Integer windows64Core;
    private Integer macos12Core;
    private Integer total;

    /**
     * Default constructor.
     */
    public MinutesUsedBreakdown() {
    }

    /**
     * Initialization constructor.
     * @param  uBUNTU  Integer value for uBUNTU.
     * @param  mACOS  Integer value for mACOS.
     * @param  wINDOWS  Integer value for wINDOWS.
     * @param  ubuntu4Core  Integer value for ubuntu4Core.
     * @param  ubuntu8Core  Integer value for ubuntu8Core.
     * @param  ubuntu16Core  Integer value for ubuntu16Core.
     * @param  ubuntu32Core  Integer value for ubuntu32Core.
     * @param  ubuntu64Core  Integer value for ubuntu64Core.
     * @param  windows4Core  Integer value for windows4Core.
     * @param  windows8Core  Integer value for windows8Core.
     * @param  windows16Core  Integer value for windows16Core.
     * @param  windows32Core  Integer value for windows32Core.
     * @param  windows64Core  Integer value for windows64Core.
     * @param  macos12Core  Integer value for macos12Core.
     * @param  total  Integer value for total.
     */
    public MinutesUsedBreakdown(
            Integer uBUNTU,
            Integer mACOS,
            Integer wINDOWS,
            Integer ubuntu4Core,
            Integer ubuntu8Core,
            Integer ubuntu16Core,
            Integer ubuntu32Core,
            Integer ubuntu64Core,
            Integer windows4Core,
            Integer windows8Core,
            Integer windows16Core,
            Integer windows32Core,
            Integer windows64Core,
            Integer macos12Core,
            Integer total) {
        this.uBUNTU = uBUNTU;
        this.mACOS = mACOS;
        this.wINDOWS = wINDOWS;
        this.ubuntu4Core = ubuntu4Core;
        this.ubuntu8Core = ubuntu8Core;
        this.ubuntu16Core = ubuntu16Core;
        this.ubuntu32Core = ubuntu32Core;
        this.ubuntu64Core = ubuntu64Core;
        this.windows4Core = windows4Core;
        this.windows8Core = windows8Core;
        this.windows16Core = windows16Core;
        this.windows32Core = windows32Core;
        this.windows64Core = windows64Core;
        this.macos12Core = macos12Core;
        this.total = total;
    }

    /**
     * Getter for UBUNTU.
     * Total minutes used on Ubuntu runner machines.
     * @return Returns the Integer
     */
    @JsonGetter("UBUNTU")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getUBUNTU() {
        return uBUNTU;
    }

    /**
     * Setter for UBUNTU.
     * Total minutes used on Ubuntu runner machines.
     * @param uBUNTU Value for Integer
     */
    @JsonSetter("UBUNTU")
    public void setUBUNTU(Integer uBUNTU) {
        this.uBUNTU = uBUNTU;
    }

    /**
     * Getter for MACOS.
     * Total minutes used on macOS runner machines.
     * @return Returns the Integer
     */
    @JsonGetter("MACOS")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMACOS() {
        return mACOS;
    }

    /**
     * Setter for MACOS.
     * Total minutes used on macOS runner machines.
     * @param mACOS Value for Integer
     */
    @JsonSetter("MACOS")
    public void setMACOS(Integer mACOS) {
        this.mACOS = mACOS;
    }

    /**
     * Getter for WINDOWS.
     * Total minutes used on Windows runner machines.
     * @return Returns the Integer
     */
    @JsonGetter("WINDOWS")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getWINDOWS() {
        return wINDOWS;
    }

    /**
     * Setter for WINDOWS.
     * Total minutes used on Windows runner machines.
     * @param wINDOWS Value for Integer
     */
    @JsonSetter("WINDOWS")
    public void setWINDOWS(Integer wINDOWS) {
        this.wINDOWS = wINDOWS;
    }

    /**
     * Getter for Ubuntu4Core.
     * Total minutes used on Ubuntu 4 core runner machines.
     * @return Returns the Integer
     */
    @JsonGetter("ubuntu_4_core")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getUbuntu4Core() {
        return ubuntu4Core;
    }

    /**
     * Setter for Ubuntu4Core.
     * Total minutes used on Ubuntu 4 core runner machines.
     * @param ubuntu4Core Value for Integer
     */
    @JsonSetter("ubuntu_4_core")
    public void setUbuntu4Core(Integer ubuntu4Core) {
        this.ubuntu4Core = ubuntu4Core;
    }

    /**
     * Getter for Ubuntu8Core.
     * Total minutes used on Ubuntu 8 core runner machines.
     * @return Returns the Integer
     */
    @JsonGetter("ubuntu_8_core")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getUbuntu8Core() {
        return ubuntu8Core;
    }

    /**
     * Setter for Ubuntu8Core.
     * Total minutes used on Ubuntu 8 core runner machines.
     * @param ubuntu8Core Value for Integer
     */
    @JsonSetter("ubuntu_8_core")
    public void setUbuntu8Core(Integer ubuntu8Core) {
        this.ubuntu8Core = ubuntu8Core;
    }

    /**
     * Getter for Ubuntu16Core.
     * Total minutes used on Ubuntu 16 core runner machines.
     * @return Returns the Integer
     */
    @JsonGetter("ubuntu_16_core")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getUbuntu16Core() {
        return ubuntu16Core;
    }

    /**
     * Setter for Ubuntu16Core.
     * Total minutes used on Ubuntu 16 core runner machines.
     * @param ubuntu16Core Value for Integer
     */
    @JsonSetter("ubuntu_16_core")
    public void setUbuntu16Core(Integer ubuntu16Core) {
        this.ubuntu16Core = ubuntu16Core;
    }

    /**
     * Getter for Ubuntu32Core.
     * Total minutes used on Ubuntu 32 core runner machines.
     * @return Returns the Integer
     */
    @JsonGetter("ubuntu_32_core")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getUbuntu32Core() {
        return ubuntu32Core;
    }

    /**
     * Setter for Ubuntu32Core.
     * Total minutes used on Ubuntu 32 core runner machines.
     * @param ubuntu32Core Value for Integer
     */
    @JsonSetter("ubuntu_32_core")
    public void setUbuntu32Core(Integer ubuntu32Core) {
        this.ubuntu32Core = ubuntu32Core;
    }

    /**
     * Getter for Ubuntu64Core.
     * Total minutes used on Ubuntu 64 core runner machines.
     * @return Returns the Integer
     */
    @JsonGetter("ubuntu_64_core")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getUbuntu64Core() {
        return ubuntu64Core;
    }

    /**
     * Setter for Ubuntu64Core.
     * Total minutes used on Ubuntu 64 core runner machines.
     * @param ubuntu64Core Value for Integer
     */
    @JsonSetter("ubuntu_64_core")
    public void setUbuntu64Core(Integer ubuntu64Core) {
        this.ubuntu64Core = ubuntu64Core;
    }

    /**
     * Getter for Windows4Core.
     * Total minutes used on Windows 4 core runner machines.
     * @return Returns the Integer
     */
    @JsonGetter("windows_4_core")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getWindows4Core() {
        return windows4Core;
    }

    /**
     * Setter for Windows4Core.
     * Total minutes used on Windows 4 core runner machines.
     * @param windows4Core Value for Integer
     */
    @JsonSetter("windows_4_core")
    public void setWindows4Core(Integer windows4Core) {
        this.windows4Core = windows4Core;
    }

    /**
     * Getter for Windows8Core.
     * Total minutes used on Windows 8 core runner machines.
     * @return Returns the Integer
     */
    @JsonGetter("windows_8_core")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getWindows8Core() {
        return windows8Core;
    }

    /**
     * Setter for Windows8Core.
     * Total minutes used on Windows 8 core runner machines.
     * @param windows8Core Value for Integer
     */
    @JsonSetter("windows_8_core")
    public void setWindows8Core(Integer windows8Core) {
        this.windows8Core = windows8Core;
    }

    /**
     * Getter for Windows16Core.
     * Total minutes used on Windows 16 core runner machines.
     * @return Returns the Integer
     */
    @JsonGetter("windows_16_core")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getWindows16Core() {
        return windows16Core;
    }

    /**
     * Setter for Windows16Core.
     * Total minutes used on Windows 16 core runner machines.
     * @param windows16Core Value for Integer
     */
    @JsonSetter("windows_16_core")
    public void setWindows16Core(Integer windows16Core) {
        this.windows16Core = windows16Core;
    }

    /**
     * Getter for Windows32Core.
     * Total minutes used on Windows 32 core runner machines.
     * @return Returns the Integer
     */
    @JsonGetter("windows_32_core")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getWindows32Core() {
        return windows32Core;
    }

    /**
     * Setter for Windows32Core.
     * Total minutes used on Windows 32 core runner machines.
     * @param windows32Core Value for Integer
     */
    @JsonSetter("windows_32_core")
    public void setWindows32Core(Integer windows32Core) {
        this.windows32Core = windows32Core;
    }

    /**
     * Getter for Windows64Core.
     * Total minutes used on Windows 64 core runner machines.
     * @return Returns the Integer
     */
    @JsonGetter("windows_64_core")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getWindows64Core() {
        return windows64Core;
    }

    /**
     * Setter for Windows64Core.
     * Total minutes used on Windows 64 core runner machines.
     * @param windows64Core Value for Integer
     */
    @JsonSetter("windows_64_core")
    public void setWindows64Core(Integer windows64Core) {
        this.windows64Core = windows64Core;
    }

    /**
     * Getter for Macos12Core.
     * Total minutes used on macOS 12 core runner machines.
     * @return Returns the Integer
     */
    @JsonGetter("macos_12_core")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMacos12Core() {
        return macos12Core;
    }

    /**
     * Setter for Macos12Core.
     * Total minutes used on macOS 12 core runner machines.
     * @param macos12Core Value for Integer
     */
    @JsonSetter("macos_12_core")
    public void setMacos12Core(Integer macos12Core) {
        this.macos12Core = macos12Core;
    }

    /**
     * Getter for Total.
     * Total minutes used on all runner machines.
     * @return Returns the Integer
     */
    @JsonGetter("total")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTotal() {
        return total;
    }

    /**
     * Setter for Total.
     * Total minutes used on all runner machines.
     * @param total Value for Integer
     */
    @JsonSetter("total")
    public void setTotal(Integer total) {
        this.total = total;
    }

    /**
     * Converts this MinutesUsedBreakdown into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "MinutesUsedBreakdown [" + "uBUNTU=" + uBUNTU + ", mACOS=" + mACOS + ", wINDOWS="
                + wINDOWS + ", ubuntu4Core=" + ubuntu4Core + ", ubuntu8Core=" + ubuntu8Core
                + ", ubuntu16Core=" + ubuntu16Core + ", ubuntu32Core=" + ubuntu32Core
                + ", ubuntu64Core=" + ubuntu64Core + ", windows4Core=" + windows4Core
                + ", windows8Core=" + windows8Core + ", windows16Core=" + windows16Core
                + ", windows32Core=" + windows32Core + ", windows64Core=" + windows64Core
                + ", macos12Core=" + macos12Core + ", total=" + total + "]";
    }

    /**
     * Builds a new {@link MinutesUsedBreakdown.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link MinutesUsedBreakdown.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .uBUNTU(getUBUNTU())
                .mACOS(getMACOS())
                .wINDOWS(getWINDOWS())
                .ubuntu4Core(getUbuntu4Core())
                .ubuntu8Core(getUbuntu8Core())
                .ubuntu16Core(getUbuntu16Core())
                .ubuntu32Core(getUbuntu32Core())
                .ubuntu64Core(getUbuntu64Core())
                .windows4Core(getWindows4Core())
                .windows8Core(getWindows8Core())
                .windows16Core(getWindows16Core())
                .windows32Core(getWindows32Core())
                .windows64Core(getWindows64Core())
                .macos12Core(getMacos12Core())
                .total(getTotal());
        return builder;
    }

    /**
     * Class to build instances of {@link MinutesUsedBreakdown}.
     */
    public static class Builder {
        private Integer uBUNTU;
        private Integer mACOS;
        private Integer wINDOWS;
        private Integer ubuntu4Core;
        private Integer ubuntu8Core;
        private Integer ubuntu16Core;
        private Integer ubuntu32Core;
        private Integer ubuntu64Core;
        private Integer windows4Core;
        private Integer windows8Core;
        private Integer windows16Core;
        private Integer windows32Core;
        private Integer windows64Core;
        private Integer macos12Core;
        private Integer total;



        /**
         * Setter for uBUNTU.
         * @param  uBUNTU  Integer value for uBUNTU.
         * @return Builder
         */
        public Builder uBUNTU(Integer uBUNTU) {
            this.uBUNTU = uBUNTU;
            return this;
        }

        /**
         * Setter for mACOS.
         * @param  mACOS  Integer value for mACOS.
         * @return Builder
         */
        public Builder mACOS(Integer mACOS) {
            this.mACOS = mACOS;
            return this;
        }

        /**
         * Setter for wINDOWS.
         * @param  wINDOWS  Integer value for wINDOWS.
         * @return Builder
         */
        public Builder wINDOWS(Integer wINDOWS) {
            this.wINDOWS = wINDOWS;
            return this;
        }

        /**
         * Setter for ubuntu4Core.
         * @param  ubuntu4Core  Integer value for ubuntu4Core.
         * @return Builder
         */
        public Builder ubuntu4Core(Integer ubuntu4Core) {
            this.ubuntu4Core = ubuntu4Core;
            return this;
        }

        /**
         * Setter for ubuntu8Core.
         * @param  ubuntu8Core  Integer value for ubuntu8Core.
         * @return Builder
         */
        public Builder ubuntu8Core(Integer ubuntu8Core) {
            this.ubuntu8Core = ubuntu8Core;
            return this;
        }

        /**
         * Setter for ubuntu16Core.
         * @param  ubuntu16Core  Integer value for ubuntu16Core.
         * @return Builder
         */
        public Builder ubuntu16Core(Integer ubuntu16Core) {
            this.ubuntu16Core = ubuntu16Core;
            return this;
        }

        /**
         * Setter for ubuntu32Core.
         * @param  ubuntu32Core  Integer value for ubuntu32Core.
         * @return Builder
         */
        public Builder ubuntu32Core(Integer ubuntu32Core) {
            this.ubuntu32Core = ubuntu32Core;
            return this;
        }

        /**
         * Setter for ubuntu64Core.
         * @param  ubuntu64Core  Integer value for ubuntu64Core.
         * @return Builder
         */
        public Builder ubuntu64Core(Integer ubuntu64Core) {
            this.ubuntu64Core = ubuntu64Core;
            return this;
        }

        /**
         * Setter for windows4Core.
         * @param  windows4Core  Integer value for windows4Core.
         * @return Builder
         */
        public Builder windows4Core(Integer windows4Core) {
            this.windows4Core = windows4Core;
            return this;
        }

        /**
         * Setter for windows8Core.
         * @param  windows8Core  Integer value for windows8Core.
         * @return Builder
         */
        public Builder windows8Core(Integer windows8Core) {
            this.windows8Core = windows8Core;
            return this;
        }

        /**
         * Setter for windows16Core.
         * @param  windows16Core  Integer value for windows16Core.
         * @return Builder
         */
        public Builder windows16Core(Integer windows16Core) {
            this.windows16Core = windows16Core;
            return this;
        }

        /**
         * Setter for windows32Core.
         * @param  windows32Core  Integer value for windows32Core.
         * @return Builder
         */
        public Builder windows32Core(Integer windows32Core) {
            this.windows32Core = windows32Core;
            return this;
        }

        /**
         * Setter for windows64Core.
         * @param  windows64Core  Integer value for windows64Core.
         * @return Builder
         */
        public Builder windows64Core(Integer windows64Core) {
            this.windows64Core = windows64Core;
            return this;
        }

        /**
         * Setter for macos12Core.
         * @param  macos12Core  Integer value for macos12Core.
         * @return Builder
         */
        public Builder macos12Core(Integer macos12Core) {
            this.macos12Core = macos12Core;
            return this;
        }

        /**
         * Setter for total.
         * @param  total  Integer value for total.
         * @return Builder
         */
        public Builder total(Integer total) {
            this.total = total;
            return this;
        }

        /**
         * Builds a new {@link MinutesUsedBreakdown} object using the set fields.
         * @return {@link MinutesUsedBreakdown}
         */
        public MinutesUsedBreakdown build() {
            return new MinutesUsedBreakdown(uBUNTU, mACOS, wINDOWS, ubuntu4Core, ubuntu8Core,
                    ubuntu16Core, ubuntu32Core, ubuntu64Core, windows4Core, windows8Core,
                    windows16Core, windows32Core, windows64Core, macos12Core, total);
        }
    }
}
