/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Changes3 type.
 */
public class Changes3 {
    private Body body;
    private Body title;

    /**
     * Default constructor.
     */
    public Changes3() {
    }

    /**
     * Initialization constructor.
     * @param  body  Body value for body.
     * @param  title  Body value for title.
     */
    public Changes3(
            Body body,
            Body title) {
        this.body = body;
        this.title = title;
    }

    /**
     * Getter for Body.
     * @return Returns the Body
     */
    @JsonGetter("body")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Body getBody() {
        return body;
    }

    /**
     * Setter for Body.
     * @param body Value for Body
     */
    @JsonSetter("body")
    public void setBody(Body body) {
        this.body = body;
    }

    /**
     * Getter for Title.
     * @return Returns the Body
     */
    @JsonGetter("title")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Body getTitle() {
        return title;
    }

    /**
     * Setter for Title.
     * @param title Value for Body
     */
    @JsonSetter("title")
    public void setTitle(Body title) {
        this.title = title;
    }

    /**
     * Converts this Changes3 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Changes3 [" + "body=" + body + ", title=" + title + "]";
    }

    /**
     * Builds a new {@link Changes3.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Changes3.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .body(getBody())
                .title(getTitle());
        return builder;
    }

    /**
     * Class to build instances of {@link Changes3}.
     */
    public static class Builder {
        private Body body;
        private Body title;



        /**
         * Setter for body.
         * @param  body  Body value for body.
         * @return Builder
         */
        public Builder body(Body body) {
            this.body = body;
            return this;
        }

        /**
         * Setter for title.
         * @param  title  Body value for title.
         * @return Builder
         */
        public Builder title(Body title) {
            this.title = title;
            return this;
        }

        /**
         * Builds a new {@link Changes3} object using the set fields.
         * @return {@link Changes3}
         */
        public Changes3 build() {
            return new Changes3(body, title);
        }
    }
}
