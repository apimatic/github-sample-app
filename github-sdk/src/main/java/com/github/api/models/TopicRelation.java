/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for TopicRelation type.
 */
public class TopicRelation {
    private Integer id;
    private String name;
    private Integer topicId;
    private String relationType;

    /**
     * Default constructor.
     */
    public TopicRelation() {
    }

    /**
     * Initialization constructor.
     * @param  id  Integer value for id.
     * @param  name  String value for name.
     * @param  topicId  Integer value for topicId.
     * @param  relationType  String value for relationType.
     */
    public TopicRelation(
            Integer id,
            String name,
            Integer topicId,
            String relationType) {
        this.id = id;
        this.name = name;
        this.topicId = topicId;
        this.relationType = relationType;
    }

    /**
     * Getter for Id.
     * @return Returns the Integer
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for Integer
     */
    @JsonSetter("id")
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for TopicId.
     * @return Returns the Integer
     */
    @JsonGetter("topic_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTopicId() {
        return topicId;
    }

    /**
     * Setter for TopicId.
     * @param topicId Value for Integer
     */
    @JsonSetter("topic_id")
    public void setTopicId(Integer topicId) {
        this.topicId = topicId;
    }

    /**
     * Getter for RelationType.
     * @return Returns the String
     */
    @JsonGetter("relation_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRelationType() {
        return relationType;
    }

    /**
     * Setter for RelationType.
     * @param relationType Value for String
     */
    @JsonSetter("relation_type")
    public void setRelationType(String relationType) {
        this.relationType = relationType;
    }

    /**
     * Converts this TopicRelation into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TopicRelation [" + "id=" + id + ", name=" + name + ", topicId=" + topicId
                + ", relationType=" + relationType + "]";
    }

    /**
     * Builds a new {@link TopicRelation.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link TopicRelation.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .name(getName())
                .topicId(getTopicId())
                .relationType(getRelationType());
        return builder;
    }

    /**
     * Class to build instances of {@link TopicRelation}.
     */
    public static class Builder {
        private Integer id;
        private String name;
        private Integer topicId;
        private String relationType;



        /**
         * Setter for id.
         * @param  id  Integer value for id.
         * @return Builder
         */
        public Builder id(Integer id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for topicId.
         * @param  topicId  Integer value for topicId.
         * @return Builder
         */
        public Builder topicId(Integer topicId) {
            this.topicId = topicId;
            return this;
        }

        /**
         * Setter for relationType.
         * @param  relationType  String value for relationType.
         * @return Builder
         */
        public Builder relationType(String relationType) {
            this.relationType = relationType;
            return this;
        }

        /**
         * Builds a new {@link TopicRelation} object using the set fields.
         * @return {@link TopicRelation}
         */
        public TopicRelation build() {
            return new TopicRelation(id, name, topicId, relationType);
        }
    }
}
