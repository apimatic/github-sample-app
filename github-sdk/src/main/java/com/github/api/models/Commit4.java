/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for Commit4 type.
 */
public class Commit4 {
    private String sha;
    private String nodeId;
    private String url;
    private String htmlUrl;
    private Author2 author;
    private Author2 committer;
    private String message;
    private Tree1 tree;
    private List<Parent1> parents;
    private Verification1 verification;

    /**
     * Default constructor.
     */
    public Commit4() {
    }

    /**
     * Initialization constructor.
     * @param  sha  String value for sha.
     * @param  nodeId  String value for nodeId.
     * @param  url  String value for url.
     * @param  htmlUrl  String value for htmlUrl.
     * @param  author  Author2 value for author.
     * @param  committer  Author2 value for committer.
     * @param  message  String value for message.
     * @param  tree  Tree1 value for tree.
     * @param  parents  List of Parent1 value for parents.
     * @param  verification  Verification1 value for verification.
     */
    public Commit4(
            String sha,
            String nodeId,
            String url,
            String htmlUrl,
            Author2 author,
            Author2 committer,
            String message,
            Tree1 tree,
            List<Parent1> parents,
            Verification1 verification) {
        this.sha = sha;
        this.nodeId = nodeId;
        this.url = url;
        this.htmlUrl = htmlUrl;
        this.author = author;
        this.committer = committer;
        this.message = message;
        this.tree = tree;
        this.parents = parents;
        this.verification = verification;
    }

    /**
     * Getter for Sha.
     * @return Returns the String
     */
    @JsonGetter("sha")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSha() {
        return sha;
    }

    /**
     * Setter for Sha.
     * @param sha Value for String
     */
    @JsonSetter("sha")
    public void setSha(String sha) {
        this.sha = sha;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for HtmlUrl.
     * @return Returns the String
     */
    @JsonGetter("html_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getHtmlUrl() {
        return htmlUrl;
    }

    /**
     * Setter for HtmlUrl.
     * @param htmlUrl Value for String
     */
    @JsonSetter("html_url")
    public void setHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
    }

    /**
     * Getter for Author.
     * @return Returns the Author2
     */
    @JsonGetter("author")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Author2 getAuthor() {
        return author;
    }

    /**
     * Setter for Author.
     * @param author Value for Author2
     */
    @JsonSetter("author")
    public void setAuthor(Author2 author) {
        this.author = author;
    }

    /**
     * Getter for Committer.
     * @return Returns the Author2
     */
    @JsonGetter("committer")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Author2 getCommitter() {
        return committer;
    }

    /**
     * Setter for Committer.
     * @param committer Value for Author2
     */
    @JsonSetter("committer")
    public void setCommitter(Author2 committer) {
        this.committer = committer;
    }

    /**
     * Getter for Message.
     * @return Returns the String
     */
    @JsonGetter("message")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for Tree.
     * @return Returns the Tree1
     */
    @JsonGetter("tree")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Tree1 getTree() {
        return tree;
    }

    /**
     * Setter for Tree.
     * @param tree Value for Tree1
     */
    @JsonSetter("tree")
    public void setTree(Tree1 tree) {
        this.tree = tree;
    }

    /**
     * Getter for Parents.
     * @return Returns the List of Parent1
     */
    @JsonGetter("parents")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Parent1> getParents() {
        return parents;
    }

    /**
     * Setter for Parents.
     * @param parents Value for List of Parent1
     */
    @JsonSetter("parents")
    public void setParents(List<Parent1> parents) {
        this.parents = parents;
    }

    /**
     * Getter for Verification.
     * @return Returns the Verification1
     */
    @JsonGetter("verification")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Verification1 getVerification() {
        return verification;
    }

    /**
     * Setter for Verification.
     * @param verification Value for Verification1
     */
    @JsonSetter("verification")
    public void setVerification(Verification1 verification) {
        this.verification = verification;
    }

    /**
     * Converts this Commit4 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Commit4 [" + "sha=" + sha + ", nodeId=" + nodeId + ", url=" + url + ", htmlUrl="
                + htmlUrl + ", author=" + author + ", committer=" + committer + ", message="
                + message + ", tree=" + tree + ", parents=" + parents + ", verification="
                + verification + "]";
    }

    /**
     * Builds a new {@link Commit4.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Commit4.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .sha(getSha())
                .nodeId(getNodeId())
                .url(getUrl())
                .htmlUrl(getHtmlUrl())
                .author(getAuthor())
                .committer(getCommitter())
                .message(getMessage())
                .tree(getTree())
                .parents(getParents())
                .verification(getVerification());
        return builder;
    }

    /**
     * Class to build instances of {@link Commit4}.
     */
    public static class Builder {
        private String sha;
        private String nodeId;
        private String url;
        private String htmlUrl;
        private Author2 author;
        private Author2 committer;
        private String message;
        private Tree1 tree;
        private List<Parent1> parents;
        private Verification1 verification;



        /**
         * Setter for sha.
         * @param  sha  String value for sha.
         * @return Builder
         */
        public Builder sha(String sha) {
            this.sha = sha;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for htmlUrl.
         * @param  htmlUrl  String value for htmlUrl.
         * @return Builder
         */
        public Builder htmlUrl(String htmlUrl) {
            this.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * Setter for author.
         * @param  author  Author2 value for author.
         * @return Builder
         */
        public Builder author(Author2 author) {
            this.author = author;
            return this;
        }

        /**
         * Setter for committer.
         * @param  committer  Author2 value for committer.
         * @return Builder
         */
        public Builder committer(Author2 committer) {
            this.committer = committer;
            return this;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for tree.
         * @param  tree  Tree1 value for tree.
         * @return Builder
         */
        public Builder tree(Tree1 tree) {
            this.tree = tree;
            return this;
        }

        /**
         * Setter for parents.
         * @param  parents  List of Parent1 value for parents.
         * @return Builder
         */
        public Builder parents(List<Parent1> parents) {
            this.parents = parents;
            return this;
        }

        /**
         * Setter for verification.
         * @param  verification  Verification1 value for verification.
         * @return Builder
         */
        public Builder verification(Verification1 verification) {
            this.verification = verification;
            return this;
        }

        /**
         * Builds a new {@link Commit4} object using the set fields.
         * @return {@link Commit4}
         */
        public Commit4 build() {
            return new Commit4(sha, nodeId, url, htmlUrl, author, committer, message, tree, parents,
                    verification);
        }
    }
}
