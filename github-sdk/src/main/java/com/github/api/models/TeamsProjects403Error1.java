/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for TeamsProjects403Error1 type.
 */
public class TeamsProjects403Error1 {
    private String message;
    private String documentationUrl;

    /**
     * Default constructor.
     */
    public TeamsProjects403Error1() {
    }

    /**
     * Initialization constructor.
     * @param  message  String value for message.
     * @param  documentationUrl  String value for documentationUrl.
     */
    public TeamsProjects403Error1(
            String message,
            String documentationUrl) {
        this.message = message;
        this.documentationUrl = documentationUrl;
    }

    /**
     * Getter for Message.
     * @return Returns the String
     */
    @JsonGetter("message")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for DocumentationUrl.
     * @return Returns the String
     */
    @JsonGetter("documentation_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDocumentationUrl() {
        return documentationUrl;
    }

    /**
     * Setter for DocumentationUrl.
     * @param documentationUrl Value for String
     */
    @JsonSetter("documentation_url")
    public void setDocumentationUrl(String documentationUrl) {
        this.documentationUrl = documentationUrl;
    }

    /**
     * Converts this TeamsProjects403Error1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TeamsProjects403Error1 [" + "message=" + message + ", documentationUrl="
                + documentationUrl + "]";
    }

    /**
     * Builds a new {@link TeamsProjects403Error1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link TeamsProjects403Error1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .message(getMessage())
                .documentationUrl(getDocumentationUrl());
        return builder;
    }

    /**
     * Class to build instances of {@link TeamsProjects403Error1}.
     */
    public static class Builder {
        private String message;
        private String documentationUrl;



        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for documentationUrl.
         * @param  documentationUrl  String value for documentationUrl.
         * @return Builder
         */
        public Builder documentationUrl(String documentationUrl) {
            this.documentationUrl = documentationUrl;
            return this;
        }

        /**
         * Builds a new {@link TeamsProjects403Error1} object using the set fields.
         * @return {@link TeamsProjects403Error1}
         */
        public TeamsProjects403Error1 build() {
            return new TeamsProjects403Error1(message, documentationUrl);
        }
    }
}
