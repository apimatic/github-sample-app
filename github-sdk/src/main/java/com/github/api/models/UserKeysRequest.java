/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for UserKeysRequest type.
 */
public class UserKeysRequest {
    private String title;
    private String key;

    /**
     * Default constructor.
     */
    public UserKeysRequest() {
    }

    /**
     * Initialization constructor.
     * @param  key  String value for key.
     * @param  title  String value for title.
     */
    public UserKeysRequest(
            String key,
            String title) {
        this.title = title;
        this.key = key;
    }

    /**
     * Getter for Title.
     * A descriptive name for the new key.
     * @return Returns the String
     */
    @JsonGetter("title")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTitle() {
        return title;
    }

    /**
     * Setter for Title.
     * A descriptive name for the new key.
     * @param title Value for String
     */
    @JsonSetter("title")
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for Key.
     * The public SSH key to add to your GitHub account.
     * @return Returns the String
     */
    @JsonGetter("key")
    public String getKey() {
        return key;
    }

    /**
     * Setter for Key.
     * The public SSH key to add to your GitHub account.
     * @param key Value for String
     */
    @JsonSetter("key")
    public void setKey(String key) {
        this.key = key;
    }

    /**
     * Converts this UserKeysRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UserKeysRequest [" + "key=" + key + ", title=" + title + "]";
    }

    /**
     * Builds a new {@link UserKeysRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UserKeysRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(key)
                .title(getTitle());
        return builder;
    }

    /**
     * Class to build instances of {@link UserKeysRequest}.
     */
    public static class Builder {
        private String key;
        private String title;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  key  String value for key.
         */
        public Builder(String key) {
            this.key = key;
        }

        /**
         * Setter for key.
         * @param  key  String value for key.
         * @return Builder
         */
        public Builder key(String key) {
            this.key = key;
            return this;
        }

        /**
         * Setter for title.
         * @param  title  String value for title.
         * @return Builder
         */
        public Builder title(String title) {
            this.title = title;
            return this;
        }

        /**
         * Builds a new {@link UserKeysRequest} object using the set fields.
         * @return {@link UserKeysRequest}
         */
        public UserKeysRequest build() {
            return new UserKeysRequest(key, title);
        }
    }
}
