/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.github.api.models.containers.Deployment4Payload;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Deployment4 type.
 */
public class Deployment4 {
    private String createdAt;
    private Object creator;
    private String description;
    private String environment;
    private int id;
    private String nodeId;
    private String originalEnvironment;
    private Deployment4Payload payload;
    private Object performedViaGithubApp;
    private Boolean productionEnvironment;
    private String ref;
    private String repositoryUrl;
    private String sha;
    private String statusesUrl;
    private String task;
    private Boolean transientEnvironment;
    private String updatedAt;
    private String url;

    /**
     * Default constructor.
     */
    public Deployment4() {
    }

    /**
     * Initialization constructor.
     * @param  createdAt  String value for createdAt.
     * @param  creator  Object value for creator.
     * @param  description  String value for description.
     * @param  environment  String value for environment.
     * @param  id  int value for id.
     * @param  nodeId  String value for nodeId.
     * @param  originalEnvironment  String value for originalEnvironment.
     * @param  payload  Deployment4Payload value for payload.
     * @param  ref  String value for ref.
     * @param  repositoryUrl  String value for repositoryUrl.
     * @param  sha  String value for sha.
     * @param  statusesUrl  String value for statusesUrl.
     * @param  task  String value for task.
     * @param  updatedAt  String value for updatedAt.
     * @param  url  String value for url.
     * @param  performedViaGithubApp  Object value for performedViaGithubApp.
     * @param  productionEnvironment  Boolean value for productionEnvironment.
     * @param  transientEnvironment  Boolean value for transientEnvironment.
     */
    public Deployment4(
            String createdAt,
            Object creator,
            String description,
            String environment,
            int id,
            String nodeId,
            String originalEnvironment,
            Deployment4Payload payload,
            String ref,
            String repositoryUrl,
            String sha,
            String statusesUrl,
            String task,
            String updatedAt,
            String url,
            Object performedViaGithubApp,
            Boolean productionEnvironment,
            Boolean transientEnvironment) {
        this.createdAt = createdAt;
        this.creator = creator;
        this.description = description;
        this.environment = environment;
        this.id = id;
        this.nodeId = nodeId;
        this.originalEnvironment = originalEnvironment;
        this.payload = payload;
        this.performedViaGithubApp = performedViaGithubApp;
        this.productionEnvironment = productionEnvironment;
        this.ref = ref;
        this.repositoryUrl = repositoryUrl;
        this.sha = sha;
        this.statusesUrl = statusesUrl;
        this.task = task;
        this.transientEnvironment = transientEnvironment;
        this.updatedAt = updatedAt;
        this.url = url;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the String
     */
    @JsonGetter("created_at")
    public String getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for String
     */
    @JsonSetter("created_at")
    public void setCreatedAt(String createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for Creator.
     * @return Returns the Object
     */
    @JsonGetter("creator")
    public Object getCreator() {
        return creator;
    }

    /**
     * Setter for Creator.
     * @param creator Value for Object
     */
    @JsonSetter("creator")
    public void setCreator(Object creator) {
        this.creator = creator;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    @JsonGetter("description")
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Environment.
     * @return Returns the String
     */
    @JsonGetter("environment")
    public String getEnvironment() {
        return environment;
    }

    /**
     * Setter for Environment.
     * @param environment Value for String
     */
    @JsonSetter("environment")
    public void setEnvironment(String environment) {
        this.environment = environment;
    }

    /**
     * Getter for Id.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for OriginalEnvironment.
     * @return Returns the String
     */
    @JsonGetter("original_environment")
    public String getOriginalEnvironment() {
        return originalEnvironment;
    }

    /**
     * Setter for OriginalEnvironment.
     * @param originalEnvironment Value for String
     */
    @JsonSetter("original_environment")
    public void setOriginalEnvironment(String originalEnvironment) {
        this.originalEnvironment = originalEnvironment;
    }

    /**
     * Getter for Payload.
     * @return Returns the Deployment4Payload
     */
    @JsonGetter("payload")
    public Deployment4Payload getPayload() {
        return payload;
    }

    /**
     * Setter for Payload.
     * @param payload Value for Deployment4Payload
     */
    @JsonSetter("payload")
    public void setPayload(Deployment4Payload payload) {
        this.payload = payload;
    }

    /**
     * Getter for PerformedViaGithubApp.
     * @return Returns the Object
     */
    @JsonGetter("performed_via_github_app")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getPerformedViaGithubApp() {
        return performedViaGithubApp;
    }

    /**
     * Setter for PerformedViaGithubApp.
     * @param performedViaGithubApp Value for Object
     */
    @JsonSetter("performed_via_github_app")
    public void setPerformedViaGithubApp(Object performedViaGithubApp) {
        this.performedViaGithubApp = performedViaGithubApp;
    }

    /**
     * Getter for ProductionEnvironment.
     * @return Returns the Boolean
     */
    @JsonGetter("production_environment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getProductionEnvironment() {
        return productionEnvironment;
    }

    /**
     * Setter for ProductionEnvironment.
     * @param productionEnvironment Value for Boolean
     */
    @JsonSetter("production_environment")
    public void setProductionEnvironment(Boolean productionEnvironment) {
        this.productionEnvironment = productionEnvironment;
    }

    /**
     * Getter for Ref.
     * @return Returns the String
     */
    @JsonGetter("ref")
    public String getRef() {
        return ref;
    }

    /**
     * Setter for Ref.
     * @param ref Value for String
     */
    @JsonSetter("ref")
    public void setRef(String ref) {
        this.ref = ref;
    }

    /**
     * Getter for RepositoryUrl.
     * @return Returns the String
     */
    @JsonGetter("repository_url")
    public String getRepositoryUrl() {
        return repositoryUrl;
    }

    /**
     * Setter for RepositoryUrl.
     * @param repositoryUrl Value for String
     */
    @JsonSetter("repository_url")
    public void setRepositoryUrl(String repositoryUrl) {
        this.repositoryUrl = repositoryUrl;
    }

    /**
     * Getter for Sha.
     * @return Returns the String
     */
    @JsonGetter("sha")
    public String getSha() {
        return sha;
    }

    /**
     * Setter for Sha.
     * @param sha Value for String
     */
    @JsonSetter("sha")
    public void setSha(String sha) {
        this.sha = sha;
    }

    /**
     * Getter for StatusesUrl.
     * @return Returns the String
     */
    @JsonGetter("statuses_url")
    public String getStatusesUrl() {
        return statusesUrl;
    }

    /**
     * Setter for StatusesUrl.
     * @param statusesUrl Value for String
     */
    @JsonSetter("statuses_url")
    public void setStatusesUrl(String statusesUrl) {
        this.statusesUrl = statusesUrl;
    }

    /**
     * Getter for Task.
     * @return Returns the String
     */
    @JsonGetter("task")
    public String getTask() {
        return task;
    }

    /**
     * Setter for Task.
     * @param task Value for String
     */
    @JsonSetter("task")
    public void setTask(String task) {
        this.task = task;
    }

    /**
     * Getter for TransientEnvironment.
     * @return Returns the Boolean
     */
    @JsonGetter("transient_environment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getTransientEnvironment() {
        return transientEnvironment;
    }

    /**
     * Setter for TransientEnvironment.
     * @param transientEnvironment Value for Boolean
     */
    @JsonSetter("transient_environment")
    public void setTransientEnvironment(Boolean transientEnvironment) {
        this.transientEnvironment = transientEnvironment;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the String
     */
    @JsonGetter("updated_at")
    public String getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for String
     */
    @JsonSetter("updated_at")
    public void setUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Converts this Deployment4 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Deployment4 [" + "createdAt=" + createdAt + ", creator=" + creator
                + ", description=" + description + ", environment=" + environment + ", id=" + id
                + ", nodeId=" + nodeId + ", originalEnvironment=" + originalEnvironment
                + ", payload=" + payload + ", ref=" + ref + ", repositoryUrl=" + repositoryUrl
                + ", sha=" + sha + ", statusesUrl=" + statusesUrl + ", task=" + task
                + ", updatedAt=" + updatedAt + ", url=" + url + ", performedViaGithubApp="
                + performedViaGithubApp + ", productionEnvironment=" + productionEnvironment
                + ", transientEnvironment=" + transientEnvironment + "]";
    }

    /**
     * Builds a new {@link Deployment4.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Deployment4.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(createdAt, creator, description, environment, id, nodeId,
                originalEnvironment, payload, ref, repositoryUrl, sha, statusesUrl, task, updatedAt,
                url)
                .performedViaGithubApp(getPerformedViaGithubApp())
                .productionEnvironment(getProductionEnvironment())
                .transientEnvironment(getTransientEnvironment());
        return builder;
    }

    /**
     * Class to build instances of {@link Deployment4}.
     */
    public static class Builder {
        private String createdAt;
        private Object creator;
        private String description;
        private String environment;
        private int id;
        private String nodeId;
        private String originalEnvironment;
        private Deployment4Payload payload;
        private String ref;
        private String repositoryUrl;
        private String sha;
        private String statusesUrl;
        private String task;
        private String updatedAt;
        private String url;
        private Object performedViaGithubApp;
        private Boolean productionEnvironment;
        private Boolean transientEnvironment;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  createdAt  String value for createdAt.
         * @param  creator  Object value for creator.
         * @param  description  String value for description.
         * @param  environment  String value for environment.
         * @param  id  int value for id.
         * @param  nodeId  String value for nodeId.
         * @param  originalEnvironment  String value for originalEnvironment.
         * @param  payload  Deployment4Payload value for payload.
         * @param  ref  String value for ref.
         * @param  repositoryUrl  String value for repositoryUrl.
         * @param  sha  String value for sha.
         * @param  statusesUrl  String value for statusesUrl.
         * @param  task  String value for task.
         * @param  updatedAt  String value for updatedAt.
         * @param  url  String value for url.
         */
        public Builder(String createdAt, Object creator, String description, String environment,
                int id, String nodeId, String originalEnvironment, Deployment4Payload payload,
                String ref, String repositoryUrl, String sha, String statusesUrl, String task,
                String updatedAt, String url) {
            this.createdAt = createdAt;
            this.creator = creator;
            this.description = description;
            this.environment = environment;
            this.id = id;
            this.nodeId = nodeId;
            this.originalEnvironment = originalEnvironment;
            this.payload = payload;
            this.ref = ref;
            this.repositoryUrl = repositoryUrl;
            this.sha = sha;
            this.statusesUrl = statusesUrl;
            this.task = task;
            this.updatedAt = updatedAt;
            this.url = url;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  String value for createdAt.
         * @return Builder
         */
        public Builder createdAt(String createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for creator.
         * @param  creator  Object value for creator.
         * @return Builder
         */
        public Builder creator(Object creator) {
            this.creator = creator;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for environment.
         * @param  environment  String value for environment.
         * @return Builder
         */
        public Builder environment(String environment) {
            this.environment = environment;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for originalEnvironment.
         * @param  originalEnvironment  String value for originalEnvironment.
         * @return Builder
         */
        public Builder originalEnvironment(String originalEnvironment) {
            this.originalEnvironment = originalEnvironment;
            return this;
        }

        /**
         * Setter for payload.
         * @param  payload  Deployment4Payload value for payload.
         * @return Builder
         */
        public Builder payload(Deployment4Payload payload) {
            this.payload = payload;
            return this;
        }

        /**
         * Setter for ref.
         * @param  ref  String value for ref.
         * @return Builder
         */
        public Builder ref(String ref) {
            this.ref = ref;
            return this;
        }

        /**
         * Setter for repositoryUrl.
         * @param  repositoryUrl  String value for repositoryUrl.
         * @return Builder
         */
        public Builder repositoryUrl(String repositoryUrl) {
            this.repositoryUrl = repositoryUrl;
            return this;
        }

        /**
         * Setter for sha.
         * @param  sha  String value for sha.
         * @return Builder
         */
        public Builder sha(String sha) {
            this.sha = sha;
            return this;
        }

        /**
         * Setter for statusesUrl.
         * @param  statusesUrl  String value for statusesUrl.
         * @return Builder
         */
        public Builder statusesUrl(String statusesUrl) {
            this.statusesUrl = statusesUrl;
            return this;
        }

        /**
         * Setter for task.
         * @param  task  String value for task.
         * @return Builder
         */
        public Builder task(String task) {
            this.task = task;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  String value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for performedViaGithubApp.
         * @param  performedViaGithubApp  Object value for performedViaGithubApp.
         * @return Builder
         */
        public Builder performedViaGithubApp(Object performedViaGithubApp) {
            this.performedViaGithubApp = performedViaGithubApp;
            return this;
        }

        /**
         * Setter for productionEnvironment.
         * @param  productionEnvironment  Boolean value for productionEnvironment.
         * @return Builder
         */
        public Builder productionEnvironment(Boolean productionEnvironment) {
            this.productionEnvironment = productionEnvironment;
            return this;
        }

        /**
         * Setter for transientEnvironment.
         * @param  transientEnvironment  Boolean value for transientEnvironment.
         * @return Builder
         */
        public Builder transientEnvironment(Boolean transientEnvironment) {
            this.transientEnvironment = transientEnvironment;
            return this;
        }

        /**
         * Builds a new {@link Deployment4} object using the set fields.
         * @return {@link Deployment4}
         */
        public Deployment4 build() {
            return new Deployment4(createdAt, creator, description, environment, id, nodeId,
                    originalEnvironment, payload, ref, repositoryUrl, sha, statusesUrl, task,
                    updatedAt, url, performedViaGithubApp, productionEnvironment,
                    transientEnvironment);
        }
    }
}
