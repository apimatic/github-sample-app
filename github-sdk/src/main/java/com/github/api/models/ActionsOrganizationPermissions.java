/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for ActionsOrganizationPermissions type.
 */
public class ActionsOrganizationPermissions {
    private EnabledRepositoriesEnum enabledRepositories;
    private String selectedRepositoriesUrl;
    private AllowedActionsEnum allowedActions;
    private String selectedActionsUrl;

    /**
     * Default constructor.
     */
    public ActionsOrganizationPermissions() {
    }

    /**
     * Initialization constructor.
     * @param  enabledRepositories  EnabledRepositoriesEnum value for enabledRepositories.
     * @param  selectedRepositoriesUrl  String value for selectedRepositoriesUrl.
     * @param  allowedActions  AllowedActionsEnum value for allowedActions.
     * @param  selectedActionsUrl  String value for selectedActionsUrl.
     */
    public ActionsOrganizationPermissions(
            EnabledRepositoriesEnum enabledRepositories,
            String selectedRepositoriesUrl,
            AllowedActionsEnum allowedActions,
            String selectedActionsUrl) {
        this.enabledRepositories = enabledRepositories;
        this.selectedRepositoriesUrl = selectedRepositoriesUrl;
        this.allowedActions = allowedActions;
        this.selectedActionsUrl = selectedActionsUrl;
    }

    /**
     * Getter for EnabledRepositories.
     * @return Returns the EnabledRepositoriesEnum
     */
    @JsonGetter("enabled_repositories")
    public EnabledRepositoriesEnum getEnabledRepositories() {
        return enabledRepositories;
    }

    /**
     * Setter for EnabledRepositories.
     * @param enabledRepositories Value for EnabledRepositoriesEnum
     */
    @JsonSetter("enabled_repositories")
    public void setEnabledRepositories(EnabledRepositoriesEnum enabledRepositories) {
        this.enabledRepositories = enabledRepositories;
    }

    /**
     * Getter for SelectedRepositoriesUrl.
     * The API URL to use to get or set the selected repositories that are allowed to run GitHub
     * Actions, when `enabled_repositories` is set to `selected`.
     * @return Returns the String
     */
    @JsonGetter("selected_repositories_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSelectedRepositoriesUrl() {
        return selectedRepositoriesUrl;
    }

    /**
     * Setter for SelectedRepositoriesUrl.
     * The API URL to use to get or set the selected repositories that are allowed to run GitHub
     * Actions, when `enabled_repositories` is set to `selected`.
     * @param selectedRepositoriesUrl Value for String
     */
    @JsonSetter("selected_repositories_url")
    public void setSelectedRepositoriesUrl(String selectedRepositoriesUrl) {
        this.selectedRepositoriesUrl = selectedRepositoriesUrl;
    }

    /**
     * Getter for AllowedActions.
     * @return Returns the AllowedActionsEnum
     */
    @JsonGetter("allowed_actions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AllowedActionsEnum getAllowedActions() {
        return allowedActions;
    }

    /**
     * Setter for AllowedActions.
     * @param allowedActions Value for AllowedActionsEnum
     */
    @JsonSetter("allowed_actions")
    public void setAllowedActions(AllowedActionsEnum allowedActions) {
        this.allowedActions = allowedActions;
    }

    /**
     * Getter for SelectedActionsUrl.
     * The API URL to use to get or set the actions and reusable workflows that are allowed to run,
     * when `allowed_actions` is set to `selected`.
     * @return Returns the String
     */
    @JsonGetter("selected_actions_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSelectedActionsUrl() {
        return selectedActionsUrl;
    }

    /**
     * Setter for SelectedActionsUrl.
     * The API URL to use to get or set the actions and reusable workflows that are allowed to run,
     * when `allowed_actions` is set to `selected`.
     * @param selectedActionsUrl Value for String
     */
    @JsonSetter("selected_actions_url")
    public void setSelectedActionsUrl(String selectedActionsUrl) {
        this.selectedActionsUrl = selectedActionsUrl;
    }

    /**
     * Converts this ActionsOrganizationPermissions into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ActionsOrganizationPermissions [" + "enabledRepositories=" + enabledRepositories
                + ", selectedRepositoriesUrl=" + selectedRepositoriesUrl + ", allowedActions="
                + allowedActions + ", selectedActionsUrl=" + selectedActionsUrl + "]";
    }

    /**
     * Builds a new {@link ActionsOrganizationPermissions.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ActionsOrganizationPermissions.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(enabledRepositories)
                .selectedRepositoriesUrl(getSelectedRepositoriesUrl())
                .allowedActions(getAllowedActions())
                .selectedActionsUrl(getSelectedActionsUrl());
        return builder;
    }

    /**
     * Class to build instances of {@link ActionsOrganizationPermissions}.
     */
    public static class Builder {
        private EnabledRepositoriesEnum enabledRepositories;
        private String selectedRepositoriesUrl;
        private AllowedActionsEnum allowedActions;
        private String selectedActionsUrl;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  enabledRepositories  EnabledRepositoriesEnum value for enabledRepositories.
         */
        public Builder(EnabledRepositoriesEnum enabledRepositories) {
            this.enabledRepositories = enabledRepositories;
        }

        /**
         * Setter for enabledRepositories.
         * @param  enabledRepositories  EnabledRepositoriesEnum value for enabledRepositories.
         * @return Builder
         */
        public Builder enabledRepositories(EnabledRepositoriesEnum enabledRepositories) {
            this.enabledRepositories = enabledRepositories;
            return this;
        }

        /**
         * Setter for selectedRepositoriesUrl.
         * @param  selectedRepositoriesUrl  String value for selectedRepositoriesUrl.
         * @return Builder
         */
        public Builder selectedRepositoriesUrl(String selectedRepositoriesUrl) {
            this.selectedRepositoriesUrl = selectedRepositoriesUrl;
            return this;
        }

        /**
         * Setter for allowedActions.
         * @param  allowedActions  AllowedActionsEnum value for allowedActions.
         * @return Builder
         */
        public Builder allowedActions(AllowedActionsEnum allowedActions) {
            this.allowedActions = allowedActions;
            return this;
        }

        /**
         * Setter for selectedActionsUrl.
         * @param  selectedActionsUrl  String value for selectedActionsUrl.
         * @return Builder
         */
        public Builder selectedActionsUrl(String selectedActionsUrl) {
            this.selectedActionsUrl = selectedActionsUrl;
            return this;
        }

        /**
         * Builds a new {@link ActionsOrganizationPermissions} object using the set fields.
         * @return {@link ActionsOrganizationPermissions}
         */
        public ActionsOrganizationPermissions build() {
            return new ActionsOrganizationPermissions(enabledRepositories, selectedRepositoriesUrl,
                    allowedActions, selectedActionsUrl);
        }
    }
}
