/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for RepositoriesRemoved type.
 */
public class RepositoriesRemoved {
    private String fullName;
    private Integer id;
    private String name;
    private String nodeId;
    private Boolean mPrivate;

    /**
     * Default constructor.
     */
    public RepositoriesRemoved() {
    }

    /**
     * Initialization constructor.
     * @param  fullName  String value for fullName.
     * @param  id  Integer value for id.
     * @param  name  String value for name.
     * @param  nodeId  String value for nodeId.
     * @param  mPrivate  Boolean value for mPrivate.
     */
    public RepositoriesRemoved(
            String fullName,
            Integer id,
            String name,
            String nodeId,
            Boolean mPrivate) {
        this.fullName = fullName;
        this.id = id;
        this.name = name;
        this.nodeId = nodeId;
        this.mPrivate = mPrivate;
    }

    /**
     * Getter for FullName.
     * @return Returns the String
     */
    @JsonGetter("full_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFullName() {
        return fullName;
    }

    /**
     * Setter for FullName.
     * @param fullName Value for String
     */
    @JsonSetter("full_name")
    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    /**
     * Getter for Id.
     * Unique identifier of the repository
     * @return Returns the Integer
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Unique identifier of the repository
     * @param id Value for Integer
     */
    @JsonSetter("id")
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for Name.
     * The name of the repository.
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the repository.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for Private.
     * Whether the repository is private or public.
     * @return Returns the Boolean
     */
    @JsonGetter("private")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getPrivate() {
        return mPrivate;
    }

    /**
     * Setter for Private.
     * Whether the repository is private or public.
     * @param mPrivate Value for Boolean
     */
    @JsonSetter("private")
    public void setPrivate(Boolean mPrivate) {
        this.mPrivate = mPrivate;
    }

    /**
     * Converts this RepositoriesRemoved into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "RepositoriesRemoved [" + "fullName=" + fullName + ", id=" + id + ", name=" + name
                + ", nodeId=" + nodeId + ", mPrivate=" + mPrivate + "]";
    }

    /**
     * Builds a new {@link RepositoriesRemoved.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link RepositoriesRemoved.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .fullName(getFullName())
                .id(getId())
                .name(getName())
                .nodeId(getNodeId())
                .mPrivate(getPrivate());
        return builder;
    }

    /**
     * Class to build instances of {@link RepositoriesRemoved}.
     */
    public static class Builder {
        private String fullName;
        private Integer id;
        private String name;
        private String nodeId;
        private Boolean mPrivate;



        /**
         * Setter for fullName.
         * @param  fullName  String value for fullName.
         * @return Builder
         */
        public Builder fullName(String fullName) {
            this.fullName = fullName;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  Integer value for id.
         * @return Builder
         */
        public Builder id(Integer id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for mPrivate.
         * @param  mPrivate  Boolean value for mPrivate.
         * @return Builder
         */
        public Builder mPrivate(Boolean mPrivate) {
            this.mPrivate = mPrivate;
            return this;
        }

        /**
         * Builds a new {@link RepositoriesRemoved} object using the set fields.
         * @return {@link RepositoriesRemoved}
         */
        public RepositoriesRemoved build() {
            return new RepositoriesRemoved(fullName, id, name, nodeId, mPrivate);
        }
    }
}
