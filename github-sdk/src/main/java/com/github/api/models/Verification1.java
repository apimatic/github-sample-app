/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for Verification1 type.
 */
public class Verification1 {
    private Boolean verified;
    private String reason;
    private OptionalNullable<String> signature;
    private OptionalNullable<String> payload;

    /**
     * Default constructor.
     */
    public Verification1() {
    }

    /**
     * Initialization constructor.
     * @param  verified  Boolean value for verified.
     * @param  reason  String value for reason.
     * @param  signature  String value for signature.
     * @param  payload  String value for payload.
     */
    public Verification1(
            Boolean verified,
            String reason,
            String signature,
            String payload) {
        this.verified = verified;
        this.reason = reason;
        this.signature = OptionalNullable.of(signature);
        this.payload = OptionalNullable.of(payload);
    }

    /**
     * Internal initialization constructor.
     */
    protected Verification1(Boolean verified, String reason, OptionalNullable<String> signature,
            OptionalNullable<String> payload) {
        this.verified = verified;
        this.reason = reason;
        this.signature = signature;
        this.payload = payload;
    }

    /**
     * Getter for Verified.
     * @return Returns the Boolean
     */
    @JsonGetter("verified")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getVerified() {
        return verified;
    }

    /**
     * Setter for Verified.
     * @param verified Value for Boolean
     */
    @JsonSetter("verified")
    public void setVerified(Boolean verified) {
        this.verified = verified;
    }

    /**
     * Getter for Reason.
     * @return Returns the String
     */
    @JsonGetter("reason")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getReason() {
        return reason;
    }

    /**
     * Setter for Reason.
     * @param reason Value for String
     */
    @JsonSetter("reason")
    public void setReason(String reason) {
        this.reason = reason;
    }

    /**
     * Internal Getter for Signature.
     * @return Returns the Internal String
     */
    @JsonGetter("signature")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSignature() {
        return this.signature;
    }

    /**
     * Getter for Signature.
     * @return Returns the String
     */
    public String getSignature() {
        return OptionalNullable.getFrom(signature);
    }

    /**
     * Setter for Signature.
     * @param signature Value for String
     */
    @JsonSetter("signature")
    public void setSignature(String signature) {
        this.signature = OptionalNullable.of(signature);
    }

    /**
     * UnSetter for Signature.
     */
    public void unsetSignature() {
        signature = null;
    }

    /**
     * Internal Getter for Payload.
     * @return Returns the Internal String
     */
    @JsonGetter("payload")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPayload() {
        return this.payload;
    }

    /**
     * Getter for Payload.
     * @return Returns the String
     */
    public String getPayload() {
        return OptionalNullable.getFrom(payload);
    }

    /**
     * Setter for Payload.
     * @param payload Value for String
     */
    @JsonSetter("payload")
    public void setPayload(String payload) {
        this.payload = OptionalNullable.of(payload);
    }

    /**
     * UnSetter for Payload.
     */
    public void unsetPayload() {
        payload = null;
    }

    /**
     * Converts this Verification1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Verification1 [" + "verified=" + verified + ", reason=" + reason + ", signature="
                + signature + ", payload=" + payload + "]";
    }

    /**
     * Builds a new {@link Verification1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Verification1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .verified(getVerified())
                .reason(getReason());
        builder.signature = internalGetSignature();
        builder.payload = internalGetPayload();
        return builder;
    }

    /**
     * Class to build instances of {@link Verification1}.
     */
    public static class Builder {
        private Boolean verified;
        private String reason;
        private OptionalNullable<String> signature;
        private OptionalNullable<String> payload;



        /**
         * Setter for verified.
         * @param  verified  Boolean value for verified.
         * @return Builder
         */
        public Builder verified(Boolean verified) {
            this.verified = verified;
            return this;
        }

        /**
         * Setter for reason.
         * @param  reason  String value for reason.
         * @return Builder
         */
        public Builder reason(String reason) {
            this.reason = reason;
            return this;
        }

        /**
         * Setter for signature.
         * @param  signature  String value for signature.
         * @return Builder
         */
        public Builder signature(String signature) {
            this.signature = OptionalNullable.of(signature);
            return this;
        }

        /**
         * UnSetter for signature.
         * @return Builder
         */
        public Builder unsetSignature() {
            signature = null;
            return this;
        }

        /**
         * Setter for payload.
         * @param  payload  String value for payload.
         * @return Builder
         */
        public Builder payload(String payload) {
            this.payload = OptionalNullable.of(payload);
            return this;
        }

        /**
         * UnSetter for payload.
         * @return Builder
         */
        public Builder unsetPayload() {
            payload = null;
            return this;
        }

        /**
         * Builds a new {@link Verification1} object using the set fields.
         * @return {@link Verification1}
         */
        public Verification1 build() {
            return new Verification1(verified, reason, signature, payload);
        }
    }
}
