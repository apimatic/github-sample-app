/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for Commit7 type.
 */
public class Commit7 {
    private List<String> added;
    private Author62 author;
    private Committer4 committer;
    private boolean distinct;
    private String id;
    private String message;
    private List<String> modified;
    private List<String> removed;
    private LocalDateTime timestamp;
    private String treeId;
    private String url;

    /**
     * Default constructor.
     */
    public Commit7() {
    }

    /**
     * Initialization constructor.
     * @param  author  Author62 value for author.
     * @param  committer  Committer4 value for committer.
     * @param  distinct  boolean value for distinct.
     * @param  id  String value for id.
     * @param  message  String value for message.
     * @param  timestamp  LocalDateTime value for timestamp.
     * @param  treeId  String value for treeId.
     * @param  url  String value for url.
     * @param  added  List of String value for added.
     * @param  modified  List of String value for modified.
     * @param  removed  List of String value for removed.
     */
    public Commit7(
            Author62 author,
            Committer4 committer,
            boolean distinct,
            String id,
            String message,
            LocalDateTime timestamp,
            String treeId,
            String url,
            List<String> added,
            List<String> modified,
            List<String> removed) {
        this.added = added;
        this.author = author;
        this.committer = committer;
        this.distinct = distinct;
        this.id = id;
        this.message = message;
        this.modified = modified;
        this.removed = removed;
        this.timestamp = timestamp;
        this.treeId = treeId;
        this.url = url;
    }

    /**
     * Getter for Added.
     * An array of files added in the commit.
     * @return Returns the List of String
     */
    @JsonGetter("added")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getAdded() {
        return added;
    }

    /**
     * Setter for Added.
     * An array of files added in the commit.
     * @param added Value for List of String
     */
    @JsonSetter("added")
    public void setAdded(List<String> added) {
        this.added = added;
    }

    /**
     * Getter for Author.
     * @return Returns the Author62
     */
    @JsonGetter("author")
    public Author62 getAuthor() {
        return author;
    }

    /**
     * Setter for Author.
     * @param author Value for Author62
     */
    @JsonSetter("author")
    public void setAuthor(Author62 author) {
        this.author = author;
    }

    /**
     * Getter for Committer.
     * @return Returns the Committer4
     */
    @JsonGetter("committer")
    public Committer4 getCommitter() {
        return committer;
    }

    /**
     * Setter for Committer.
     * @param committer Value for Committer4
     */
    @JsonSetter("committer")
    public void setCommitter(Committer4 committer) {
        this.committer = committer;
    }

    /**
     * Getter for Distinct.
     * Whether this commit is distinct from any that have been pushed before.
     * @return Returns the boolean
     */
    @JsonGetter("distinct")
    public boolean getDistinct() {
        return distinct;
    }

    /**
     * Setter for Distinct.
     * Whether this commit is distinct from any that have been pushed before.
     * @param distinct Value for boolean
     */
    @JsonSetter("distinct")
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Message.
     * The commit message.
     * @return Returns the String
     */
    @JsonGetter("message")
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * The commit message.
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for Modified.
     * An array of files modified by the commit.
     * @return Returns the List of String
     */
    @JsonGetter("modified")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getModified() {
        return modified;
    }

    /**
     * Setter for Modified.
     * An array of files modified by the commit.
     * @param modified Value for List of String
     */
    @JsonSetter("modified")
    public void setModified(List<String> modified) {
        this.modified = modified;
    }

    /**
     * Getter for Removed.
     * An array of files removed in the commit.
     * @return Returns the List of String
     */
    @JsonGetter("removed")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getRemoved() {
        return removed;
    }

    /**
     * Setter for Removed.
     * An array of files removed in the commit.
     * @param removed Value for List of String
     */
    @JsonSetter("removed")
    public void setRemoved(List<String> removed) {
        this.removed = removed;
    }

    /**
     * Getter for Timestamp.
     * The ISO 8601 timestamp of the commit.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("timestamp")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getTimestamp() {
        return timestamp;
    }

    /**
     * Setter for Timestamp.
     * The ISO 8601 timestamp of the commit.
     * @param timestamp Value for LocalDateTime
     */
    @JsonSetter("timestamp")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setTimestamp(LocalDateTime timestamp) {
        this.timestamp = timestamp;
    }

    /**
     * Getter for TreeId.
     * @return Returns the String
     */
    @JsonGetter("tree_id")
    public String getTreeId() {
        return treeId;
    }

    /**
     * Setter for TreeId.
     * @param treeId Value for String
     */
    @JsonSetter("tree_id")
    public void setTreeId(String treeId) {
        this.treeId = treeId;
    }

    /**
     * Getter for Url.
     * URL that points to the commit API resource.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * URL that points to the commit API resource.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Converts this Commit7 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Commit7 [" + "author=" + author + ", committer=" + committer + ", distinct="
                + distinct + ", id=" + id + ", message=" + message + ", timestamp=" + timestamp
                + ", treeId=" + treeId + ", url=" + url + ", added=" + added + ", modified="
                + modified + ", removed=" + removed + "]";
    }

    /**
     * Builds a new {@link Commit7.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Commit7.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(author, committer, distinct, id, message, timestamp, treeId,
                url)
                .added(getAdded())
                .modified(getModified())
                .removed(getRemoved());
        return builder;
    }

    /**
     * Class to build instances of {@link Commit7}.
     */
    public static class Builder {
        private Author62 author;
        private Committer4 committer;
        private boolean distinct;
        private String id;
        private String message;
        private LocalDateTime timestamp;
        private String treeId;
        private String url;
        private List<String> added;
        private List<String> modified;
        private List<String> removed;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  author  Author62 value for author.
         * @param  committer  Committer4 value for committer.
         * @param  distinct  boolean value for distinct.
         * @param  id  String value for id.
         * @param  message  String value for message.
         * @param  timestamp  LocalDateTime value for timestamp.
         * @param  treeId  String value for treeId.
         * @param  url  String value for url.
         */
        public Builder(Author62 author, Committer4 committer, boolean distinct, String id,
                String message, LocalDateTime timestamp, String treeId, String url) {
            this.author = author;
            this.committer = committer;
            this.distinct = distinct;
            this.id = id;
            this.message = message;
            this.timestamp = timestamp;
            this.treeId = treeId;
            this.url = url;
        }

        /**
         * Setter for author.
         * @param  author  Author62 value for author.
         * @return Builder
         */
        public Builder author(Author62 author) {
            this.author = author;
            return this;
        }

        /**
         * Setter for committer.
         * @param  committer  Committer4 value for committer.
         * @return Builder
         */
        public Builder committer(Committer4 committer) {
            this.committer = committer;
            return this;
        }

        /**
         * Setter for distinct.
         * @param  distinct  boolean value for distinct.
         * @return Builder
         */
        public Builder distinct(boolean distinct) {
            this.distinct = distinct;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for timestamp.
         * @param  timestamp  LocalDateTime value for timestamp.
         * @return Builder
         */
        public Builder timestamp(LocalDateTime timestamp) {
            this.timestamp = timestamp;
            return this;
        }

        /**
         * Setter for treeId.
         * @param  treeId  String value for treeId.
         * @return Builder
         */
        public Builder treeId(String treeId) {
            this.treeId = treeId;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for added.
         * @param  added  List of String value for added.
         * @return Builder
         */
        public Builder added(List<String> added) {
            this.added = added;
            return this;
        }

        /**
         * Setter for modified.
         * @param  modified  List of String value for modified.
         * @return Builder
         */
        public Builder modified(List<String> modified) {
            this.modified = modified;
            return this;
        }

        /**
         * Setter for removed.
         * @param  removed  List of String value for removed.
         * @return Builder
         */
        public Builder removed(List<String> removed) {
            this.removed = removed;
            return this;
        }

        /**
         * Builds a new {@link Commit7} object using the set fields.
         * @return {@link Commit7}
         */
        public Commit7 build() {
            return new Commit7(author, committer, distinct, id, message, timestamp, treeId, url,
                    added, modified, removed);
        }
    }
}
