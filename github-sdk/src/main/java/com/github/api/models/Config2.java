/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Config2 type.
 */
public class Config2 {
    private ContentTypeEnum contentType;
    private String insecureSsl;
    private String secret;
    private String url;

    /**
     * Default constructor.
     */
    public Config2() {
    }

    /**
     * Initialization constructor.
     * @param  contentType  ContentTypeEnum value for contentType.
     * @param  insecureSsl  String value for insecureSsl.
     * @param  url  String value for url.
     * @param  secret  String value for secret.
     */
    public Config2(
            ContentTypeEnum contentType,
            String insecureSsl,
            String url,
            String secret) {
        this.contentType = contentType;
        this.insecureSsl = insecureSsl;
        this.secret = secret;
        this.url = url;
    }

    /**
     * Getter for ContentType.
     * @return Returns the ContentTypeEnum
     */
    @JsonGetter("content_type")
    public ContentTypeEnum getContentType() {
        return contentType;
    }

    /**
     * Setter for ContentType.
     * @param contentType Value for ContentTypeEnum
     */
    @JsonSetter("content_type")
    public void setContentType(ContentTypeEnum contentType) {
        this.contentType = contentType;
    }

    /**
     * Getter for InsecureSsl.
     * @return Returns the String
     */
    @JsonGetter("insecure_ssl")
    public String getInsecureSsl() {
        return insecureSsl;
    }

    /**
     * Setter for InsecureSsl.
     * @param insecureSsl Value for String
     */
    @JsonSetter("insecure_ssl")
    public void setInsecureSsl(String insecureSsl) {
        this.insecureSsl = insecureSsl;
    }

    /**
     * Getter for Secret.
     * @return Returns the String
     */
    @JsonGetter("secret")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSecret() {
        return secret;
    }

    /**
     * Setter for Secret.
     * @param secret Value for String
     */
    @JsonSetter("secret")
    public void setSecret(String secret) {
        this.secret = secret;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Converts this Config2 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Config2 [" + "contentType=" + contentType + ", insecureSsl=" + insecureSsl
                + ", url=" + url + ", secret=" + secret + "]";
    }

    /**
     * Builds a new {@link Config2.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Config2.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(contentType, insecureSsl, url)
                .secret(getSecret());
        return builder;
    }

    /**
     * Class to build instances of {@link Config2}.
     */
    public static class Builder {
        private ContentTypeEnum contentType;
        private String insecureSsl;
        private String url;
        private String secret;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  contentType  ContentTypeEnum value for contentType.
         * @param  insecureSsl  String value for insecureSsl.
         * @param  url  String value for url.
         */
        public Builder(ContentTypeEnum contentType, String insecureSsl, String url) {
            this.contentType = contentType;
            this.insecureSsl = insecureSsl;
            this.url = url;
        }

        /**
         * Setter for contentType.
         * @param  contentType  ContentTypeEnum value for contentType.
         * @return Builder
         */
        public Builder contentType(ContentTypeEnum contentType) {
            this.contentType = contentType;
            return this;
        }

        /**
         * Setter for insecureSsl.
         * @param  insecureSsl  String value for insecureSsl.
         * @return Builder
         */
        public Builder insecureSsl(String insecureSsl) {
            this.insecureSsl = insecureSsl;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for secret.
         * @param  secret  String value for secret.
         * @return Builder
         */
        public Builder secret(String secret) {
            this.secret = secret;
            return this;
        }

        /**
         * Builds a new {@link Config2} object using the set fields.
         * @return {@link Config2}
         */
        public Config2 build() {
            return new Config2(contentType, insecureSsl, url, secret);
        }
    }
}
