/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Changes8 type.
 */
public class Changes8 {
    private Object oldIssue;
    private OldRepository oldRepository;

    /**
     * Default constructor.
     */
    public Changes8() {
    }

    /**
     * Initialization constructor.
     * @param  oldIssue  Object value for oldIssue.
     * @param  oldRepository  OldRepository value for oldRepository.
     */
    public Changes8(
            Object oldIssue,
            OldRepository oldRepository) {
        this.oldIssue = oldIssue;
        this.oldRepository = oldRepository;
    }

    /**
     * Getter for OldIssue.
     * @return Returns the Object
     */
    @JsonGetter("old_issue")
    public Object getOldIssue() {
        return oldIssue;
    }

    /**
     * Setter for OldIssue.
     * @param oldIssue Value for Object
     */
    @JsonSetter("old_issue")
    public void setOldIssue(Object oldIssue) {
        this.oldIssue = oldIssue;
    }

    /**
     * Getter for OldRepository.
     * @return Returns the OldRepository
     */
    @JsonGetter("old_repository")
    public OldRepository getOldRepository() {
        return oldRepository;
    }

    /**
     * Setter for OldRepository.
     * @param oldRepository Value for OldRepository
     */
    @JsonSetter("old_repository")
    public void setOldRepository(OldRepository oldRepository) {
        this.oldRepository = oldRepository;
    }

    /**
     * Converts this Changes8 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Changes8 [" + "oldIssue=" + oldIssue + ", oldRepository=" + oldRepository + "]";
    }

    /**
     * Builds a new {@link Changes8.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Changes8.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(oldIssue, oldRepository);
        return builder;
    }

    /**
     * Class to build instances of {@link Changes8}.
     */
    public static class Builder {
        private Object oldIssue;
        private OldRepository oldRepository;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  oldIssue  Object value for oldIssue.
         * @param  oldRepository  OldRepository value for oldRepository.
         */
        public Builder(Object oldIssue, OldRepository oldRepository) {
            this.oldIssue = oldIssue;
            this.oldRepository = oldRepository;
        }

        /**
         * Setter for oldIssue.
         * @param  oldIssue  Object value for oldIssue.
         * @return Builder
         */
        public Builder oldIssue(Object oldIssue) {
            this.oldIssue = oldIssue;
            return this;
        }

        /**
         * Setter for oldRepository.
         * @param  oldRepository  OldRepository value for oldRepository.
         * @return Builder
         */
        public Builder oldRepository(OldRepository oldRepository) {
            this.oldRepository = oldRepository;
            return this;
        }

        /**
         * Builds a new {@link Changes8} object using the set fields.
         * @return {@link Changes8}
         */
        public Changes8 build() {
            return new Changes8(oldIssue, oldRepository);
        }
    }
}
