/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Tag type.
 */
public class Tag {
    private String name;
    private Commit3 commit;
    private String zipballUrl;
    private String tarballUrl;
    private String nodeId;

    /**
     * Default constructor.
     */
    public Tag() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  commit  Commit3 value for commit.
     * @param  zipballUrl  String value for zipballUrl.
     * @param  tarballUrl  String value for tarballUrl.
     * @param  nodeId  String value for nodeId.
     */
    public Tag(
            String name,
            Commit3 commit,
            String zipballUrl,
            String tarballUrl,
            String nodeId) {
        this.name = name;
        this.commit = commit;
        this.zipballUrl = zipballUrl;
        this.tarballUrl = tarballUrl;
        this.nodeId = nodeId;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Commit.
     * @return Returns the Commit3
     */
    @JsonGetter("commit")
    public Commit3 getCommit() {
        return commit;
    }

    /**
     * Setter for Commit.
     * @param commit Value for Commit3
     */
    @JsonSetter("commit")
    public void setCommit(Commit3 commit) {
        this.commit = commit;
    }

    /**
     * Getter for ZipballUrl.
     * @return Returns the String
     */
    @JsonGetter("zipball_url")
    public String getZipballUrl() {
        return zipballUrl;
    }

    /**
     * Setter for ZipballUrl.
     * @param zipballUrl Value for String
     */
    @JsonSetter("zipball_url")
    public void setZipballUrl(String zipballUrl) {
        this.zipballUrl = zipballUrl;
    }

    /**
     * Getter for TarballUrl.
     * @return Returns the String
     */
    @JsonGetter("tarball_url")
    public String getTarballUrl() {
        return tarballUrl;
    }

    /**
     * Setter for TarballUrl.
     * @param tarballUrl Value for String
     */
    @JsonSetter("tarball_url")
    public void setTarballUrl(String tarballUrl) {
        this.tarballUrl = tarballUrl;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Converts this Tag into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Tag [" + "name=" + name + ", commit=" + commit + ", zipballUrl=" + zipballUrl
                + ", tarballUrl=" + tarballUrl + ", nodeId=" + nodeId + "]";
    }

    /**
     * Builds a new {@link Tag.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Tag.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, commit, zipballUrl, tarballUrl, nodeId);
        return builder;
    }

    /**
     * Class to build instances of {@link Tag}.
     */
    public static class Builder {
        private String name;
        private Commit3 commit;
        private String zipballUrl;
        private String tarballUrl;
        private String nodeId;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  commit  Commit3 value for commit.
         * @param  zipballUrl  String value for zipballUrl.
         * @param  tarballUrl  String value for tarballUrl.
         * @param  nodeId  String value for nodeId.
         */
        public Builder(String name, Commit3 commit, String zipballUrl, String tarballUrl,
                String nodeId) {
            this.name = name;
            this.commit = commit;
            this.zipballUrl = zipballUrl;
            this.tarballUrl = tarballUrl;
            this.nodeId = nodeId;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for commit.
         * @param  commit  Commit3 value for commit.
         * @return Builder
         */
        public Builder commit(Commit3 commit) {
            this.commit = commit;
            return this;
        }

        /**
         * Setter for zipballUrl.
         * @param  zipballUrl  String value for zipballUrl.
         * @return Builder
         */
        public Builder zipballUrl(String zipballUrl) {
            this.zipballUrl = zipballUrl;
            return this;
        }

        /**
         * Setter for tarballUrl.
         * @param  tarballUrl  String value for tarballUrl.
         * @return Builder
         */
        public Builder tarballUrl(String tarballUrl) {
            this.tarballUrl = tarballUrl;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Builds a new {@link Tag} object using the set fields.
         * @return {@link Tag}
         */
        public Tag build() {
            return new Tag(name, commit, zipballUrl, tarballUrl, nodeId);
        }
    }
}
