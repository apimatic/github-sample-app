/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;

/**
 * This is a model class for Event type.
 */
public class Event {
    private String id;
    private String type;
    private Actor1 actor;
    private Repo repo;
    private Org org;
    private Payload payload;
    private boolean mPublic;
    private LocalDateTime createdAt;

    /**
     * Default constructor.
     */
    public Event() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  type  String value for type.
     * @param  actor  Actor1 value for actor.
     * @param  repo  Repo value for repo.
     * @param  payload  Payload value for payload.
     * @param  mPublic  boolean value for mPublic.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  org  Org value for org.
     */
    public Event(
            String id,
            String type,
            Actor1 actor,
            Repo repo,
            Payload payload,
            boolean mPublic,
            LocalDateTime createdAt,
            Org org) {
        this.id = id;
        this.type = type;
        this.actor = actor;
        this.repo = repo;
        this.org = org;
        this.payload = payload;
        this.mPublic = mPublic;
        this.createdAt = createdAt;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Actor.
     * @return Returns the Actor1
     */
    @JsonGetter("actor")
    public Actor1 getActor() {
        return actor;
    }

    /**
     * Setter for Actor.
     * @param actor Value for Actor1
     */
    @JsonSetter("actor")
    public void setActor(Actor1 actor) {
        this.actor = actor;
    }

    /**
     * Getter for Repo.
     * @return Returns the Repo
     */
    @JsonGetter("repo")
    public Repo getRepo() {
        return repo;
    }

    /**
     * Setter for Repo.
     * @param repo Value for Repo
     */
    @JsonSetter("repo")
    public void setRepo(Repo repo) {
        this.repo = repo;
    }

    /**
     * Getter for Org.
     * @return Returns the Org
     */
    @JsonGetter("org")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Org getOrg() {
        return org;
    }

    /**
     * Setter for Org.
     * @param org Value for Org
     */
    @JsonSetter("org")
    public void setOrg(Org org) {
        this.org = org;
    }

    /**
     * Getter for Payload.
     * @return Returns the Payload
     */
    @JsonGetter("payload")
    public Payload getPayload() {
        return payload;
    }

    /**
     * Setter for Payload.
     * @param payload Value for Payload
     */
    @JsonSetter("payload")
    public void setPayload(Payload payload) {
        this.payload = payload;
    }

    /**
     * Getter for Public.
     * @return Returns the boolean
     */
    @JsonGetter("public")
    public boolean getPublic() {
        return mPublic;
    }

    /**
     * Setter for Public.
     * @param mPublic Value for boolean
     */
    @JsonSetter("public")
    public void setPublic(boolean mPublic) {
        this.mPublic = mPublic;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Converts this Event into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Event [" + "id=" + id + ", type=" + type + ", actor=" + actor + ", repo=" + repo
                + ", payload=" + payload + ", mPublic=" + mPublic + ", createdAt=" + createdAt
                + ", org=" + org + "]";
    }

    /**
     * Builds a new {@link Event.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Event.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, type, actor, repo, payload, mPublic, createdAt)
                .org(getOrg());
        return builder;
    }

    /**
     * Class to build instances of {@link Event}.
     */
    public static class Builder {
        private String id;
        private String type;
        private Actor1 actor;
        private Repo repo;
        private Payload payload;
        private boolean mPublic;
        private LocalDateTime createdAt;
        private Org org;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  type  String value for type.
         * @param  actor  Actor1 value for actor.
         * @param  repo  Repo value for repo.
         * @param  payload  Payload value for payload.
         * @param  mPublic  boolean value for mPublic.
         * @param  createdAt  LocalDateTime value for createdAt.
         */
        public Builder(String id, String type, Actor1 actor, Repo repo, Payload payload,
                boolean mPublic, LocalDateTime createdAt) {
            this.id = id;
            this.type = type;
            this.actor = actor;
            this.repo = repo;
            this.payload = payload;
            this.mPublic = mPublic;
            this.createdAt = createdAt;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for actor.
         * @param  actor  Actor1 value for actor.
         * @return Builder
         */
        public Builder actor(Actor1 actor) {
            this.actor = actor;
            return this;
        }

        /**
         * Setter for repo.
         * @param  repo  Repo value for repo.
         * @return Builder
         */
        public Builder repo(Repo repo) {
            this.repo = repo;
            return this;
        }

        /**
         * Setter for payload.
         * @param  payload  Payload value for payload.
         * @return Builder
         */
        public Builder payload(Payload payload) {
            this.payload = payload;
            return this;
        }

        /**
         * Setter for mPublic.
         * @param  mPublic  boolean value for mPublic.
         * @return Builder
         */
        public Builder mPublic(boolean mPublic) {
            this.mPublic = mPublic;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for org.
         * @param  org  Org value for org.
         * @return Builder
         */
        public Builder org(Org org) {
            this.org = org;
            return this;
        }

        /**
         * Builds a new {@link Event} object using the set fields.
         * @return {@link Event}
         */
        public Event build() {
            return new Event(id, type, actor, repo, payload, mPublic, createdAt, org);
        }
    }
}
