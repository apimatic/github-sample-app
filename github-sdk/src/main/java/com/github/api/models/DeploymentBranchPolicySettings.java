/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for DeploymentBranchPolicySettings type.
 */
public class DeploymentBranchPolicySettings {
    private boolean protectedBranches;
    private boolean customBranchPolicies;

    /**
     * Default constructor.
     */
    public DeploymentBranchPolicySettings() {
    }

    /**
     * Initialization constructor.
     * @param  protectedBranches  boolean value for protectedBranches.
     * @param  customBranchPolicies  boolean value for customBranchPolicies.
     */
    public DeploymentBranchPolicySettings(
            boolean protectedBranches,
            boolean customBranchPolicies) {
        this.protectedBranches = protectedBranches;
        this.customBranchPolicies = customBranchPolicies;
    }

    /**
     * Getter for ProtectedBranches.
     * Whether only branches with branch protection rules can deploy to this environment. If
     * `protected_branches` is `true`, `custom_branch_policies` must be `false`; if
     * `protected_branches` is `false`, `custom_branch_policies` must be `true`.
     * @return Returns the boolean
     */
    @JsonGetter("protected_branches")
    public boolean getProtectedBranches() {
        return protectedBranches;
    }

    /**
     * Setter for ProtectedBranches.
     * Whether only branches with branch protection rules can deploy to this environment. If
     * `protected_branches` is `true`, `custom_branch_policies` must be `false`; if
     * `protected_branches` is `false`, `custom_branch_policies` must be `true`.
     * @param protectedBranches Value for boolean
     */
    @JsonSetter("protected_branches")
    public void setProtectedBranches(boolean protectedBranches) {
        this.protectedBranches = protectedBranches;
    }

    /**
     * Getter for CustomBranchPolicies.
     * Whether only branches that match the specified name patterns can deploy to this environment.
     * If `custom_branch_policies` is `true`, `protected_branches` must be `false`; if
     * `custom_branch_policies` is `false`, `protected_branches` must be `true`.
     * @return Returns the boolean
     */
    @JsonGetter("custom_branch_policies")
    public boolean getCustomBranchPolicies() {
        return customBranchPolicies;
    }

    /**
     * Setter for CustomBranchPolicies.
     * Whether only branches that match the specified name patterns can deploy to this environment.
     * If `custom_branch_policies` is `true`, `protected_branches` must be `false`; if
     * `custom_branch_policies` is `false`, `protected_branches` must be `true`.
     * @param customBranchPolicies Value for boolean
     */
    @JsonSetter("custom_branch_policies")
    public void setCustomBranchPolicies(boolean customBranchPolicies) {
        this.customBranchPolicies = customBranchPolicies;
    }

    /**
     * Converts this DeploymentBranchPolicySettings into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DeploymentBranchPolicySettings [" + "protectedBranches=" + protectedBranches
                + ", customBranchPolicies=" + customBranchPolicies + "]";
    }

    /**
     * Builds a new {@link DeploymentBranchPolicySettings.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DeploymentBranchPolicySettings.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(protectedBranches, customBranchPolicies);
        return builder;
    }

    /**
     * Class to build instances of {@link DeploymentBranchPolicySettings}.
     */
    public static class Builder {
        private boolean protectedBranches;
        private boolean customBranchPolicies;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  protectedBranches  boolean value for protectedBranches.
         * @param  customBranchPolicies  boolean value for customBranchPolicies.
         */
        public Builder(boolean protectedBranches, boolean customBranchPolicies) {
            this.protectedBranches = protectedBranches;
            this.customBranchPolicies = customBranchPolicies;
        }

        /**
         * Setter for protectedBranches.
         * @param  protectedBranches  boolean value for protectedBranches.
         * @return Builder
         */
        public Builder protectedBranches(boolean protectedBranches) {
            this.protectedBranches = protectedBranches;
            return this;
        }

        /**
         * Setter for customBranchPolicies.
         * @param  customBranchPolicies  boolean value for customBranchPolicies.
         * @return Builder
         */
        public Builder customBranchPolicies(boolean customBranchPolicies) {
            this.customBranchPolicies = customBranchPolicies;
            return this;
        }

        /**
         * Builds a new {@link DeploymentBranchPolicySettings} object using the set fields.
         * @return {@link DeploymentBranchPolicySettings}
         */
        public DeploymentBranchPolicySettings build() {
            return new DeploymentBranchPolicySettings(protectedBranches, customBranchPolicies);
        }
    }
}
