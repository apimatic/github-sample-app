/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for FileCommit type.
 */
public class FileCommit {
    private Object content;
    private Commit4 commit;

    /**
     * Default constructor.
     */
    public FileCommit() {
    }

    /**
     * Initialization constructor.
     * @param  content  Object value for content.
     * @param  commit  Commit4 value for commit.
     */
    public FileCommit(
            Object content,
            Commit4 commit) {
        this.content = content;
        this.commit = commit;
    }

    /**
     * Getter for Content.
     * @return Returns the Object
     */
    @JsonGetter("content")
    public Object getContent() {
        return content;
    }

    /**
     * Setter for Content.
     * @param content Value for Object
     */
    @JsonSetter("content")
    public void setContent(Object content) {
        this.content = content;
    }

    /**
     * Getter for Commit.
     * @return Returns the Commit4
     */
    @JsonGetter("commit")
    public Commit4 getCommit() {
        return commit;
    }

    /**
     * Setter for Commit.
     * @param commit Value for Commit4
     */
    @JsonSetter("commit")
    public void setCommit(Commit4 commit) {
        this.commit = commit;
    }

    /**
     * Converts this FileCommit into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "FileCommit [" + "content=" + content + ", commit=" + commit + "]";
    }

    /**
     * Builds a new {@link FileCommit.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link FileCommit.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(content, commit);
        return builder;
    }

    /**
     * Class to build instances of {@link FileCommit}.
     */
    public static class Builder {
        private Object content;
        private Commit4 commit;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  content  Object value for content.
         * @param  commit  Commit4 value for commit.
         */
        public Builder(Object content, Commit4 commit) {
            this.content = content;
            this.commit = commit;
        }

        /**
         * Setter for content.
         * @param  content  Object value for content.
         * @return Builder
         */
        public Builder content(Object content) {
            this.content = content;
            return this;
        }

        /**
         * Setter for commit.
         * @param  commit  Commit4 value for commit.
         * @return Builder
         */
        public Builder commit(Commit4 commit) {
            this.commit = commit;
            return this;
        }

        /**
         * Builds a new {@link FileCommit} object using the set fields.
         * @return {@link FileCommit}
         */
        public FileCommit build() {
            return new FileCommit(content, commit);
        }
    }
}
