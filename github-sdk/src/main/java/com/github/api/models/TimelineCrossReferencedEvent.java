/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;

/**
 * This is a model class for TimelineCrossReferencedEvent type.
 */
public class TimelineCrossReferencedEvent {
    private String event;
    private Actor2 actor;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private Source source;

    /**
     * Default constructor.
     */
    public TimelineCrossReferencedEvent() {
    }

    /**
     * Initialization constructor.
     * @param  event  String value for event.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  source  Source value for source.
     * @param  actor  Actor2 value for actor.
     */
    public TimelineCrossReferencedEvent(
            String event,
            LocalDateTime createdAt,
            LocalDateTime updatedAt,
            Source source,
            Actor2 actor) {
        this.event = event;
        this.actor = actor;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.source = source;
    }

    /**
     * Initialization constructor.
     * @param  event  String value for event.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  source  Source value for source.
     */
    @JsonCreator
    private TimelineCrossReferencedEvent(
            @JsonProperty("event") String event,
            @JsonProperty("created_at") LocalDateTime createdAt,
            @JsonProperty("updated_at") LocalDateTime updatedAt,
            @JsonProperty("source") Source source) {
        this.event = event;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.source = source;
    }

    /**
     * Getter for Event.
     * @return Returns the String
     */
    @JsonGetter("event")
    public String getEvent() {
        return event;
    }

    /**
     * Setter for Event.
     * @param event Value for String
     */
    @JsonSetter("event")
    public void setEvent(String event) {
        this.event = event;
    }

    /**
     * Getter for Actor.
     * @return Returns the Actor2
     */
    @JsonGetter("actor")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Actor2 getActor() {
        return actor;
    }

    /**
     * Setter for Actor.
     * @param actor Value for Actor2
     */
    @JsonSetter("actor")
    public void setActor(Actor2 actor) {
        this.actor = actor;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Source.
     * @return Returns the Source
     */
    @JsonGetter("source")
    public Source getSource() {
        return source;
    }

    /**
     * Setter for Source.
     * @param source Value for Source
     */
    @JsonSetter("source")
    public void setSource(Source source) {
        this.source = source;
    }

    /**
     * Converts this TimelineCrossReferencedEvent into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TimelineCrossReferencedEvent [" + "event=" + event + ", createdAt=" + createdAt
                + ", updatedAt=" + updatedAt + ", source=" + source + ", actor=" + actor + "]";
    }

    /**
     * Builds a new {@link TimelineCrossReferencedEvent.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link TimelineCrossReferencedEvent.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(event, createdAt, updatedAt, source)
                .actor(getActor());
        return builder;
    }

    /**
     * Class to build instances of {@link TimelineCrossReferencedEvent}.
     */
    public static class Builder {
        private String event;
        private LocalDateTime createdAt;
        private LocalDateTime updatedAt;
        private Source source;
        private Actor2 actor;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  event  String value for event.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @param  source  Source value for source.
         */
        public Builder(String event, LocalDateTime createdAt, LocalDateTime updatedAt,
                Source source) {
            this.event = event;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
            this.source = source;
        }

        /**
         * Setter for event.
         * @param  event  String value for event.
         * @return Builder
         */
        public Builder event(String event) {
            this.event = event;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for source.
         * @param  source  Source value for source.
         * @return Builder
         */
        public Builder source(Source source) {
            this.source = source;
            return this;
        }

        /**
         * Setter for actor.
         * @param  actor  Actor2 value for actor.
         * @return Builder
         */
        public Builder actor(Actor2 actor) {
            this.actor = actor;
            return this;
        }

        /**
         * Builds a new {@link TimelineCrossReferencedEvent} object using the set fields.
         * @return {@link TimelineCrossReferencedEvent}
         */
        public TimelineCrossReferencedEvent build() {
            return new TimelineCrossReferencedEvent(event, createdAt, updatedAt, source, actor);
        }
    }
}
