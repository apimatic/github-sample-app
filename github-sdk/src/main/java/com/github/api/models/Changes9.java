/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Changes9 type.
 */
public class Changes9 {
    private Issue12 newIssue;
    private NewRepository newRepository;

    /**
     * Default constructor.
     */
    public Changes9() {
    }

    /**
     * Initialization constructor.
     * @param  newIssue  Issue12 value for newIssue.
     * @param  newRepository  NewRepository value for newRepository.
     */
    public Changes9(
            Issue12 newIssue,
            NewRepository newRepository) {
        this.newIssue = newIssue;
        this.newRepository = newRepository;
    }

    /**
     * Getter for NewIssue.
     * @return Returns the Issue12
     */
    @JsonGetter("new_issue")
    public Issue12 getNewIssue() {
        return newIssue;
    }

    /**
     * Setter for NewIssue.
     * @param newIssue Value for Issue12
     */
    @JsonSetter("new_issue")
    public void setNewIssue(Issue12 newIssue) {
        this.newIssue = newIssue;
    }

    /**
     * Getter for NewRepository.
     * @return Returns the NewRepository
     */
    @JsonGetter("new_repository")
    public NewRepository getNewRepository() {
        return newRepository;
    }

    /**
     * Setter for NewRepository.
     * @param newRepository Value for NewRepository
     */
    @JsonSetter("new_repository")
    public void setNewRepository(NewRepository newRepository) {
        this.newRepository = newRepository;
    }

    /**
     * Converts this Changes9 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Changes9 [" + "newIssue=" + newIssue + ", newRepository=" + newRepository + "]";
    }

    /**
     * Builds a new {@link Changes9.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Changes9.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(newIssue, newRepository);
        return builder;
    }

    /**
     * Class to build instances of {@link Changes9}.
     */
    public static class Builder {
        private Issue12 newIssue;
        private NewRepository newRepository;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  newIssue  Issue12 value for newIssue.
         * @param  newRepository  NewRepository value for newRepository.
         */
        public Builder(Issue12 newIssue, NewRepository newRepository) {
            this.newIssue = newIssue;
            this.newRepository = newRepository;
        }

        /**
         * Setter for newIssue.
         * @param  newIssue  Issue12 value for newIssue.
         * @return Builder
         */
        public Builder newIssue(Issue12 newIssue) {
            this.newIssue = newIssue;
            return this;
        }

        /**
         * Setter for newRepository.
         * @param  newRepository  NewRepository value for newRepository.
         * @return Builder
         */
        public Builder newRepository(NewRepository newRepository) {
            this.newRepository = newRepository;
            return this;
        }

        /**
         * Builds a new {@link Changes9} object using the set fields.
         * @return {@link Changes9}
         */
        public Changes9 build() {
            return new Changes9(newIssue, newRepository);
        }
    }
}
