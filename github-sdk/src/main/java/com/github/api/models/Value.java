/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Value type.
 */
public class Value {
    private String url;
    private String branch;
    private String commit;
    private String type;

    /**
     * Default constructor.
     */
    public Value() {
    }

    /**
     * Initialization constructor.
     * @param  url  String value for url.
     * @param  branch  String value for branch.
     * @param  commit  String value for commit.
     * @param  type  String value for type.
     */
    public Value(
            String url,
            String branch,
            String commit,
            String type) {
        this.url = url;
        this.branch = branch;
        this.commit = commit;
        this.type = type;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for Branch.
     * @return Returns the String
     */
    @JsonGetter("branch")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBranch() {
        return branch;
    }

    /**
     * Setter for Branch.
     * @param branch Value for String
     */
    @JsonSetter("branch")
    public void setBranch(String branch) {
        this.branch = branch;
    }

    /**
     * Getter for Commit.
     * @return Returns the String
     */
    @JsonGetter("commit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCommit() {
        return commit;
    }

    /**
     * Setter for Commit.
     * @param commit Value for String
     */
    @JsonSetter("commit")
    public void setCommit(String commit) {
        this.commit = commit;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Converts this Value into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Value [" + "url=" + url + ", branch=" + branch + ", commit=" + commit + ", type="
                + type + "]";
    }

    /**
     * Builds a new {@link Value.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Value.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .url(getUrl())
                .branch(getBranch())
                .commit(getCommit())
                .type(getType());
        return builder;
    }

    /**
     * Class to build instances of {@link Value}.
     */
    public static class Builder {
        private String url;
        private String branch;
        private String commit;
        private String type;



        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for branch.
         * @param  branch  String value for branch.
         * @return Builder
         */
        public Builder branch(String branch) {
            this.branch = branch;
            return this;
        }

        /**
         * Setter for commit.
         * @param  commit  String value for commit.
         * @return Builder
         */
        public Builder commit(String commit) {
            this.commit = commit;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Builds a new {@link Value} object using the set fields.
         * @return {@link Value}
         */
        public Value build() {
            return new Value(url, branch, commit, type);
        }
    }
}
