/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for AppInstallationsAccessTokensRequest type.
 */
public class AppInstallationsAccessTokensRequest {
    private List<String> repositories;
    private List<Integer> repositoryIds;
    private Permissions3 permissions;

    /**
     * Default constructor.
     */
    public AppInstallationsAccessTokensRequest() {
    }

    /**
     * Initialization constructor.
     * @param  repositories  List of String value for repositories.
     * @param  repositoryIds  List of Integer value for repositoryIds.
     * @param  permissions  Permissions3 value for permissions.
     */
    public AppInstallationsAccessTokensRequest(
            List<String> repositories,
            List<Integer> repositoryIds,
            Permissions3 permissions) {
        this.repositories = repositories;
        this.repositoryIds = repositoryIds;
        this.permissions = permissions;
    }

    /**
     * Getter for Repositories.
     * List of repository names that the token should have access to
     * @return Returns the List of String
     */
    @JsonGetter("repositories")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getRepositories() {
        return repositories;
    }

    /**
     * Setter for Repositories.
     * List of repository names that the token should have access to
     * @param repositories Value for List of String
     */
    @JsonSetter("repositories")
    public void setRepositories(List<String> repositories) {
        this.repositories = repositories;
    }

    /**
     * Getter for RepositoryIds.
     * List of repository IDs that the token should have access to
     * @return Returns the List of Integer
     */
    @JsonGetter("repository_ids")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Integer> getRepositoryIds() {
        return repositoryIds;
    }

    /**
     * Setter for RepositoryIds.
     * List of repository IDs that the token should have access to
     * @param repositoryIds Value for List of Integer
     */
    @JsonSetter("repository_ids")
    public void setRepositoryIds(List<Integer> repositoryIds) {
        this.repositoryIds = repositoryIds;
    }

    /**
     * Getter for Permissions.
     * @return Returns the Permissions3
     */
    @JsonGetter("permissions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Permissions3 getPermissions() {
        return permissions;
    }

    /**
     * Setter for Permissions.
     * @param permissions Value for Permissions3
     */
    @JsonSetter("permissions")
    public void setPermissions(Permissions3 permissions) {
        this.permissions = permissions;
    }

    /**
     * Converts this AppInstallationsAccessTokensRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "AppInstallationsAccessTokensRequest [" + "repositories=" + repositories
                + ", repositoryIds=" + repositoryIds + ", permissions=" + permissions + "]";
    }

    /**
     * Builds a new {@link AppInstallationsAccessTokensRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link AppInstallationsAccessTokensRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .repositories(getRepositories())
                .repositoryIds(getRepositoryIds())
                .permissions(getPermissions());
        return builder;
    }

    /**
     * Class to build instances of {@link AppInstallationsAccessTokensRequest}.
     */
    public static class Builder {
        private List<String> repositories;
        private List<Integer> repositoryIds;
        private Permissions3 permissions;



        /**
         * Setter for repositories.
         * @param  repositories  List of String value for repositories.
         * @return Builder
         */
        public Builder repositories(List<String> repositories) {
            this.repositories = repositories;
            return this;
        }

        /**
         * Setter for repositoryIds.
         * @param  repositoryIds  List of Integer value for repositoryIds.
         * @return Builder
         */
        public Builder repositoryIds(List<Integer> repositoryIds) {
            this.repositoryIds = repositoryIds;
            return this;
        }

        /**
         * Setter for permissions.
         * @param  permissions  Permissions3 value for permissions.
         * @return Builder
         */
        public Builder permissions(Permissions3 permissions) {
            this.permissions = permissions;
            return this;
        }

        /**
         * Builds a new {@link AppInstallationsAccessTokensRequest} object using the set fields.
         * @return {@link AppInstallationsAccessTokensRequest}
         */
        public AppInstallationsAccessTokensRequest build() {
            return new AppInstallationsAccessTokensRequest(repositories, repositoryIds,
                    permissions);
        }
    }
}
