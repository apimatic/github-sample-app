/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.github.api.ApiHelper;
import com.github.api.models.Changes22;
import com.github.api.models.Changes221;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for one-of types.
 */
@JsonDeserialize(using = Projectsv2ItemEditedEventChanges.Projectsv2ItemEditedEventChangesDeserializer.class)
public abstract class Projectsv2ItemEditedEventChanges {
    
    /**
     * One-of type initialization method.
     * @param changes22 Changes22 value for changes22.
     * @return The Changes22Case object.
     */
    public static Projectsv2ItemEditedEventChanges fromChanges22(Changes22 changes22) {
        return changes22 == null ? null : new Changes22Case(changes22);
    }

    /**
     * One-of type initialization method.
     * @param changes221 Changes221 value for changes221.
     * @return The Changes221Case object.
     */
    public static Projectsv2ItemEditedEventChanges fromChanges221(Changes221 changes221) {
        return changes221 == null ? null : new Changes221Case(changes221);
    }

    /**
     * Method to match from the provided one-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The one-of type cases callback.
     * @return The one-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for one-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R changes22(Changes22 changes22);

        R changes221(Changes221 changes221);
    }

    /**
     * This is a implementation class for Changes22Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase
    private static class Changes22Case extends Projectsv2ItemEditedEventChanges {

        @JsonValue
        private Changes22 changes22;

        Changes22Case(Changes22 changes22) {
            this.changes22 = changes22;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.changes22(this.changes22);
        }

        @JsonCreator
        private Changes22Case(JsonNode jsonNode) throws IOException {
            this.changes22 = ApiHelper.deserialize(jsonNode,
                Changes22.class);
        }

        @Override
        public String toString() {
            return changes22.toString();
        }
    }

    /**
     * This is a implementation class for Changes221Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase
    private static class Changes221Case extends Projectsv2ItemEditedEventChanges {

        @JsonValue
        private Changes221 changes221;

        Changes221Case(Changes221 changes221) {
            this.changes221 = changes221;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.changes221(this.changes221);
        }

        @JsonCreator
        private Changes221Case(JsonNode jsonNode) throws IOException {
            this.changes221 = ApiHelper.deserialize(jsonNode,
                Changes221.class);
        }

        @Override
        public String toString() {
            return changes221.toString();
        }
    }

    /**
     * This is a custom deserializer class for Projectsv2ItemEditedEventChanges.
     */
    protected static class Projectsv2ItemEditedEventChangesDeserializer
            extends JsonDeserializer<Projectsv2ItemEditedEventChanges> {

        @Override
        public Projectsv2ItemEditedEventChanges deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(Changes22Case.class,
                    Changes221Case.class), true);
        }
    }

}
