/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for DismissalRestrictions type.
 */
public class DismissalRestrictions {
    private List<SimpleUser> users;
    private List<Team> teams;
    private List<GitHubapp> apps;
    private String url;
    private String usersUrl;
    private String teamsUrl;

    /**
     * Default constructor.
     */
    public DismissalRestrictions() {
    }

    /**
     * Initialization constructor.
     * @param  users  List of SimpleUser value for users.
     * @param  teams  List of Team value for teams.
     * @param  apps  List of GitHubapp value for apps.
     * @param  url  String value for url.
     * @param  usersUrl  String value for usersUrl.
     * @param  teamsUrl  String value for teamsUrl.
     */
    public DismissalRestrictions(
            List<SimpleUser> users,
            List<Team> teams,
            List<GitHubapp> apps,
            String url,
            String usersUrl,
            String teamsUrl) {
        this.users = users;
        this.teams = teams;
        this.apps = apps;
        this.url = url;
        this.usersUrl = usersUrl;
        this.teamsUrl = teamsUrl;
    }

    /**
     * Getter for Users.
     * The list of users with review dismissal access.
     * @return Returns the List of SimpleUser
     */
    @JsonGetter("users")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SimpleUser> getUsers() {
        return users;
    }

    /**
     * Setter for Users.
     * The list of users with review dismissal access.
     * @param users Value for List of SimpleUser
     */
    @JsonSetter("users")
    public void setUsers(List<SimpleUser> users) {
        this.users = users;
    }

    /**
     * Getter for Teams.
     * The list of teams with review dismissal access.
     * @return Returns the List of Team
     */
    @JsonGetter("teams")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Team> getTeams() {
        return teams;
    }

    /**
     * Setter for Teams.
     * The list of teams with review dismissal access.
     * @param teams Value for List of Team
     */
    @JsonSetter("teams")
    public void setTeams(List<Team> teams) {
        this.teams = teams;
    }

    /**
     * Getter for Apps.
     * The list of apps with review dismissal access.
     * @return Returns the List of GitHubapp
     */
    @JsonGetter("apps")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<GitHubapp> getApps() {
        return apps;
    }

    /**
     * Setter for Apps.
     * The list of apps with review dismissal access.
     * @param apps Value for List of GitHubapp
     */
    @JsonSetter("apps")
    public void setApps(List<GitHubapp> apps) {
        this.apps = apps;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for UsersUrl.
     * @return Returns the String
     */
    @JsonGetter("users_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUsersUrl() {
        return usersUrl;
    }

    /**
     * Setter for UsersUrl.
     * @param usersUrl Value for String
     */
    @JsonSetter("users_url")
    public void setUsersUrl(String usersUrl) {
        this.usersUrl = usersUrl;
    }

    /**
     * Getter for TeamsUrl.
     * @return Returns the String
     */
    @JsonGetter("teams_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTeamsUrl() {
        return teamsUrl;
    }

    /**
     * Setter for TeamsUrl.
     * @param teamsUrl Value for String
     */
    @JsonSetter("teams_url")
    public void setTeamsUrl(String teamsUrl) {
        this.teamsUrl = teamsUrl;
    }

    /**
     * Converts this DismissalRestrictions into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DismissalRestrictions [" + "users=" + users + ", teams=" + teams + ", apps=" + apps
                + ", url=" + url + ", usersUrl=" + usersUrl + ", teamsUrl=" + teamsUrl + "]";
    }

    /**
     * Builds a new {@link DismissalRestrictions.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DismissalRestrictions.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .users(getUsers())
                .teams(getTeams())
                .apps(getApps())
                .url(getUrl())
                .usersUrl(getUsersUrl())
                .teamsUrl(getTeamsUrl());
        return builder;
    }

    /**
     * Class to build instances of {@link DismissalRestrictions}.
     */
    public static class Builder {
        private List<SimpleUser> users;
        private List<Team> teams;
        private List<GitHubapp> apps;
        private String url;
        private String usersUrl;
        private String teamsUrl;



        /**
         * Setter for users.
         * @param  users  List of SimpleUser value for users.
         * @return Builder
         */
        public Builder users(List<SimpleUser> users) {
            this.users = users;
            return this;
        }

        /**
         * Setter for teams.
         * @param  teams  List of Team value for teams.
         * @return Builder
         */
        public Builder teams(List<Team> teams) {
            this.teams = teams;
            return this;
        }

        /**
         * Setter for apps.
         * @param  apps  List of GitHubapp value for apps.
         * @return Builder
         */
        public Builder apps(List<GitHubapp> apps) {
            this.apps = apps;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for usersUrl.
         * @param  usersUrl  String value for usersUrl.
         * @return Builder
         */
        public Builder usersUrl(String usersUrl) {
            this.usersUrl = usersUrl;
            return this;
        }

        /**
         * Setter for teamsUrl.
         * @param  teamsUrl  String value for teamsUrl.
         * @return Builder
         */
        public Builder teamsUrl(String teamsUrl) {
            this.teamsUrl = teamsUrl;
            return this;
        }

        /**
         * Builds a new {@link DismissalRestrictions} object using the set fields.
         * @return {@link DismissalRestrictions}
         */
        public DismissalRestrictions build() {
            return new DismissalRestrictions(users, teams, apps, url, usersUrl, teamsUrl);
        }
    }
}
