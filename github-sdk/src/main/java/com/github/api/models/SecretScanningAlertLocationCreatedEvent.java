/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for SecretScanningAlertLocationCreatedEvent type.
 */
public class SecretScanningAlertLocationCreatedEvent {
    private Action1Enum action;
    private SecretScanningAlert alert;
    private Installation1 installation;
    private SecretScanningLocation location;
    private Organization2 organization;
    private Repository3 repository;
    private Sender sender;

    /**
     * Default constructor.
     */
    public SecretScanningAlertLocationCreatedEvent() {
    }

    /**
     * Initialization constructor.
     * @param  alert  SecretScanningAlert value for alert.
     * @param  location  SecretScanningLocation value for location.
     * @param  repository  Repository3 value for repository.
     * @param  sender  Sender value for sender.
     * @param  action  Action1Enum value for action.
     * @param  installation  Installation1 value for installation.
     * @param  organization  Organization2 value for organization.
     */
    public SecretScanningAlertLocationCreatedEvent(
            SecretScanningAlert alert,
            SecretScanningLocation location,
            Repository3 repository,
            Sender sender,
            Action1Enum action,
            Installation1 installation,
            Organization2 organization) {
        this.action = action;
        this.alert = alert;
        this.installation = installation;
        this.location = location;
        this.organization = organization;
        this.repository = repository;
        this.sender = sender;
    }

    /**
     * Getter for Action.
     * @return Returns the Action1Enum
     */
    @JsonGetter("action")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Action1Enum getAction() {
        return action;
    }

    /**
     * Setter for Action.
     * @param action Value for Action1Enum
     */
    @JsonSetter("action")
    public void setAction(Action1Enum action) {
        this.action = action;
    }

    /**
     * Getter for Alert.
     * @return Returns the SecretScanningAlert
     */
    @JsonGetter("alert")
    public SecretScanningAlert getAlert() {
        return alert;
    }

    /**
     * Setter for Alert.
     * @param alert Value for SecretScanningAlert
     */
    @JsonSetter("alert")
    public void setAlert(SecretScanningAlert alert) {
        this.alert = alert;
    }

    /**
     * Getter for Installation.
     * @return Returns the Installation1
     */
    @JsonGetter("installation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Installation1 getInstallation() {
        return installation;
    }

    /**
     * Setter for Installation.
     * @param installation Value for Installation1
     */
    @JsonSetter("installation")
    public void setInstallation(Installation1 installation) {
        this.installation = installation;
    }

    /**
     * Getter for Location.
     * @return Returns the SecretScanningLocation
     */
    @JsonGetter("location")
    public SecretScanningLocation getLocation() {
        return location;
    }

    /**
     * Setter for Location.
     * @param location Value for SecretScanningLocation
     */
    @JsonSetter("location")
    public void setLocation(SecretScanningLocation location) {
        this.location = location;
    }

    /**
     * Getter for Organization.
     * @return Returns the Organization2
     */
    @JsonGetter("organization")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Organization2 getOrganization() {
        return organization;
    }

    /**
     * Setter for Organization.
     * @param organization Value for Organization2
     */
    @JsonSetter("organization")
    public void setOrganization(Organization2 organization) {
        this.organization = organization;
    }

    /**
     * Getter for Repository.
     * @return Returns the Repository3
     */
    @JsonGetter("repository")
    public Repository3 getRepository() {
        return repository;
    }

    /**
     * Setter for Repository.
     * @param repository Value for Repository3
     */
    @JsonSetter("repository")
    public void setRepository(Repository3 repository) {
        this.repository = repository;
    }

    /**
     * Getter for Sender.
     * @return Returns the Sender
     */
    @JsonGetter("sender")
    public Sender getSender() {
        return sender;
    }

    /**
     * Setter for Sender.
     * @param sender Value for Sender
     */
    @JsonSetter("sender")
    public void setSender(Sender sender) {
        this.sender = sender;
    }

    /**
     * Converts this SecretScanningAlertLocationCreatedEvent into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SecretScanningAlertLocationCreatedEvent [" + "alert=" + alert + ", location="
                + location + ", repository=" + repository + ", sender=" + sender + ", action="
                + action + ", installation=" + installation + ", organization=" + organization
                + "]";
    }

    /**
     * Builds a new {@link SecretScanningAlertLocationCreatedEvent.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SecretScanningAlertLocationCreatedEvent.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(alert, location, repository, sender)
                .action(getAction())
                .installation(getInstallation())
                .organization(getOrganization());
        return builder;
    }

    /**
     * Class to build instances of {@link SecretScanningAlertLocationCreatedEvent}.
     */
    public static class Builder {
        private SecretScanningAlert alert;
        private SecretScanningLocation location;
        private Repository3 repository;
        private Sender sender;
        private Action1Enum action;
        private Installation1 installation;
        private Organization2 organization;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  alert  SecretScanningAlert value for alert.
         * @param  location  SecretScanningLocation value for location.
         * @param  repository  Repository3 value for repository.
         * @param  sender  Sender value for sender.
         */
        public Builder(SecretScanningAlert alert, SecretScanningLocation location,
                Repository3 repository, Sender sender) {
            this.alert = alert;
            this.location = location;
            this.repository = repository;
            this.sender = sender;
        }

        /**
         * Setter for alert.
         * @param  alert  SecretScanningAlert value for alert.
         * @return Builder
         */
        public Builder alert(SecretScanningAlert alert) {
            this.alert = alert;
            return this;
        }

        /**
         * Setter for location.
         * @param  location  SecretScanningLocation value for location.
         * @return Builder
         */
        public Builder location(SecretScanningLocation location) {
            this.location = location;
            return this;
        }

        /**
         * Setter for repository.
         * @param  repository  Repository3 value for repository.
         * @return Builder
         */
        public Builder repository(Repository3 repository) {
            this.repository = repository;
            return this;
        }

        /**
         * Setter for sender.
         * @param  sender  Sender value for sender.
         * @return Builder
         */
        public Builder sender(Sender sender) {
            this.sender = sender;
            return this;
        }

        /**
         * Setter for action.
         * @param  action  Action1Enum value for action.
         * @return Builder
         */
        public Builder action(Action1Enum action) {
            this.action = action;
            return this;
        }

        /**
         * Setter for installation.
         * @param  installation  Installation1 value for installation.
         * @return Builder
         */
        public Builder installation(Installation1 installation) {
            this.installation = installation;
            return this;
        }

        /**
         * Setter for organization.
         * @param  organization  Organization2 value for organization.
         * @return Builder
         */
        public Builder organization(Organization2 organization) {
            this.organization = organization;
            return this;
        }

        /**
         * Builds a new {@link SecretScanningAlertLocationCreatedEvent} object using the set fields.
         * @return {@link SecretScanningAlertLocationCreatedEvent}
         */
        public SecretScanningAlertLocationCreatedEvent build() {
            return new SecretScanningAlertLocationCreatedEvent(alert, location, repository, sender,
                    action, installation, organization);
        }
    }
}
