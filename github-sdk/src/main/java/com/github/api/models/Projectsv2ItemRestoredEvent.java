/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Projectsv2ItemRestoredEvent type.
 */
public class Projectsv2ItemRestoredEvent {
    private String action;
    private Changes20 changes;
    private Installation1 installation;
    private Organization2 organization;
    private ProjectsV2Item1 projectsV2Item;
    private Sender sender;

    /**
     * Default constructor.
     */
    public Projectsv2ItemRestoredEvent() {
        action = "restored";
    }

    /**
     * Initialization constructor.
     * @param  action  String value for action.
     * @param  changes  Changes20 value for changes.
     * @param  organization  Organization2 value for organization.
     * @param  projectsV2Item  ProjectsV2Item1 value for projectsV2Item.
     * @param  sender  Sender value for sender.
     * @param  installation  Installation1 value for installation.
     */
    public Projectsv2ItemRestoredEvent(
            String action,
            Changes20 changes,
            Organization2 organization,
            ProjectsV2Item1 projectsV2Item,
            Sender sender,
            Installation1 installation) {
        this.action = action;
        this.changes = changes;
        this.installation = installation;
        this.organization = organization;
        this.projectsV2Item = projectsV2Item;
        this.sender = sender;
    }

    /**
     * Getter for Action.
     * @return Returns the String
     */
    @JsonGetter("action")
    public String getAction() {
        return action;
    }

    /**
     * Setter for Action.
     * @param action Value for String
     */
    @JsonSetter("action")
    private void setAction(String action) {
        this.action = action;
    }

    /**
     * Getter for Changes.
     * @return Returns the Changes20
     */
    @JsonGetter("changes")
    public Changes20 getChanges() {
        return changes;
    }

    /**
     * Setter for Changes.
     * @param changes Value for Changes20
     */
    @JsonSetter("changes")
    public void setChanges(Changes20 changes) {
        this.changes = changes;
    }

    /**
     * Getter for Installation.
     * @return Returns the Installation1
     */
    @JsonGetter("installation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Installation1 getInstallation() {
        return installation;
    }

    /**
     * Setter for Installation.
     * @param installation Value for Installation1
     */
    @JsonSetter("installation")
    public void setInstallation(Installation1 installation) {
        this.installation = installation;
    }

    /**
     * Getter for Organization.
     * @return Returns the Organization2
     */
    @JsonGetter("organization")
    public Organization2 getOrganization() {
        return organization;
    }

    /**
     * Setter for Organization.
     * @param organization Value for Organization2
     */
    @JsonSetter("organization")
    public void setOrganization(Organization2 organization) {
        this.organization = organization;
    }

    /**
     * Getter for ProjectsV2Item.
     * @return Returns the ProjectsV2Item1
     */
    @JsonGetter("projects_v2_item")
    public ProjectsV2Item1 getProjectsV2Item() {
        return projectsV2Item;
    }

    /**
     * Setter for ProjectsV2Item.
     * @param projectsV2Item Value for ProjectsV2Item1
     */
    @JsonSetter("projects_v2_item")
    public void setProjectsV2Item(ProjectsV2Item1 projectsV2Item) {
        this.projectsV2Item = projectsV2Item;
    }

    /**
     * Getter for Sender.
     * @return Returns the Sender
     */
    @JsonGetter("sender")
    public Sender getSender() {
        return sender;
    }

    /**
     * Setter for Sender.
     * @param sender Value for Sender
     */
    @JsonSetter("sender")
    public void setSender(Sender sender) {
        this.sender = sender;
    }

    /**
     * Converts this Projectsv2ItemRestoredEvent into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Projectsv2ItemRestoredEvent [" + "action=" + action + ", changes=" + changes
                + ", organization=" + organization + ", projectsV2Item=" + projectsV2Item
                + ", sender=" + sender + ", installation=" + installation + "]";
    }

    /**
     * Builds a new {@link Projectsv2ItemRestoredEvent.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Projectsv2ItemRestoredEvent.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(action, changes, organization, projectsV2Item, sender)
                .installation(getInstallation());
        return builder;
    }

    /**
     * Class to build instances of {@link Projectsv2ItemRestoredEvent}.
     */
    public static class Builder {
        private String action = "restored";
        private Changes20 changes;
        private Organization2 organization;
        private ProjectsV2Item1 projectsV2Item;
        private Sender sender;
        private Installation1 installation;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  action  String value for action.
         * @param  changes  Changes20 value for changes.
         * @param  organization  Organization2 value for organization.
         * @param  projectsV2Item  ProjectsV2Item1 value for projectsV2Item.
         * @param  sender  Sender value for sender.
         */
        public Builder(String action, Changes20 changes, Organization2 organization,
                ProjectsV2Item1 projectsV2Item, Sender sender) {
            this.action = action;
            this.changes = changes;
            this.organization = organization;
            this.projectsV2Item = projectsV2Item;
            this.sender = sender;
        }

        /**
         * Setter for action.
         * @param  action  String value for action.
         * @return Builder
         */
        public Builder action(String action) {
            this.action = action;
            return this;
        }

        /**
         * Setter for changes.
         * @param  changes  Changes20 value for changes.
         * @return Builder
         */
        public Builder changes(Changes20 changes) {
            this.changes = changes;
            return this;
        }

        /**
         * Setter for organization.
         * @param  organization  Organization2 value for organization.
         * @return Builder
         */
        public Builder organization(Organization2 organization) {
            this.organization = organization;
            return this;
        }

        /**
         * Setter for projectsV2Item.
         * @param  projectsV2Item  ProjectsV2Item1 value for projectsV2Item.
         * @return Builder
         */
        public Builder projectsV2Item(ProjectsV2Item1 projectsV2Item) {
            this.projectsV2Item = projectsV2Item;
            return this;
        }

        /**
         * Setter for sender.
         * @param  sender  Sender value for sender.
         * @return Builder
         */
        public Builder sender(Sender sender) {
            this.sender = sender;
            return this;
        }

        /**
         * Setter for installation.
         * @param  installation  Installation1 value for installation.
         * @return Builder
         */
        public Builder installation(Installation1 installation) {
            this.installation = installation;
            return this;
        }

        /**
         * Builds a new {@link Projectsv2ItemRestoredEvent} object using the set fields.
         * @return {@link Projectsv2ItemRestoredEvent}
         */
        public Projectsv2ItemRestoredEvent build() {
            return new Projectsv2ItemRestoredEvent(action, changes, organization, projectsV2Item,
                    sender, installation);
        }
    }
}
