/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Links10 type.
 */
public class Links10 {
    private Html html;
    private Html pullRequest;

    /**
     * Default constructor.
     */
    public Links10() {
    }

    /**
     * Initialization constructor.
     * @param  html  Html value for html.
     * @param  pullRequest  Html value for pullRequest.
     */
    public Links10(
            Html html,
            Html pullRequest) {
        this.html = html;
        this.pullRequest = pullRequest;
    }

    /**
     * Getter for Html.
     * @return Returns the Html
     */
    @JsonGetter("html")
    public Html getHtml() {
        return html;
    }

    /**
     * Setter for Html.
     * @param html Value for Html
     */
    @JsonSetter("html")
    public void setHtml(Html html) {
        this.html = html;
    }

    /**
     * Getter for PullRequest.
     * @return Returns the Html
     */
    @JsonGetter("pull_request")
    public Html getPullRequest() {
        return pullRequest;
    }

    /**
     * Setter for PullRequest.
     * @param pullRequest Value for Html
     */
    @JsonSetter("pull_request")
    public void setPullRequest(Html pullRequest) {
        this.pullRequest = pullRequest;
    }

    /**
     * Converts this Links10 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Links10 [" + "html=" + html + ", pullRequest=" + pullRequest + "]";
    }

    /**
     * Builds a new {@link Links10.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Links10.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(html, pullRequest);
        return builder;
    }

    /**
     * Class to build instances of {@link Links10}.
     */
    public static class Builder {
        private Html html;
        private Html pullRequest;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  html  Html value for html.
         * @param  pullRequest  Html value for pullRequest.
         */
        public Builder(Html html, Html pullRequest) {
            this.html = html;
            this.pullRequest = pullRequest;
        }

        /**
         * Setter for html.
         * @param  html  Html value for html.
         * @return Builder
         */
        public Builder html(Html html) {
            this.html = html;
            return this;
        }

        /**
         * Setter for pullRequest.
         * @param  pullRequest  Html value for pullRequest.
         * @return Builder
         */
        public Builder pullRequest(Html pullRequest) {
            this.pullRequest = pullRequest;
            return this;
        }

        /**
         * Builds a new {@link Links10} object using the set fields.
         * @return {@link Links10}
         */
        public Links10 build() {
            return new Links10(html, pullRequest);
        }
    }
}
