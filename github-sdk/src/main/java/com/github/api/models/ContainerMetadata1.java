/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for ContainerMetadata1 type.
 */
public class ContainerMetadata1 {
    private OptionalNullable<Object> labels;
    private OptionalNullable<Object> manifest;
    private Tag1 tag;

    /**
     * Default constructor.
     */
    public ContainerMetadata1() {
    }

    /**
     * Initialization constructor.
     * @param  labels  Object value for labels.
     * @param  manifest  Object value for manifest.
     * @param  tag  Tag1 value for tag.
     */
    public ContainerMetadata1(
            Object labels,
            Object manifest,
            Tag1 tag) {
        this.labels = OptionalNullable.of(labels);
        this.manifest = OptionalNullable.of(manifest);
        this.tag = tag;
    }

    /**
     * Internal initialization constructor.
     */
    protected ContainerMetadata1(OptionalNullable<Object> labels, OptionalNullable<Object> manifest,
            Tag1 tag) {
        this.labels = labels;
        this.manifest = manifest;
        this.tag = tag;
    }

    /**
     * Internal Getter for Labels.
     * @return Returns the Internal Object
     */
    @JsonGetter("labels")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Object> internalGetLabels() {
        return this.labels;
    }

    /**
     * Getter for Labels.
     * @return Returns the Object
     */
    public Object getLabels() {
        return OptionalNullable.getFrom(labels);
    }

    /**
     * Setter for Labels.
     * @param labels Value for Object
     */
    @JsonSetter("labels")
    public void setLabels(Object labels) {
        this.labels = OptionalNullable.of(labels);
    }

    /**
     * UnSetter for Labels.
     */
    public void unsetLabels() {
        labels = null;
    }

    /**
     * Internal Getter for Manifest.
     * @return Returns the Internal Object
     */
    @JsonGetter("manifest")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Object> internalGetManifest() {
        return this.manifest;
    }

    /**
     * Getter for Manifest.
     * @return Returns the Object
     */
    public Object getManifest() {
        return OptionalNullable.getFrom(manifest);
    }

    /**
     * Setter for Manifest.
     * @param manifest Value for Object
     */
    @JsonSetter("manifest")
    public void setManifest(Object manifest) {
        this.manifest = OptionalNullable.of(manifest);
    }

    /**
     * UnSetter for Manifest.
     */
    public void unsetManifest() {
        manifest = null;
    }

    /**
     * Getter for Tag.
     * @return Returns the Tag1
     */
    @JsonGetter("tag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Tag1 getTag() {
        return tag;
    }

    /**
     * Setter for Tag.
     * @param tag Value for Tag1
     */
    @JsonSetter("tag")
    public void setTag(Tag1 tag) {
        this.tag = tag;
    }

    /**
     * Converts this ContainerMetadata1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ContainerMetadata1 [" + "labels=" + labels + ", manifest=" + manifest + ", tag="
                + tag + "]";
    }

    /**
     * Builds a new {@link ContainerMetadata1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ContainerMetadata1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .tag(getTag());
        builder.labels = internalGetLabels();
        builder.manifest = internalGetManifest();
        return builder;
    }

    /**
     * Class to build instances of {@link ContainerMetadata1}.
     */
    public static class Builder {
        private OptionalNullable<Object> labels;
        private OptionalNullable<Object> manifest;
        private Tag1 tag;



        /**
         * Setter for labels.
         * @param  labels  Object value for labels.
         * @return Builder
         */
        public Builder labels(Object labels) {
            this.labels = OptionalNullable.of(labels);
            return this;
        }

        /**
         * UnSetter for labels.
         * @return Builder
         */
        public Builder unsetLabels() {
            labels = null;
            return this;
        }

        /**
         * Setter for manifest.
         * @param  manifest  Object value for manifest.
         * @return Builder
         */
        public Builder manifest(Object manifest) {
            this.manifest = OptionalNullable.of(manifest);
            return this;
        }

        /**
         * UnSetter for manifest.
         * @return Builder
         */
        public Builder unsetManifest() {
            manifest = null;
            return this;
        }

        /**
         * Setter for tag.
         * @param  tag  Tag1 value for tag.
         * @return Builder
         */
        public Builder tag(Tag1 tag) {
            this.tag = tag;
            return this;
        }

        /**
         * Builds a new {@link ContainerMetadata1} object using the set fields.
         * @return {@link ContainerMetadata1}
         */
        public ContainerMetadata1 build() {
            return new ContainerMetadata1(labels, manifest, tag);
        }
    }
}
