/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.models.containers.ReposPagesRequest5Source;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for ReposPagesRequest5 type.
 */
public class ReposPagesRequest5 {
    private OptionalNullable<String> cname;
    private Boolean httpsEnforced;
    private Object buildType;
    private Source15 source;

    /**
     * Default constructor.
     */
    public ReposPagesRequest5() {
    }

    /**
     * Initialization constructor.
     * @param  cname  String value for cname.
     * @param  httpsEnforced  Boolean value for httpsEnforced.
     * @param  buildType  Object value for buildType.
     * @param  source  Source15 value for source.
     */
    public ReposPagesRequest5(
            String cname,
            Boolean httpsEnforced,
            Object buildType,
            Source15 source) {
        this.cname = OptionalNullable.of(cname);
        this.httpsEnforced = httpsEnforced;
        this.buildType = buildType;
        this.source = source;
    }

    /**
     * Internal initialization constructor.
     */
    protected ReposPagesRequest5(OptionalNullable<String> cname, Boolean httpsEnforced,
            Object buildType, Source15 source) {
        this.cname = cname;
        this.httpsEnforced = httpsEnforced;
        this.buildType = buildType;
        this.source = source;
    }

    /**
     * Internal Getter for Cname.
     * Specify a custom domain for the repository. Sending a `null` value will remove the custom
     * domain. For more about custom domains, see "[Using a custom domain with GitHub
     * Pages](https://docs.github.com/articles/using-a-custom-domain-with-github-pages/)."
     * @return Returns the Internal String
     */
    @JsonGetter("cname")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCname() {
        return this.cname;
    }

    /**
     * Getter for Cname.
     * Specify a custom domain for the repository. Sending a `null` value will remove the custom
     * domain. For more about custom domains, see "[Using a custom domain with GitHub
     * Pages](https://docs.github.com/articles/using-a-custom-domain-with-github-pages/)."
     * @return Returns the String
     */
    public String getCname() {
        return OptionalNullable.getFrom(cname);
    }

    /**
     * Setter for Cname.
     * Specify a custom domain for the repository. Sending a `null` value will remove the custom
     * domain. For more about custom domains, see "[Using a custom domain with GitHub
     * Pages](https://docs.github.com/articles/using-a-custom-domain-with-github-pages/)."
     * @param cname Value for String
     */
    @JsonSetter("cname")
    public void setCname(String cname) {
        this.cname = OptionalNullable.of(cname);
    }

    /**
     * UnSetter for Cname.
     * Specify a custom domain for the repository. Sending a `null` value will remove the custom
     * domain. For more about custom domains, see "[Using a custom domain with GitHub
     * Pages](https://docs.github.com/articles/using-a-custom-domain-with-github-pages/)."
     */
    public void unsetCname() {
        cname = null;
    }

    /**
     * Getter for HttpsEnforced.
     * Specify whether HTTPS should be enforced for the repository.
     * @return Returns the Boolean
     */
    @JsonGetter("https_enforced")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getHttpsEnforced() {
        return httpsEnforced;
    }

    /**
     * Setter for HttpsEnforced.
     * Specify whether HTTPS should be enforced for the repository.
     * @param httpsEnforced Value for Boolean
     */
    @JsonSetter("https_enforced")
    public void setHttpsEnforced(Boolean httpsEnforced) {
        this.httpsEnforced = httpsEnforced;
    }

    /**
     * Getter for BuildType.
     * @return Returns the Object
     */
    @JsonGetter("build_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getBuildType() {
        return buildType;
    }

    /**
     * Setter for BuildType.
     * @param buildType Value for Object
     */
    @JsonSetter("build_type")
    public void setBuildType(Object buildType) {
        this.buildType = buildType;
    }

    /**
     * Getter for Source.
     * @return Returns the Source15
     */
    @JsonGetter("source")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Source15 getSource() {
        return source;
    }

    /**
     * Setter for Source.
     * @param source Value for Source15
     */
    @JsonSetter("source")
    public void setSource(Source15 source) {
        this.source = source;
    }

    /**
     * Converts this ReposPagesRequest5 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposPagesRequest5 [" + "cname=" + cname + ", httpsEnforced=" + httpsEnforced
                + ", buildType=" + buildType + ", source=" + source + "]";
    }

    /**
     * Builds a new {@link ReposPagesRequest5.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposPagesRequest5.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .httpsEnforced(getHttpsEnforced())
                .buildType(getBuildType())
                .source(getSource());
        builder.cname = internalGetCname();
        return builder;
    }

    /**
     * Class to build instances of {@link ReposPagesRequest5}.
     */
    public static class Builder {
        private OptionalNullable<String> cname;
        private Boolean httpsEnforced;
        private Object buildType;
        private Source15 source;



        /**
         * Setter for cname.
         * @param  cname  String value for cname.
         * @return Builder
         */
        public Builder cname(String cname) {
            this.cname = OptionalNullable.of(cname);
            return this;
        }

        /**
         * UnSetter for cname.
         * @return Builder
         */
        public Builder unsetCname() {
            cname = null;
            return this;
        }

        /**
         * Setter for httpsEnforced.
         * @param  httpsEnforced  Boolean value for httpsEnforced.
         * @return Builder
         */
        public Builder httpsEnforced(Boolean httpsEnforced) {
            this.httpsEnforced = httpsEnforced;
            return this;
        }

        /**
         * Setter for buildType.
         * @param  buildType  Object value for buildType.
         * @return Builder
         */
        public Builder buildType(Object buildType) {
            this.buildType = buildType;
            return this;
        }

        /**
         * Setter for source.
         * @param  source  Source15 value for source.
         * @return Builder
         */
        public Builder source(Source15 source) {
            this.source = source;
            return this;
        }

        /**
         * Builds a new {@link ReposPagesRequest5} object using the set fields.
         * @return {@link ReposPagesRequest5}
         */
        public ReposPagesRequest5 build() {
            return new ReposPagesRequest5(cname, httpsEnforced, buildType, source);
        }
    }
}
