/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for SelectedActions type.
 */
public class SelectedActions {
    private Boolean githubOwnedAllowed;
    private Boolean verifiedAllowed;
    private List<String> patternsAllowed;

    /**
     * Default constructor.
     */
    public SelectedActions() {
    }

    /**
     * Initialization constructor.
     * @param  githubOwnedAllowed  Boolean value for githubOwnedAllowed.
     * @param  verifiedAllowed  Boolean value for verifiedAllowed.
     * @param  patternsAllowed  List of String value for patternsAllowed.
     */
    public SelectedActions(
            Boolean githubOwnedAllowed,
            Boolean verifiedAllowed,
            List<String> patternsAllowed) {
        this.githubOwnedAllowed = githubOwnedAllowed;
        this.verifiedAllowed = verifiedAllowed;
        this.patternsAllowed = patternsAllowed;
    }

    /**
     * Getter for GithubOwnedAllowed.
     * Whether GitHub-owned actions are allowed. For example, this includes the actions in the
     * `actions` organization.
     * @return Returns the Boolean
     */
    @JsonGetter("github_owned_allowed")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getGithubOwnedAllowed() {
        return githubOwnedAllowed;
    }

    /**
     * Setter for GithubOwnedAllowed.
     * Whether GitHub-owned actions are allowed. For example, this includes the actions in the
     * `actions` organization.
     * @param githubOwnedAllowed Value for Boolean
     */
    @JsonSetter("github_owned_allowed")
    public void setGithubOwnedAllowed(Boolean githubOwnedAllowed) {
        this.githubOwnedAllowed = githubOwnedAllowed;
    }

    /**
     * Getter for VerifiedAllowed.
     * Whether actions from GitHub Marketplace verified creators are allowed. Set to `true` to allow
     * all actions by GitHub Marketplace verified creators.
     * @return Returns the Boolean
     */
    @JsonGetter("verified_allowed")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getVerifiedAllowed() {
        return verifiedAllowed;
    }

    /**
     * Setter for VerifiedAllowed.
     * Whether actions from GitHub Marketplace verified creators are allowed. Set to `true` to allow
     * all actions by GitHub Marketplace verified creators.
     * @param verifiedAllowed Value for Boolean
     */
    @JsonSetter("verified_allowed")
    public void setVerifiedAllowed(Boolean verifiedAllowed) {
        this.verifiedAllowed = verifiedAllowed;
    }

    /**
     * Getter for PatternsAllowed.
     * Specifies a list of string-matching patterns to allow specific action(s) and reusable
     * workflow(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`,
     * `monalisa/octocat@v2`, `monalisa/*`."
     * @return Returns the List of String
     */
    @JsonGetter("patterns_allowed")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getPatternsAllowed() {
        return patternsAllowed;
    }

    /**
     * Setter for PatternsAllowed.
     * Specifies a list of string-matching patterns to allow specific action(s) and reusable
     * workflow(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`,
     * `monalisa/octocat@v2`, `monalisa/*`."
     * @param patternsAllowed Value for List of String
     */
    @JsonSetter("patterns_allowed")
    public void setPatternsAllowed(List<String> patternsAllowed) {
        this.patternsAllowed = patternsAllowed;
    }

    /**
     * Converts this SelectedActions into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SelectedActions [" + "githubOwnedAllowed=" + githubOwnedAllowed
                + ", verifiedAllowed=" + verifiedAllowed + ", patternsAllowed=" + patternsAllowed
                + "]";
    }

    /**
     * Builds a new {@link SelectedActions.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SelectedActions.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .githubOwnedAllowed(getGithubOwnedAllowed())
                .verifiedAllowed(getVerifiedAllowed())
                .patternsAllowed(getPatternsAllowed());
        return builder;
    }

    /**
     * Class to build instances of {@link SelectedActions}.
     */
    public static class Builder {
        private Boolean githubOwnedAllowed;
        private Boolean verifiedAllowed;
        private List<String> patternsAllowed;



        /**
         * Setter for githubOwnedAllowed.
         * @param  githubOwnedAllowed  Boolean value for githubOwnedAllowed.
         * @return Builder
         */
        public Builder githubOwnedAllowed(Boolean githubOwnedAllowed) {
            this.githubOwnedAllowed = githubOwnedAllowed;
            return this;
        }

        /**
         * Setter for verifiedAllowed.
         * @param  verifiedAllowed  Boolean value for verifiedAllowed.
         * @return Builder
         */
        public Builder verifiedAllowed(Boolean verifiedAllowed) {
            this.verifiedAllowed = verifiedAllowed;
            return this;
        }

        /**
         * Setter for patternsAllowed.
         * @param  patternsAllowed  List of String value for patternsAllowed.
         * @return Builder
         */
        public Builder patternsAllowed(List<String> patternsAllowed) {
            this.patternsAllowed = patternsAllowed;
            return this;
        }

        /**
         * Builds a new {@link SelectedActions} object using the set fields.
         * @return {@link SelectedActions}
         */
        public SelectedActions build() {
            return new SelectedActions(githubOwnedAllowed, verifiedAllowed, patternsAllowed);
        }
    }
}
