/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for OrgsTeamsRequest1 type.
 */
public class OrgsTeamsRequest1 {
    private String name;
    private String description;
    private Privacy147Enum privacy;
    private Permission3Enum permission;
    private OptionalNullable<Integer> parentTeamId;

    /**
     * Default constructor.
     */
    public OrgsTeamsRequest1() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  description  String value for description.
     * @param  privacy  Privacy147Enum value for privacy.
     * @param  permission  Permission3Enum value for permission.
     * @param  parentTeamId  Integer value for parentTeamId.
     */
    public OrgsTeamsRequest1(
            String name,
            String description,
            Privacy147Enum privacy,
            Permission3Enum permission,
            Integer parentTeamId) {
        this.name = name;
        this.description = description;
        this.privacy = privacy;
        this.permission = permission;
        this.parentTeamId = OptionalNullable.of(parentTeamId);
    }

    /**
     * Internal initialization constructor.
     */
    protected OrgsTeamsRequest1(String name, String description, Privacy147Enum privacy,
            Permission3Enum permission, OptionalNullable<Integer> parentTeamId) {
        this.name = name;
        this.description = description;
        this.privacy = privacy;
        this.permission = permission;
        this.parentTeamId = parentTeamId;
    }

    /**
     * Getter for Name.
     * The name of the team.
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the team.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Description.
     * The description of the team.
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * The description of the team.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Privacy.
     * @return Returns the Privacy147Enum
     */
    @JsonGetter("privacy")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Privacy147Enum getPrivacy() {
        return privacy;
    }

    /**
     * Setter for Privacy.
     * @param privacy Value for Privacy147Enum
     */
    @JsonSetter("privacy")
    public void setPrivacy(Privacy147Enum privacy) {
        this.privacy = privacy;
    }

    /**
     * Getter for Permission.
     * @return Returns the Permission3Enum
     */
    @JsonGetter("permission")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Permission3Enum getPermission() {
        return permission;
    }

    /**
     * Setter for Permission.
     * @param permission Value for Permission3Enum
     */
    @JsonSetter("permission")
    public void setPermission(Permission3Enum permission) {
        this.permission = permission;
    }

    /**
     * Internal Getter for ParentTeamId.
     * The ID of a team to set as the parent team.
     * @return Returns the Internal Integer
     */
    @JsonGetter("parent_team_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetParentTeamId() {
        return this.parentTeamId;
    }

    /**
     * Getter for ParentTeamId.
     * The ID of a team to set as the parent team.
     * @return Returns the Integer
     */
    public Integer getParentTeamId() {
        return OptionalNullable.getFrom(parentTeamId);
    }

    /**
     * Setter for ParentTeamId.
     * The ID of a team to set as the parent team.
     * @param parentTeamId Value for Integer
     */
    @JsonSetter("parent_team_id")
    public void setParentTeamId(Integer parentTeamId) {
        this.parentTeamId = OptionalNullable.of(parentTeamId);
    }

    /**
     * UnSetter for ParentTeamId.
     * The ID of a team to set as the parent team.
     */
    public void unsetParentTeamId() {
        parentTeamId = null;
    }

    /**
     * Converts this OrgsTeamsRequest1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "OrgsTeamsRequest1 [" + "name=" + name + ", description=" + description
                + ", privacy=" + privacy + ", permission=" + permission + ", parentTeamId="
                + parentTeamId + "]";
    }

    /**
     * Builds a new {@link OrgsTeamsRequest1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link OrgsTeamsRequest1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .name(getName())
                .description(getDescription())
                .privacy(getPrivacy())
                .permission(getPermission());
        builder.parentTeamId = internalGetParentTeamId();
        return builder;
    }

    /**
     * Class to build instances of {@link OrgsTeamsRequest1}.
     */
    public static class Builder {
        private String name;
        private String description;
        private Privacy147Enum privacy;
        private Permission3Enum permission;
        private OptionalNullable<Integer> parentTeamId;



        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for privacy.
         * @param  privacy  Privacy147Enum value for privacy.
         * @return Builder
         */
        public Builder privacy(Privacy147Enum privacy) {
            this.privacy = privacy;
            return this;
        }

        /**
         * Setter for permission.
         * @param  permission  Permission3Enum value for permission.
         * @return Builder
         */
        public Builder permission(Permission3Enum permission) {
            this.permission = permission;
            return this;
        }

        /**
         * Setter for parentTeamId.
         * @param  parentTeamId  Integer value for parentTeamId.
         * @return Builder
         */
        public Builder parentTeamId(Integer parentTeamId) {
            this.parentTeamId = OptionalNullable.of(parentTeamId);
            return this;
        }

        /**
         * UnSetter for parentTeamId.
         * @return Builder
         */
        public Builder unsetParentTeamId() {
            parentTeamId = null;
            return this;
        }

        /**
         * Builds a new {@link OrgsTeamsRequest1} object using the set fields.
         * @return {@link OrgsTeamsRequest1}
         */
        public OrgsTeamsRequest1 build() {
            return new OrgsTeamsRequest1(name, description, privacy, permission, parentTeamId);
        }
    }
}
