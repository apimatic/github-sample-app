/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;

/**
 * This is a model class for OrgsPackagesPackageNameVersionsPackageVersionIdResponse type.
 */
public class OrgsPackagesPackageNameVersionsPackageVersionIdResponse {
    private int id;
    private String name;
    private String url;
    private String packageHtmlUrl;
    private String htmlUrl;
    private String license;
    private String description;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private LocalDateTime deletedAt;
    private PackageVersionMetadata metadata;

    /**
     * Default constructor.
     */
    public OrgsPackagesPackageNameVersionsPackageVersionIdResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  int value for id.
     * @param  name  String value for name.
     * @param  url  String value for url.
     * @param  packageHtmlUrl  String value for packageHtmlUrl.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  htmlUrl  String value for htmlUrl.
     * @param  license  String value for license.
     * @param  description  String value for description.
     * @param  deletedAt  LocalDateTime value for deletedAt.
     * @param  metadata  PackageVersionMetadata value for metadata.
     */
    public OrgsPackagesPackageNameVersionsPackageVersionIdResponse(
            int id,
            String name,
            String url,
            String packageHtmlUrl,
            LocalDateTime createdAt,
            LocalDateTime updatedAt,
            String htmlUrl,
            String license,
            String description,
            LocalDateTime deletedAt,
            PackageVersionMetadata metadata) {
        this.id = id;
        this.name = name;
        this.url = url;
        this.packageHtmlUrl = packageHtmlUrl;
        this.htmlUrl = htmlUrl;
        this.license = license;
        this.description = description;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.deletedAt = deletedAt;
        this.metadata = metadata;
    }

    /**
     * Getter for Id.
     * Unique identifier of the package version.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Unique identifier of the package version.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for Name.
     * The name of the package version.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the package version.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for PackageHtmlUrl.
     * @return Returns the String
     */
    @JsonGetter("package_html_url")
    public String getPackageHtmlUrl() {
        return packageHtmlUrl;
    }

    /**
     * Setter for PackageHtmlUrl.
     * @param packageHtmlUrl Value for String
     */
    @JsonSetter("package_html_url")
    public void setPackageHtmlUrl(String packageHtmlUrl) {
        this.packageHtmlUrl = packageHtmlUrl;
    }

    /**
     * Getter for HtmlUrl.
     * @return Returns the String
     */
    @JsonGetter("html_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getHtmlUrl() {
        return htmlUrl;
    }

    /**
     * Setter for HtmlUrl.
     * @param htmlUrl Value for String
     */
    @JsonSetter("html_url")
    public void setHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
    }

    /**
     * Getter for License.
     * @return Returns the String
     */
    @JsonGetter("license")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLicense() {
        return license;
    }

    /**
     * Setter for License.
     * @param license Value for String
     */
    @JsonSetter("license")
    public void setLicense(String license) {
        this.license = license;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for DeletedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("deleted_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDeletedAt() {
        return deletedAt;
    }

    /**
     * Setter for DeletedAt.
     * @param deletedAt Value for LocalDateTime
     */
    @JsonSetter("deleted_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDeletedAt(LocalDateTime deletedAt) {
        this.deletedAt = deletedAt;
    }

    /**
     * Getter for Metadata.
     * @return Returns the PackageVersionMetadata
     */
    @JsonGetter("metadata")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PackageVersionMetadata getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * @param metadata Value for PackageVersionMetadata
     */
    @JsonSetter("metadata")
    public void setMetadata(PackageVersionMetadata metadata) {
        this.metadata = metadata;
    }

    /**
     * Converts this OrgsPackagesPackageNameVersionsPackageVersionIdResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "OrgsPackagesPackageNameVersionsPackageVersionIdResponse [" + "id=" + id + ", name="
                + name + ", url=" + url + ", packageHtmlUrl=" + packageHtmlUrl + ", createdAt="
                + createdAt + ", updatedAt=" + updatedAt + ", htmlUrl=" + htmlUrl + ", license="
                + license + ", description=" + description + ", deletedAt=" + deletedAt
                + ", metadata=" + metadata + "]";
    }

    /**
     * Builds a new {@link OrgsPackagesPackageNameVersionsPackageVersionIdResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link OrgsPackagesPackageNameVersionsPackageVersionIdResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, name, url, packageHtmlUrl, createdAt, updatedAt)
                .htmlUrl(getHtmlUrl())
                .license(getLicense())
                .description(getDescription())
                .deletedAt(getDeletedAt())
                .metadata(getMetadata());
        return builder;
    }

    /**
     * Class to build instances of {@link OrgsPackagesPackageNameVersionsPackageVersionIdResponse}.
     */
    public static class Builder {
        private int id;
        private String name;
        private String url;
        private String packageHtmlUrl;
        private LocalDateTime createdAt;
        private LocalDateTime updatedAt;
        private String htmlUrl;
        private String license;
        private String description;
        private LocalDateTime deletedAt;
        private PackageVersionMetadata metadata;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  int value for id.
         * @param  name  String value for name.
         * @param  url  String value for url.
         * @param  packageHtmlUrl  String value for packageHtmlUrl.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         */
        public Builder(int id, String name, String url, String packageHtmlUrl,
                LocalDateTime createdAt, LocalDateTime updatedAt) {
            this.id = id;
            this.name = name;
            this.url = url;
            this.packageHtmlUrl = packageHtmlUrl;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for packageHtmlUrl.
         * @param  packageHtmlUrl  String value for packageHtmlUrl.
         * @return Builder
         */
        public Builder packageHtmlUrl(String packageHtmlUrl) {
            this.packageHtmlUrl = packageHtmlUrl;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for htmlUrl.
         * @param  htmlUrl  String value for htmlUrl.
         * @return Builder
         */
        public Builder htmlUrl(String htmlUrl) {
            this.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * Setter for license.
         * @param  license  String value for license.
         * @return Builder
         */
        public Builder license(String license) {
            this.license = license;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for deletedAt.
         * @param  deletedAt  LocalDateTime value for deletedAt.
         * @return Builder
         */
        public Builder deletedAt(LocalDateTime deletedAt) {
            this.deletedAt = deletedAt;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  PackageVersionMetadata value for metadata.
         * @return Builder
         */
        public Builder metadata(PackageVersionMetadata metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Builds a new {@link OrgsPackagesPackageNameVersionsPackageVersionIdResponse} object using
         * the set fields.
         * @return {@link OrgsPackagesPackageNameVersionsPackageVersionIdResponse}
         */
        public OrgsPackagesPackageNameVersionsPackageVersionIdResponse build() {
            return new OrgsPackagesPackageNameVersionsPackageVersionIdResponse(id, name, url,
                    packageHtmlUrl, createdAt, updatedAt, htmlUrl, license, description, deletedAt,
                    metadata);
        }
    }
}
