/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for RerunInfo type.
 */
public class RerunInfo {
    private String planId;
    private List<String> jobIds;

    /**
     * Default constructor.
     */
    public RerunInfo() {
    }

    /**
     * Initialization constructor.
     * @param  planId  String value for planId.
     * @param  jobIds  List of String value for jobIds.
     */
    public RerunInfo(
            String planId,
            List<String> jobIds) {
        this.planId = planId;
        this.jobIds = jobIds;
    }

    /**
     * Getter for PlanId.
     * @return Returns the String
     */
    @JsonGetter("plan_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPlanId() {
        return planId;
    }

    /**
     * Setter for PlanId.
     * @param planId Value for String
     */
    @JsonSetter("plan_id")
    public void setPlanId(String planId) {
        this.planId = planId;
    }

    /**
     * Getter for JobIds.
     * @return Returns the List of String
     */
    @JsonGetter("job_ids")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getJobIds() {
        return jobIds;
    }

    /**
     * Setter for JobIds.
     * @param jobIds Value for List of String
     */
    @JsonSetter("job_ids")
    public void setJobIds(List<String> jobIds) {
        this.jobIds = jobIds;
    }

    /**
     * Converts this RerunInfo into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "RerunInfo [" + "planId=" + planId + ", jobIds=" + jobIds + "]";
    }

    /**
     * Builds a new {@link RerunInfo.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link RerunInfo.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .planId(getPlanId())
                .jobIds(getJobIds());
        return builder;
    }

    /**
     * Class to build instances of {@link RerunInfo}.
     */
    public static class Builder {
        private String planId;
        private List<String> jobIds;



        /**
         * Setter for planId.
         * @param  planId  String value for planId.
         * @return Builder
         */
        public Builder planId(String planId) {
            this.planId = planId;
            return this;
        }

        /**
         * Setter for jobIds.
         * @param  jobIds  List of String value for jobIds.
         * @return Builder
         */
        public Builder jobIds(List<String> jobIds) {
            this.jobIds = jobIds;
            return this;
        }

        /**
         * Builds a new {@link RerunInfo} object using the set fields.
         * @return {@link RerunInfo}
         */
        public RerunInfo build() {
            return new RerunInfo(planId, jobIds);
        }
    }
}
