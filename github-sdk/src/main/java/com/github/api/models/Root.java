/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Root type.
 */
public class Root {
    private String currentUserUrl;
    private String currentUserAuthorizationsHtmlUrl;
    private String authorizationsUrl;
    private String codeSearchUrl;
    private String commitSearchUrl;
    private String emailsUrl;
    private String emojisUrl;
    private String eventsUrl;
    private String feedsUrl;
    private String followersUrl;
    private String followingUrl;
    private String gistsUrl;
    private String hubUrl;
    private String issueSearchUrl;
    private String issuesUrl;
    private String keysUrl;
    private String labelSearchUrl;
    private String notificationsUrl;
    private String organizationUrl;
    private String organizationRepositoriesUrl;
    private String organizationTeamsUrl;
    private String publicGistsUrl;
    private String rateLimitUrl;
    private String repositoryUrl;
    private String repositorySearchUrl;
    private String currentUserRepositoriesUrl;
    private String starredUrl;
    private String starredGistsUrl;
    private String topicSearchUrl;
    private String userUrl;
    private String userOrganizationsUrl;
    private String userRepositoriesUrl;
    private String userSearchUrl;

    /**
     * Default constructor.
     */
    public Root() {
    }

    /**
     * Initialization constructor.
     * @param  currentUserUrl  String value for currentUserUrl.
     * @param  currentUserAuthorizationsHtmlUrl  String value for currentUserAuthorizationsHtmlUrl.
     * @param  authorizationsUrl  String value for authorizationsUrl.
     * @param  codeSearchUrl  String value for codeSearchUrl.
     * @param  commitSearchUrl  String value for commitSearchUrl.
     * @param  emailsUrl  String value for emailsUrl.
     * @param  emojisUrl  String value for emojisUrl.
     * @param  eventsUrl  String value for eventsUrl.
     * @param  feedsUrl  String value for feedsUrl.
     * @param  followersUrl  String value for followersUrl.
     * @param  followingUrl  String value for followingUrl.
     * @param  gistsUrl  String value for gistsUrl.
     * @param  hubUrl  String value for hubUrl.
     * @param  issueSearchUrl  String value for issueSearchUrl.
     * @param  issuesUrl  String value for issuesUrl.
     * @param  keysUrl  String value for keysUrl.
     * @param  labelSearchUrl  String value for labelSearchUrl.
     * @param  notificationsUrl  String value for notificationsUrl.
     * @param  organizationUrl  String value for organizationUrl.
     * @param  organizationRepositoriesUrl  String value for organizationRepositoriesUrl.
     * @param  organizationTeamsUrl  String value for organizationTeamsUrl.
     * @param  publicGistsUrl  String value for publicGistsUrl.
     * @param  rateLimitUrl  String value for rateLimitUrl.
     * @param  repositoryUrl  String value for repositoryUrl.
     * @param  repositorySearchUrl  String value for repositorySearchUrl.
     * @param  currentUserRepositoriesUrl  String value for currentUserRepositoriesUrl.
     * @param  starredUrl  String value for starredUrl.
     * @param  starredGistsUrl  String value for starredGistsUrl.
     * @param  userUrl  String value for userUrl.
     * @param  userOrganizationsUrl  String value for userOrganizationsUrl.
     * @param  userRepositoriesUrl  String value for userRepositoriesUrl.
     * @param  userSearchUrl  String value for userSearchUrl.
     * @param  topicSearchUrl  String value for topicSearchUrl.
     */
    public Root(
            String currentUserUrl,
            String currentUserAuthorizationsHtmlUrl,
            String authorizationsUrl,
            String codeSearchUrl,
            String commitSearchUrl,
            String emailsUrl,
            String emojisUrl,
            String eventsUrl,
            String feedsUrl,
            String followersUrl,
            String followingUrl,
            String gistsUrl,
            String hubUrl,
            String issueSearchUrl,
            String issuesUrl,
            String keysUrl,
            String labelSearchUrl,
            String notificationsUrl,
            String organizationUrl,
            String organizationRepositoriesUrl,
            String organizationTeamsUrl,
            String publicGistsUrl,
            String rateLimitUrl,
            String repositoryUrl,
            String repositorySearchUrl,
            String currentUserRepositoriesUrl,
            String starredUrl,
            String starredGistsUrl,
            String userUrl,
            String userOrganizationsUrl,
            String userRepositoriesUrl,
            String userSearchUrl,
            String topicSearchUrl) {
        this.currentUserUrl = currentUserUrl;
        this.currentUserAuthorizationsHtmlUrl = currentUserAuthorizationsHtmlUrl;
        this.authorizationsUrl = authorizationsUrl;
        this.codeSearchUrl = codeSearchUrl;
        this.commitSearchUrl = commitSearchUrl;
        this.emailsUrl = emailsUrl;
        this.emojisUrl = emojisUrl;
        this.eventsUrl = eventsUrl;
        this.feedsUrl = feedsUrl;
        this.followersUrl = followersUrl;
        this.followingUrl = followingUrl;
        this.gistsUrl = gistsUrl;
        this.hubUrl = hubUrl;
        this.issueSearchUrl = issueSearchUrl;
        this.issuesUrl = issuesUrl;
        this.keysUrl = keysUrl;
        this.labelSearchUrl = labelSearchUrl;
        this.notificationsUrl = notificationsUrl;
        this.organizationUrl = organizationUrl;
        this.organizationRepositoriesUrl = organizationRepositoriesUrl;
        this.organizationTeamsUrl = organizationTeamsUrl;
        this.publicGistsUrl = publicGistsUrl;
        this.rateLimitUrl = rateLimitUrl;
        this.repositoryUrl = repositoryUrl;
        this.repositorySearchUrl = repositorySearchUrl;
        this.currentUserRepositoriesUrl = currentUserRepositoriesUrl;
        this.starredUrl = starredUrl;
        this.starredGistsUrl = starredGistsUrl;
        this.topicSearchUrl = topicSearchUrl;
        this.userUrl = userUrl;
        this.userOrganizationsUrl = userOrganizationsUrl;
        this.userRepositoriesUrl = userRepositoriesUrl;
        this.userSearchUrl = userSearchUrl;
    }

    /**
     * Getter for CurrentUserUrl.
     * @return Returns the String
     */
    @JsonGetter("current_user_url")
    public String getCurrentUserUrl() {
        return currentUserUrl;
    }

    /**
     * Setter for CurrentUserUrl.
     * @param currentUserUrl Value for String
     */
    @JsonSetter("current_user_url")
    public void setCurrentUserUrl(String currentUserUrl) {
        this.currentUserUrl = currentUserUrl;
    }

    /**
     * Getter for CurrentUserAuthorizationsHtmlUrl.
     * @return Returns the String
     */
    @JsonGetter("current_user_authorizations_html_url")
    public String getCurrentUserAuthorizationsHtmlUrl() {
        return currentUserAuthorizationsHtmlUrl;
    }

    /**
     * Setter for CurrentUserAuthorizationsHtmlUrl.
     * @param currentUserAuthorizationsHtmlUrl Value for String
     */
    @JsonSetter("current_user_authorizations_html_url")
    public void setCurrentUserAuthorizationsHtmlUrl(String currentUserAuthorizationsHtmlUrl) {
        this.currentUserAuthorizationsHtmlUrl = currentUserAuthorizationsHtmlUrl;
    }

    /**
     * Getter for AuthorizationsUrl.
     * @return Returns the String
     */
    @JsonGetter("authorizations_url")
    public String getAuthorizationsUrl() {
        return authorizationsUrl;
    }

    /**
     * Setter for AuthorizationsUrl.
     * @param authorizationsUrl Value for String
     */
    @JsonSetter("authorizations_url")
    public void setAuthorizationsUrl(String authorizationsUrl) {
        this.authorizationsUrl = authorizationsUrl;
    }

    /**
     * Getter for CodeSearchUrl.
     * @return Returns the String
     */
    @JsonGetter("code_search_url")
    public String getCodeSearchUrl() {
        return codeSearchUrl;
    }

    /**
     * Setter for CodeSearchUrl.
     * @param codeSearchUrl Value for String
     */
    @JsonSetter("code_search_url")
    public void setCodeSearchUrl(String codeSearchUrl) {
        this.codeSearchUrl = codeSearchUrl;
    }

    /**
     * Getter for CommitSearchUrl.
     * @return Returns the String
     */
    @JsonGetter("commit_search_url")
    public String getCommitSearchUrl() {
        return commitSearchUrl;
    }

    /**
     * Setter for CommitSearchUrl.
     * @param commitSearchUrl Value for String
     */
    @JsonSetter("commit_search_url")
    public void setCommitSearchUrl(String commitSearchUrl) {
        this.commitSearchUrl = commitSearchUrl;
    }

    /**
     * Getter for EmailsUrl.
     * @return Returns the String
     */
    @JsonGetter("emails_url")
    public String getEmailsUrl() {
        return emailsUrl;
    }

    /**
     * Setter for EmailsUrl.
     * @param emailsUrl Value for String
     */
    @JsonSetter("emails_url")
    public void setEmailsUrl(String emailsUrl) {
        this.emailsUrl = emailsUrl;
    }

    /**
     * Getter for EmojisUrl.
     * @return Returns the String
     */
    @JsonGetter("emojis_url")
    public String getEmojisUrl() {
        return emojisUrl;
    }

    /**
     * Setter for EmojisUrl.
     * @param emojisUrl Value for String
     */
    @JsonSetter("emojis_url")
    public void setEmojisUrl(String emojisUrl) {
        this.emojisUrl = emojisUrl;
    }

    /**
     * Getter for EventsUrl.
     * @return Returns the String
     */
    @JsonGetter("events_url")
    public String getEventsUrl() {
        return eventsUrl;
    }

    /**
     * Setter for EventsUrl.
     * @param eventsUrl Value for String
     */
    @JsonSetter("events_url")
    public void setEventsUrl(String eventsUrl) {
        this.eventsUrl = eventsUrl;
    }

    /**
     * Getter for FeedsUrl.
     * @return Returns the String
     */
    @JsonGetter("feeds_url")
    public String getFeedsUrl() {
        return feedsUrl;
    }

    /**
     * Setter for FeedsUrl.
     * @param feedsUrl Value for String
     */
    @JsonSetter("feeds_url")
    public void setFeedsUrl(String feedsUrl) {
        this.feedsUrl = feedsUrl;
    }

    /**
     * Getter for FollowersUrl.
     * @return Returns the String
     */
    @JsonGetter("followers_url")
    public String getFollowersUrl() {
        return followersUrl;
    }

    /**
     * Setter for FollowersUrl.
     * @param followersUrl Value for String
     */
    @JsonSetter("followers_url")
    public void setFollowersUrl(String followersUrl) {
        this.followersUrl = followersUrl;
    }

    /**
     * Getter for FollowingUrl.
     * @return Returns the String
     */
    @JsonGetter("following_url")
    public String getFollowingUrl() {
        return followingUrl;
    }

    /**
     * Setter for FollowingUrl.
     * @param followingUrl Value for String
     */
    @JsonSetter("following_url")
    public void setFollowingUrl(String followingUrl) {
        this.followingUrl = followingUrl;
    }

    /**
     * Getter for GistsUrl.
     * @return Returns the String
     */
    @JsonGetter("gists_url")
    public String getGistsUrl() {
        return gistsUrl;
    }

    /**
     * Setter for GistsUrl.
     * @param gistsUrl Value for String
     */
    @JsonSetter("gists_url")
    public void setGistsUrl(String gistsUrl) {
        this.gistsUrl = gistsUrl;
    }

    /**
     * Getter for HubUrl.
     * @return Returns the String
     */
    @JsonGetter("hub_url")
    public String getHubUrl() {
        return hubUrl;
    }

    /**
     * Setter for HubUrl.
     * @param hubUrl Value for String
     */
    @JsonSetter("hub_url")
    public void setHubUrl(String hubUrl) {
        this.hubUrl = hubUrl;
    }

    /**
     * Getter for IssueSearchUrl.
     * @return Returns the String
     */
    @JsonGetter("issue_search_url")
    public String getIssueSearchUrl() {
        return issueSearchUrl;
    }

    /**
     * Setter for IssueSearchUrl.
     * @param issueSearchUrl Value for String
     */
    @JsonSetter("issue_search_url")
    public void setIssueSearchUrl(String issueSearchUrl) {
        this.issueSearchUrl = issueSearchUrl;
    }

    /**
     * Getter for IssuesUrl.
     * @return Returns the String
     */
    @JsonGetter("issues_url")
    public String getIssuesUrl() {
        return issuesUrl;
    }

    /**
     * Setter for IssuesUrl.
     * @param issuesUrl Value for String
     */
    @JsonSetter("issues_url")
    public void setIssuesUrl(String issuesUrl) {
        this.issuesUrl = issuesUrl;
    }

    /**
     * Getter for KeysUrl.
     * @return Returns the String
     */
    @JsonGetter("keys_url")
    public String getKeysUrl() {
        return keysUrl;
    }

    /**
     * Setter for KeysUrl.
     * @param keysUrl Value for String
     */
    @JsonSetter("keys_url")
    public void setKeysUrl(String keysUrl) {
        this.keysUrl = keysUrl;
    }

    /**
     * Getter for LabelSearchUrl.
     * @return Returns the String
     */
    @JsonGetter("label_search_url")
    public String getLabelSearchUrl() {
        return labelSearchUrl;
    }

    /**
     * Setter for LabelSearchUrl.
     * @param labelSearchUrl Value for String
     */
    @JsonSetter("label_search_url")
    public void setLabelSearchUrl(String labelSearchUrl) {
        this.labelSearchUrl = labelSearchUrl;
    }

    /**
     * Getter for NotificationsUrl.
     * @return Returns the String
     */
    @JsonGetter("notifications_url")
    public String getNotificationsUrl() {
        return notificationsUrl;
    }

    /**
     * Setter for NotificationsUrl.
     * @param notificationsUrl Value for String
     */
    @JsonSetter("notifications_url")
    public void setNotificationsUrl(String notificationsUrl) {
        this.notificationsUrl = notificationsUrl;
    }

    /**
     * Getter for OrganizationUrl.
     * @return Returns the String
     */
    @JsonGetter("organization_url")
    public String getOrganizationUrl() {
        return organizationUrl;
    }

    /**
     * Setter for OrganizationUrl.
     * @param organizationUrl Value for String
     */
    @JsonSetter("organization_url")
    public void setOrganizationUrl(String organizationUrl) {
        this.organizationUrl = organizationUrl;
    }

    /**
     * Getter for OrganizationRepositoriesUrl.
     * @return Returns the String
     */
    @JsonGetter("organization_repositories_url")
    public String getOrganizationRepositoriesUrl() {
        return organizationRepositoriesUrl;
    }

    /**
     * Setter for OrganizationRepositoriesUrl.
     * @param organizationRepositoriesUrl Value for String
     */
    @JsonSetter("organization_repositories_url")
    public void setOrganizationRepositoriesUrl(String organizationRepositoriesUrl) {
        this.organizationRepositoriesUrl = organizationRepositoriesUrl;
    }

    /**
     * Getter for OrganizationTeamsUrl.
     * @return Returns the String
     */
    @JsonGetter("organization_teams_url")
    public String getOrganizationTeamsUrl() {
        return organizationTeamsUrl;
    }

    /**
     * Setter for OrganizationTeamsUrl.
     * @param organizationTeamsUrl Value for String
     */
    @JsonSetter("organization_teams_url")
    public void setOrganizationTeamsUrl(String organizationTeamsUrl) {
        this.organizationTeamsUrl = organizationTeamsUrl;
    }

    /**
     * Getter for PublicGistsUrl.
     * @return Returns the String
     */
    @JsonGetter("public_gists_url")
    public String getPublicGistsUrl() {
        return publicGistsUrl;
    }

    /**
     * Setter for PublicGistsUrl.
     * @param publicGistsUrl Value for String
     */
    @JsonSetter("public_gists_url")
    public void setPublicGistsUrl(String publicGistsUrl) {
        this.publicGistsUrl = publicGistsUrl;
    }

    /**
     * Getter for RateLimitUrl.
     * @return Returns the String
     */
    @JsonGetter("rate_limit_url")
    public String getRateLimitUrl() {
        return rateLimitUrl;
    }

    /**
     * Setter for RateLimitUrl.
     * @param rateLimitUrl Value for String
     */
    @JsonSetter("rate_limit_url")
    public void setRateLimitUrl(String rateLimitUrl) {
        this.rateLimitUrl = rateLimitUrl;
    }

    /**
     * Getter for RepositoryUrl.
     * @return Returns the String
     */
    @JsonGetter("repository_url")
    public String getRepositoryUrl() {
        return repositoryUrl;
    }

    /**
     * Setter for RepositoryUrl.
     * @param repositoryUrl Value for String
     */
    @JsonSetter("repository_url")
    public void setRepositoryUrl(String repositoryUrl) {
        this.repositoryUrl = repositoryUrl;
    }

    /**
     * Getter for RepositorySearchUrl.
     * @return Returns the String
     */
    @JsonGetter("repository_search_url")
    public String getRepositorySearchUrl() {
        return repositorySearchUrl;
    }

    /**
     * Setter for RepositorySearchUrl.
     * @param repositorySearchUrl Value for String
     */
    @JsonSetter("repository_search_url")
    public void setRepositorySearchUrl(String repositorySearchUrl) {
        this.repositorySearchUrl = repositorySearchUrl;
    }

    /**
     * Getter for CurrentUserRepositoriesUrl.
     * @return Returns the String
     */
    @JsonGetter("current_user_repositories_url")
    public String getCurrentUserRepositoriesUrl() {
        return currentUserRepositoriesUrl;
    }

    /**
     * Setter for CurrentUserRepositoriesUrl.
     * @param currentUserRepositoriesUrl Value for String
     */
    @JsonSetter("current_user_repositories_url")
    public void setCurrentUserRepositoriesUrl(String currentUserRepositoriesUrl) {
        this.currentUserRepositoriesUrl = currentUserRepositoriesUrl;
    }

    /**
     * Getter for StarredUrl.
     * @return Returns the String
     */
    @JsonGetter("starred_url")
    public String getStarredUrl() {
        return starredUrl;
    }

    /**
     * Setter for StarredUrl.
     * @param starredUrl Value for String
     */
    @JsonSetter("starred_url")
    public void setStarredUrl(String starredUrl) {
        this.starredUrl = starredUrl;
    }

    /**
     * Getter for StarredGistsUrl.
     * @return Returns the String
     */
    @JsonGetter("starred_gists_url")
    public String getStarredGistsUrl() {
        return starredGistsUrl;
    }

    /**
     * Setter for StarredGistsUrl.
     * @param starredGistsUrl Value for String
     */
    @JsonSetter("starred_gists_url")
    public void setStarredGistsUrl(String starredGistsUrl) {
        this.starredGistsUrl = starredGistsUrl;
    }

    /**
     * Getter for TopicSearchUrl.
     * @return Returns the String
     */
    @JsonGetter("topic_search_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTopicSearchUrl() {
        return topicSearchUrl;
    }

    /**
     * Setter for TopicSearchUrl.
     * @param topicSearchUrl Value for String
     */
    @JsonSetter("topic_search_url")
    public void setTopicSearchUrl(String topicSearchUrl) {
        this.topicSearchUrl = topicSearchUrl;
    }

    /**
     * Getter for UserUrl.
     * @return Returns the String
     */
    @JsonGetter("user_url")
    public String getUserUrl() {
        return userUrl;
    }

    /**
     * Setter for UserUrl.
     * @param userUrl Value for String
     */
    @JsonSetter("user_url")
    public void setUserUrl(String userUrl) {
        this.userUrl = userUrl;
    }

    /**
     * Getter for UserOrganizationsUrl.
     * @return Returns the String
     */
    @JsonGetter("user_organizations_url")
    public String getUserOrganizationsUrl() {
        return userOrganizationsUrl;
    }

    /**
     * Setter for UserOrganizationsUrl.
     * @param userOrganizationsUrl Value for String
     */
    @JsonSetter("user_organizations_url")
    public void setUserOrganizationsUrl(String userOrganizationsUrl) {
        this.userOrganizationsUrl = userOrganizationsUrl;
    }

    /**
     * Getter for UserRepositoriesUrl.
     * @return Returns the String
     */
    @JsonGetter("user_repositories_url")
    public String getUserRepositoriesUrl() {
        return userRepositoriesUrl;
    }

    /**
     * Setter for UserRepositoriesUrl.
     * @param userRepositoriesUrl Value for String
     */
    @JsonSetter("user_repositories_url")
    public void setUserRepositoriesUrl(String userRepositoriesUrl) {
        this.userRepositoriesUrl = userRepositoriesUrl;
    }

    /**
     * Getter for UserSearchUrl.
     * @return Returns the String
     */
    @JsonGetter("user_search_url")
    public String getUserSearchUrl() {
        return userSearchUrl;
    }

    /**
     * Setter for UserSearchUrl.
     * @param userSearchUrl Value for String
     */
    @JsonSetter("user_search_url")
    public void setUserSearchUrl(String userSearchUrl) {
        this.userSearchUrl = userSearchUrl;
    }

    /**
     * Converts this Root into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Root [" + "currentUserUrl=" + currentUserUrl + ", currentUserAuthorizationsHtmlUrl="
                + currentUserAuthorizationsHtmlUrl + ", authorizationsUrl=" + authorizationsUrl
                + ", codeSearchUrl=" + codeSearchUrl + ", commitSearchUrl=" + commitSearchUrl
                + ", emailsUrl=" + emailsUrl + ", emojisUrl=" + emojisUrl + ", eventsUrl="
                + eventsUrl + ", feedsUrl=" + feedsUrl + ", followersUrl=" + followersUrl
                + ", followingUrl=" + followingUrl + ", gistsUrl=" + gistsUrl + ", hubUrl=" + hubUrl
                + ", issueSearchUrl=" + issueSearchUrl + ", issuesUrl=" + issuesUrl + ", keysUrl="
                + keysUrl + ", labelSearchUrl=" + labelSearchUrl + ", notificationsUrl="
                + notificationsUrl + ", organizationUrl=" + organizationUrl
                + ", organizationRepositoriesUrl=" + organizationRepositoriesUrl
                + ", organizationTeamsUrl=" + organizationTeamsUrl + ", publicGistsUrl="
                + publicGistsUrl + ", rateLimitUrl=" + rateLimitUrl + ", repositoryUrl="
                + repositoryUrl + ", repositorySearchUrl=" + repositorySearchUrl
                + ", currentUserRepositoriesUrl=" + currentUserRepositoriesUrl + ", starredUrl="
                + starredUrl + ", starredGistsUrl=" + starredGistsUrl + ", userUrl=" + userUrl
                + ", userOrganizationsUrl=" + userOrganizationsUrl + ", userRepositoriesUrl="
                + userRepositoriesUrl + ", userSearchUrl=" + userSearchUrl + ", topicSearchUrl="
                + topicSearchUrl + "]";
    }

    /**
     * Builds a new {@link Root.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Root.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(currentUserUrl, currentUserAuthorizationsHtmlUrl,
                authorizationsUrl, codeSearchUrl, commitSearchUrl, emailsUrl, emojisUrl, eventsUrl,
                feedsUrl, followersUrl, followingUrl, gistsUrl, hubUrl, issueSearchUrl, issuesUrl,
                keysUrl, labelSearchUrl, notificationsUrl, organizationUrl,
                organizationRepositoriesUrl, organizationTeamsUrl, publicGistsUrl, rateLimitUrl,
                repositoryUrl, repositorySearchUrl, currentUserRepositoriesUrl, starredUrl,
                starredGistsUrl, userUrl, userOrganizationsUrl, userRepositoriesUrl, userSearchUrl)
                .topicSearchUrl(getTopicSearchUrl());
        return builder;
    }

    /**
     * Class to build instances of {@link Root}.
     */
    public static class Builder {
        private String currentUserUrl;
        private String currentUserAuthorizationsHtmlUrl;
        private String authorizationsUrl;
        private String codeSearchUrl;
        private String commitSearchUrl;
        private String emailsUrl;
        private String emojisUrl;
        private String eventsUrl;
        private String feedsUrl;
        private String followersUrl;
        private String followingUrl;
        private String gistsUrl;
        private String hubUrl;
        private String issueSearchUrl;
        private String issuesUrl;
        private String keysUrl;
        private String labelSearchUrl;
        private String notificationsUrl;
        private String organizationUrl;
        private String organizationRepositoriesUrl;
        private String organizationTeamsUrl;
        private String publicGistsUrl;
        private String rateLimitUrl;
        private String repositoryUrl;
        private String repositorySearchUrl;
        private String currentUserRepositoriesUrl;
        private String starredUrl;
        private String starredGistsUrl;
        private String userUrl;
        private String userOrganizationsUrl;
        private String userRepositoriesUrl;
        private String userSearchUrl;
        private String topicSearchUrl;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  currentUserUrl  String value for currentUserUrl.
         * @param  currentUserAuthorizationsHtmlUrl  String value for
         *         currentUserAuthorizationsHtmlUrl.
         * @param  authorizationsUrl  String value for authorizationsUrl.
         * @param  codeSearchUrl  String value for codeSearchUrl.
         * @param  commitSearchUrl  String value for commitSearchUrl.
         * @param  emailsUrl  String value for emailsUrl.
         * @param  emojisUrl  String value for emojisUrl.
         * @param  eventsUrl  String value for eventsUrl.
         * @param  feedsUrl  String value for feedsUrl.
         * @param  followersUrl  String value for followersUrl.
         * @param  followingUrl  String value for followingUrl.
         * @param  gistsUrl  String value for gistsUrl.
         * @param  hubUrl  String value for hubUrl.
         * @param  issueSearchUrl  String value for issueSearchUrl.
         * @param  issuesUrl  String value for issuesUrl.
         * @param  keysUrl  String value for keysUrl.
         * @param  labelSearchUrl  String value for labelSearchUrl.
         * @param  notificationsUrl  String value for notificationsUrl.
         * @param  organizationUrl  String value for organizationUrl.
         * @param  organizationRepositoriesUrl  String value for organizationRepositoriesUrl.
         * @param  organizationTeamsUrl  String value for organizationTeamsUrl.
         * @param  publicGistsUrl  String value for publicGistsUrl.
         * @param  rateLimitUrl  String value for rateLimitUrl.
         * @param  repositoryUrl  String value for repositoryUrl.
         * @param  repositorySearchUrl  String value for repositorySearchUrl.
         * @param  currentUserRepositoriesUrl  String value for currentUserRepositoriesUrl.
         * @param  starredUrl  String value for starredUrl.
         * @param  starredGistsUrl  String value for starredGistsUrl.
         * @param  userUrl  String value for userUrl.
         * @param  userOrganizationsUrl  String value for userOrganizationsUrl.
         * @param  userRepositoriesUrl  String value for userRepositoriesUrl.
         * @param  userSearchUrl  String value for userSearchUrl.
         */
        public Builder(String currentUserUrl, String currentUserAuthorizationsHtmlUrl,
                String authorizationsUrl, String codeSearchUrl, String commitSearchUrl,
                String emailsUrl, String emojisUrl, String eventsUrl, String feedsUrl,
                String followersUrl, String followingUrl, String gistsUrl, String hubUrl,
                String issueSearchUrl, String issuesUrl, String keysUrl, String labelSearchUrl,
                String notificationsUrl, String organizationUrl, String organizationRepositoriesUrl,
                String organizationTeamsUrl, String publicGistsUrl, String rateLimitUrl,
                String repositoryUrl, String repositorySearchUrl, String currentUserRepositoriesUrl,
                String starredUrl, String starredGistsUrl, String userUrl,
                String userOrganizationsUrl, String userRepositoriesUrl, String userSearchUrl) {
            this.currentUserUrl = currentUserUrl;
            this.currentUserAuthorizationsHtmlUrl = currentUserAuthorizationsHtmlUrl;
            this.authorizationsUrl = authorizationsUrl;
            this.codeSearchUrl = codeSearchUrl;
            this.commitSearchUrl = commitSearchUrl;
            this.emailsUrl = emailsUrl;
            this.emojisUrl = emojisUrl;
            this.eventsUrl = eventsUrl;
            this.feedsUrl = feedsUrl;
            this.followersUrl = followersUrl;
            this.followingUrl = followingUrl;
            this.gistsUrl = gistsUrl;
            this.hubUrl = hubUrl;
            this.issueSearchUrl = issueSearchUrl;
            this.issuesUrl = issuesUrl;
            this.keysUrl = keysUrl;
            this.labelSearchUrl = labelSearchUrl;
            this.notificationsUrl = notificationsUrl;
            this.organizationUrl = organizationUrl;
            this.organizationRepositoriesUrl = organizationRepositoriesUrl;
            this.organizationTeamsUrl = organizationTeamsUrl;
            this.publicGistsUrl = publicGistsUrl;
            this.rateLimitUrl = rateLimitUrl;
            this.repositoryUrl = repositoryUrl;
            this.repositorySearchUrl = repositorySearchUrl;
            this.currentUserRepositoriesUrl = currentUserRepositoriesUrl;
            this.starredUrl = starredUrl;
            this.starredGistsUrl = starredGistsUrl;
            this.userUrl = userUrl;
            this.userOrganizationsUrl = userOrganizationsUrl;
            this.userRepositoriesUrl = userRepositoriesUrl;
            this.userSearchUrl = userSearchUrl;
        }

        /**
         * Setter for currentUserUrl.
         * @param  currentUserUrl  String value for currentUserUrl.
         * @return Builder
         */
        public Builder currentUserUrl(String currentUserUrl) {
            this.currentUserUrl = currentUserUrl;
            return this;
        }

        /**
         * Setter for currentUserAuthorizationsHtmlUrl.
         * @param  currentUserAuthorizationsHtmlUrl  String value for
         *         currentUserAuthorizationsHtmlUrl.
         * @return Builder
         */
        public Builder currentUserAuthorizationsHtmlUrl(String currentUserAuthorizationsHtmlUrl) {
            this.currentUserAuthorizationsHtmlUrl = currentUserAuthorizationsHtmlUrl;
            return this;
        }

        /**
         * Setter for authorizationsUrl.
         * @param  authorizationsUrl  String value for authorizationsUrl.
         * @return Builder
         */
        public Builder authorizationsUrl(String authorizationsUrl) {
            this.authorizationsUrl = authorizationsUrl;
            return this;
        }

        /**
         * Setter for codeSearchUrl.
         * @param  codeSearchUrl  String value for codeSearchUrl.
         * @return Builder
         */
        public Builder codeSearchUrl(String codeSearchUrl) {
            this.codeSearchUrl = codeSearchUrl;
            return this;
        }

        /**
         * Setter for commitSearchUrl.
         * @param  commitSearchUrl  String value for commitSearchUrl.
         * @return Builder
         */
        public Builder commitSearchUrl(String commitSearchUrl) {
            this.commitSearchUrl = commitSearchUrl;
            return this;
        }

        /**
         * Setter for emailsUrl.
         * @param  emailsUrl  String value for emailsUrl.
         * @return Builder
         */
        public Builder emailsUrl(String emailsUrl) {
            this.emailsUrl = emailsUrl;
            return this;
        }

        /**
         * Setter for emojisUrl.
         * @param  emojisUrl  String value for emojisUrl.
         * @return Builder
         */
        public Builder emojisUrl(String emojisUrl) {
            this.emojisUrl = emojisUrl;
            return this;
        }

        /**
         * Setter for eventsUrl.
         * @param  eventsUrl  String value for eventsUrl.
         * @return Builder
         */
        public Builder eventsUrl(String eventsUrl) {
            this.eventsUrl = eventsUrl;
            return this;
        }

        /**
         * Setter for feedsUrl.
         * @param  feedsUrl  String value for feedsUrl.
         * @return Builder
         */
        public Builder feedsUrl(String feedsUrl) {
            this.feedsUrl = feedsUrl;
            return this;
        }

        /**
         * Setter for followersUrl.
         * @param  followersUrl  String value for followersUrl.
         * @return Builder
         */
        public Builder followersUrl(String followersUrl) {
            this.followersUrl = followersUrl;
            return this;
        }

        /**
         * Setter for followingUrl.
         * @param  followingUrl  String value for followingUrl.
         * @return Builder
         */
        public Builder followingUrl(String followingUrl) {
            this.followingUrl = followingUrl;
            return this;
        }

        /**
         * Setter for gistsUrl.
         * @param  gistsUrl  String value for gistsUrl.
         * @return Builder
         */
        public Builder gistsUrl(String gistsUrl) {
            this.gistsUrl = gistsUrl;
            return this;
        }

        /**
         * Setter for hubUrl.
         * @param  hubUrl  String value for hubUrl.
         * @return Builder
         */
        public Builder hubUrl(String hubUrl) {
            this.hubUrl = hubUrl;
            return this;
        }

        /**
         * Setter for issueSearchUrl.
         * @param  issueSearchUrl  String value for issueSearchUrl.
         * @return Builder
         */
        public Builder issueSearchUrl(String issueSearchUrl) {
            this.issueSearchUrl = issueSearchUrl;
            return this;
        }

        /**
         * Setter for issuesUrl.
         * @param  issuesUrl  String value for issuesUrl.
         * @return Builder
         */
        public Builder issuesUrl(String issuesUrl) {
            this.issuesUrl = issuesUrl;
            return this;
        }

        /**
         * Setter for keysUrl.
         * @param  keysUrl  String value for keysUrl.
         * @return Builder
         */
        public Builder keysUrl(String keysUrl) {
            this.keysUrl = keysUrl;
            return this;
        }

        /**
         * Setter for labelSearchUrl.
         * @param  labelSearchUrl  String value for labelSearchUrl.
         * @return Builder
         */
        public Builder labelSearchUrl(String labelSearchUrl) {
            this.labelSearchUrl = labelSearchUrl;
            return this;
        }

        /**
         * Setter for notificationsUrl.
         * @param  notificationsUrl  String value for notificationsUrl.
         * @return Builder
         */
        public Builder notificationsUrl(String notificationsUrl) {
            this.notificationsUrl = notificationsUrl;
            return this;
        }

        /**
         * Setter for organizationUrl.
         * @param  organizationUrl  String value for organizationUrl.
         * @return Builder
         */
        public Builder organizationUrl(String organizationUrl) {
            this.organizationUrl = organizationUrl;
            return this;
        }

        /**
         * Setter for organizationRepositoriesUrl.
         * @param  organizationRepositoriesUrl  String value for organizationRepositoriesUrl.
         * @return Builder
         */
        public Builder organizationRepositoriesUrl(String organizationRepositoriesUrl) {
            this.organizationRepositoriesUrl = organizationRepositoriesUrl;
            return this;
        }

        /**
         * Setter for organizationTeamsUrl.
         * @param  organizationTeamsUrl  String value for organizationTeamsUrl.
         * @return Builder
         */
        public Builder organizationTeamsUrl(String organizationTeamsUrl) {
            this.organizationTeamsUrl = organizationTeamsUrl;
            return this;
        }

        /**
         * Setter for publicGistsUrl.
         * @param  publicGistsUrl  String value for publicGistsUrl.
         * @return Builder
         */
        public Builder publicGistsUrl(String publicGistsUrl) {
            this.publicGistsUrl = publicGistsUrl;
            return this;
        }

        /**
         * Setter for rateLimitUrl.
         * @param  rateLimitUrl  String value for rateLimitUrl.
         * @return Builder
         */
        public Builder rateLimitUrl(String rateLimitUrl) {
            this.rateLimitUrl = rateLimitUrl;
            return this;
        }

        /**
         * Setter for repositoryUrl.
         * @param  repositoryUrl  String value for repositoryUrl.
         * @return Builder
         */
        public Builder repositoryUrl(String repositoryUrl) {
            this.repositoryUrl = repositoryUrl;
            return this;
        }

        /**
         * Setter for repositorySearchUrl.
         * @param  repositorySearchUrl  String value for repositorySearchUrl.
         * @return Builder
         */
        public Builder repositorySearchUrl(String repositorySearchUrl) {
            this.repositorySearchUrl = repositorySearchUrl;
            return this;
        }

        /**
         * Setter for currentUserRepositoriesUrl.
         * @param  currentUserRepositoriesUrl  String value for currentUserRepositoriesUrl.
         * @return Builder
         */
        public Builder currentUserRepositoriesUrl(String currentUserRepositoriesUrl) {
            this.currentUserRepositoriesUrl = currentUserRepositoriesUrl;
            return this;
        }

        /**
         * Setter for starredUrl.
         * @param  starredUrl  String value for starredUrl.
         * @return Builder
         */
        public Builder starredUrl(String starredUrl) {
            this.starredUrl = starredUrl;
            return this;
        }

        /**
         * Setter for starredGistsUrl.
         * @param  starredGistsUrl  String value for starredGistsUrl.
         * @return Builder
         */
        public Builder starredGistsUrl(String starredGistsUrl) {
            this.starredGistsUrl = starredGistsUrl;
            return this;
        }

        /**
         * Setter for userUrl.
         * @param  userUrl  String value for userUrl.
         * @return Builder
         */
        public Builder userUrl(String userUrl) {
            this.userUrl = userUrl;
            return this;
        }

        /**
         * Setter for userOrganizationsUrl.
         * @param  userOrganizationsUrl  String value for userOrganizationsUrl.
         * @return Builder
         */
        public Builder userOrganizationsUrl(String userOrganizationsUrl) {
            this.userOrganizationsUrl = userOrganizationsUrl;
            return this;
        }

        /**
         * Setter for userRepositoriesUrl.
         * @param  userRepositoriesUrl  String value for userRepositoriesUrl.
         * @return Builder
         */
        public Builder userRepositoriesUrl(String userRepositoriesUrl) {
            this.userRepositoriesUrl = userRepositoriesUrl;
            return this;
        }

        /**
         * Setter for userSearchUrl.
         * @param  userSearchUrl  String value for userSearchUrl.
         * @return Builder
         */
        public Builder userSearchUrl(String userSearchUrl) {
            this.userSearchUrl = userSearchUrl;
            return this;
        }

        /**
         * Setter for topicSearchUrl.
         * @param  topicSearchUrl  String value for topicSearchUrl.
         * @return Builder
         */
        public Builder topicSearchUrl(String topicSearchUrl) {
            this.topicSearchUrl = topicSearchUrl;
            return this;
        }

        /**
         * Builds a new {@link Root} object using the set fields.
         * @return {@link Root}
         */
        public Root build() {
            return new Root(currentUserUrl, currentUserAuthorizationsHtmlUrl, authorizationsUrl,
                    codeSearchUrl, commitSearchUrl, emailsUrl, emojisUrl, eventsUrl, feedsUrl,
                    followersUrl, followingUrl, gistsUrl, hubUrl, issueSearchUrl, issuesUrl,
                    keysUrl, labelSearchUrl, notificationsUrl, organizationUrl,
                    organizationRepositoriesUrl, organizationTeamsUrl, publicGistsUrl, rateLimitUrl,
                    repositoryUrl, repositorySearchUrl, currentUserRepositoriesUrl, starredUrl,
                    starredGistsUrl, userUrl, userOrganizationsUrl, userRepositoriesUrl,
                    userSearchUrl, topicSearchUrl);
        }
    }
}
