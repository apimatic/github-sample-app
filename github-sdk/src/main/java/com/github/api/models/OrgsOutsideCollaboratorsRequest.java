/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for OrgsOutsideCollaboratorsRequest type.
 */
public class OrgsOutsideCollaboratorsRequest {
    private Boolean async;

    /**
     * Default constructor.
     */
    public OrgsOutsideCollaboratorsRequest() {
        async = false;
    }

    /**
     * Initialization constructor.
     * @param  async  Boolean value for async.
     */
    public OrgsOutsideCollaboratorsRequest(
            Boolean async) {
        this.async = async;
    }

    /**
     * Getter for Async.
     * When set to `true`, the request will be performed asynchronously. Returns a 202 status code
     * when the job is successfully queued.
     * @return Returns the Boolean
     */
    @JsonGetter("async")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getAsync() {
        return async;
    }

    /**
     * Setter for Async.
     * When set to `true`, the request will be performed asynchronously. Returns a 202 status code
     * when the job is successfully queued.
     * @param async Value for Boolean
     */
    @JsonSetter("async")
    public void setAsync(Boolean async) {
        this.async = async;
    }

    /**
     * Converts this OrgsOutsideCollaboratorsRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "OrgsOutsideCollaboratorsRequest [" + "async=" + async + "]";
    }

    /**
     * Builds a new {@link OrgsOutsideCollaboratorsRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link OrgsOutsideCollaboratorsRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .async(getAsync());
        return builder;
    }

    /**
     * Class to build instances of {@link OrgsOutsideCollaboratorsRequest}.
     */
    public static class Builder {
        private Boolean async = false;



        /**
         * Setter for async.
         * @param  async  Boolean value for async.
         * @return Builder
         */
        public Builder async(Boolean async) {
            this.async = async;
            return this;
        }

        /**
         * Builds a new {@link OrgsOutsideCollaboratorsRequest} object using the set fields.
         * @return {@link OrgsOutsideCollaboratorsRequest}
         */
        public OrgsOutsideCollaboratorsRequest build() {
            return new OrgsOutsideCollaboratorsRequest(async);
        }
    }
}
