/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;

/**
 * This is a model class for ProjectsColumnsResponse type.
 */
public class ProjectsColumnsResponse {
    private String url;
    private String projectUrl;
    private String cardsUrl;
    private int id;
    private String nodeId;
    private String name;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;

    /**
     * Default constructor.
     */
    public ProjectsColumnsResponse() {
    }

    /**
     * Initialization constructor.
     * @param  url  String value for url.
     * @param  projectUrl  String value for projectUrl.
     * @param  cardsUrl  String value for cardsUrl.
     * @param  id  int value for id.
     * @param  nodeId  String value for nodeId.
     * @param  name  String value for name.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     */
    public ProjectsColumnsResponse(
            String url,
            String projectUrl,
            String cardsUrl,
            int id,
            String nodeId,
            String name,
            LocalDateTime createdAt,
            LocalDateTime updatedAt) {
        this.url = url;
        this.projectUrl = projectUrl;
        this.cardsUrl = cardsUrl;
        this.id = id;
        this.nodeId = nodeId;
        this.name = name;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for ProjectUrl.
     * @return Returns the String
     */
    @JsonGetter("project_url")
    public String getProjectUrl() {
        return projectUrl;
    }

    /**
     * Setter for ProjectUrl.
     * @param projectUrl Value for String
     */
    @JsonSetter("project_url")
    public void setProjectUrl(String projectUrl) {
        this.projectUrl = projectUrl;
    }

    /**
     * Getter for CardsUrl.
     * @return Returns the String
     */
    @JsonGetter("cards_url")
    public String getCardsUrl() {
        return cardsUrl;
    }

    /**
     * Setter for CardsUrl.
     * @param cardsUrl Value for String
     */
    @JsonSetter("cards_url")
    public void setCardsUrl(String cardsUrl) {
        this.cardsUrl = cardsUrl;
    }

    /**
     * Getter for Id.
     * The unique identifier of the project column
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * The unique identifier of the project column
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for Name.
     * Name of the project column
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Name of the project column
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Converts this ProjectsColumnsResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ProjectsColumnsResponse [" + "url=" + url + ", projectUrl=" + projectUrl
                + ", cardsUrl=" + cardsUrl + ", id=" + id + ", nodeId=" + nodeId + ", name=" + name
                + ", createdAt=" + createdAt + ", updatedAt=" + updatedAt + "]";
    }

    /**
     * Builds a new {@link ProjectsColumnsResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ProjectsColumnsResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(url, projectUrl, cardsUrl, id, nodeId, name, createdAt,
                updatedAt);
        return builder;
    }

    /**
     * Class to build instances of {@link ProjectsColumnsResponse}.
     */
    public static class Builder {
        private String url;
        private String projectUrl;
        private String cardsUrl;
        private int id;
        private String nodeId;
        private String name;
        private LocalDateTime createdAt;
        private LocalDateTime updatedAt;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  url  String value for url.
         * @param  projectUrl  String value for projectUrl.
         * @param  cardsUrl  String value for cardsUrl.
         * @param  id  int value for id.
         * @param  nodeId  String value for nodeId.
         * @param  name  String value for name.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         */
        public Builder(String url, String projectUrl, String cardsUrl, int id, String nodeId,
                String name, LocalDateTime createdAt, LocalDateTime updatedAt) {
            this.url = url;
            this.projectUrl = projectUrl;
            this.cardsUrl = cardsUrl;
            this.id = id;
            this.nodeId = nodeId;
            this.name = name;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for projectUrl.
         * @param  projectUrl  String value for projectUrl.
         * @return Builder
         */
        public Builder projectUrl(String projectUrl) {
            this.projectUrl = projectUrl;
            return this;
        }

        /**
         * Setter for cardsUrl.
         * @param  cardsUrl  String value for cardsUrl.
         * @return Builder
         */
        public Builder cardsUrl(String cardsUrl) {
            this.cardsUrl = cardsUrl;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Builds a new {@link ProjectsColumnsResponse} object using the set fields.
         * @return {@link ProjectsColumnsResponse}
         */
        public ProjectsColumnsResponse build() {
            return new ProjectsColumnsResponse(url, projectUrl, cardsUrl, id, nodeId, name,
                    createdAt, updatedAt);
        }
    }
}
