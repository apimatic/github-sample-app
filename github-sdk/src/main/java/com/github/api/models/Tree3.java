/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Tree3 type.
 */
public class Tree3 {
    private String path;
    private String mode;
    private String type;
    private String sha;
    private Integer size;
    private String url;

    /**
     * Default constructor.
     */
    public Tree3() {
    }

    /**
     * Initialization constructor.
     * @param  path  String value for path.
     * @param  mode  String value for mode.
     * @param  type  String value for type.
     * @param  sha  String value for sha.
     * @param  size  Integer value for size.
     * @param  url  String value for url.
     */
    public Tree3(
            String path,
            String mode,
            String type,
            String sha,
            Integer size,
            String url) {
        this.path = path;
        this.mode = mode;
        this.type = type;
        this.sha = sha;
        this.size = size;
        this.url = url;
    }

    /**
     * Getter for Path.
     * @return Returns the String
     */
    @JsonGetter("path")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPath() {
        return path;
    }

    /**
     * Setter for Path.
     * @param path Value for String
     */
    @JsonSetter("path")
    public void setPath(String path) {
        this.path = path;
    }

    /**
     * Getter for Mode.
     * @return Returns the String
     */
    @JsonGetter("mode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMode() {
        return mode;
    }

    /**
     * Setter for Mode.
     * @param mode Value for String
     */
    @JsonSetter("mode")
    public void setMode(String mode) {
        this.mode = mode;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Sha.
     * @return Returns the String
     */
    @JsonGetter("sha")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSha() {
        return sha;
    }

    /**
     * Setter for Sha.
     * @param sha Value for String
     */
    @JsonSetter("sha")
    public void setSha(String sha) {
        this.sha = sha;
    }

    /**
     * Getter for Size.
     * @return Returns the Integer
     */
    @JsonGetter("size")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getSize() {
        return size;
    }

    /**
     * Setter for Size.
     * @param size Value for Integer
     */
    @JsonSetter("size")
    public void setSize(Integer size) {
        this.size = size;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Converts this Tree3 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Tree3 [" + "path=" + path + ", mode=" + mode + ", type=" + type + ", sha=" + sha
                + ", size=" + size + ", url=" + url + "]";
    }

    /**
     * Builds a new {@link Tree3.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Tree3.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .path(getPath())
                .mode(getMode())
                .type(getType())
                .sha(getSha())
                .size(getSize())
                .url(getUrl());
        return builder;
    }

    /**
     * Class to build instances of {@link Tree3}.
     */
    public static class Builder {
        private String path;
        private String mode;
        private String type;
        private String sha;
        private Integer size;
        private String url;



        /**
         * Setter for path.
         * @param  path  String value for path.
         * @return Builder
         */
        public Builder path(String path) {
            this.path = path;
            return this;
        }

        /**
         * Setter for mode.
         * @param  mode  String value for mode.
         * @return Builder
         */
        public Builder mode(String mode) {
            this.mode = mode;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for sha.
         * @param  sha  String value for sha.
         * @return Builder
         */
        public Builder sha(String sha) {
            this.sha = sha;
            return this;
        }

        /**
         * Setter for size.
         * @param  size  Integer value for size.
         * @return Builder
         */
        public Builder size(Integer size) {
            this.size = size;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Builds a new {@link Tree3} object using the set fields.
         * @return {@link Tree3}
         */
        public Tree3 build() {
            return new Tree3(path, mode, type, sha, size, url);
        }
    }
}
