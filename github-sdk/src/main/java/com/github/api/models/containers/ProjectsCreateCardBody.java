/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.github.api.ApiHelper;
import com.github.api.models.ProjectsColumnsCardsRequest1;
import com.github.api.models.ProjectsColumnsCardsRequest11;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for one-of types.
 */
@JsonDeserialize(using = ProjectsCreateCardBody.ProjectsCreateCardBodyDeserializer.class)
public abstract class ProjectsCreateCardBody {
    
    /**
     * One-of type initialization method.
     * @param projectsColumnsCardsRequest1 ProjectsColumnsCardsRequest1 value for projectsColumnsCardsRequest1.
     * @return The ProjectsColumnsCardsRequest1Case object.
     */
    public static ProjectsCreateCardBody fromProjectsColumnsCardsRequest1(
            ProjectsColumnsCardsRequest1 projectsColumnsCardsRequest1) {
        return projectsColumnsCardsRequest1 == null ? null : new ProjectsColumnsCardsRequest1Case(projectsColumnsCardsRequest1);
    }

    /**
     * One-of type initialization method.
     * @param projectsColumnsCardsRequest11 ProjectsColumnsCardsRequest11 value for projectsColumnsCardsRequest11.
     * @return The ProjectsColumnsCardsRequest11Case object.
     */
    public static ProjectsCreateCardBody fromProjectsColumnsCardsRequest11(
            ProjectsColumnsCardsRequest11 projectsColumnsCardsRequest11) {
        return projectsColumnsCardsRequest11 == null ? null : new ProjectsColumnsCardsRequest11Case(projectsColumnsCardsRequest11);
    }

    /**
     * Method to match from the provided one-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The one-of type cases callback.
     * @return The one-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for one-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R projectsColumnsCardsRequest1(ProjectsColumnsCardsRequest1 projectsColumnsCardsRequest1);

        R projectsColumnsCardsRequest11(ProjectsColumnsCardsRequest11 projectsColumnsCardsRequest11);
    }

    /**
     * This is a implementation class for ProjectsColumnsCardsRequest1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase
    private static class ProjectsColumnsCardsRequest1Case extends ProjectsCreateCardBody {

        @JsonValue
        private ProjectsColumnsCardsRequest1 projectsColumnsCardsRequest1;

        ProjectsColumnsCardsRequest1Case(ProjectsColumnsCardsRequest1 projectsColumnsCardsRequest1) {
            this.projectsColumnsCardsRequest1 = projectsColumnsCardsRequest1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.projectsColumnsCardsRequest1(this.projectsColumnsCardsRequest1);
        }

        @JsonCreator
        private ProjectsColumnsCardsRequest1Case(JsonNode jsonNode) throws IOException {
            this.projectsColumnsCardsRequest1 = ApiHelper.deserialize(jsonNode,
                ProjectsColumnsCardsRequest1.class);
        }

        @Override
        public String toString() {
            return projectsColumnsCardsRequest1.toString();
        }
    }

    /**
     * This is a implementation class for ProjectsColumnsCardsRequest11Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase
    private static class ProjectsColumnsCardsRequest11Case extends ProjectsCreateCardBody {

        @JsonValue
        private ProjectsColumnsCardsRequest11 projectsColumnsCardsRequest11;

        ProjectsColumnsCardsRequest11Case(ProjectsColumnsCardsRequest11 projectsColumnsCardsRequest11) {
            this.projectsColumnsCardsRequest11 = projectsColumnsCardsRequest11;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.projectsColumnsCardsRequest11(this.projectsColumnsCardsRequest11);
        }

        @JsonCreator
        private ProjectsColumnsCardsRequest11Case(JsonNode jsonNode) throws IOException {
            this.projectsColumnsCardsRequest11 = ApiHelper.deserialize(jsonNode,
                ProjectsColumnsCardsRequest11.class);
        }

        @Override
        public String toString() {
            return projectsColumnsCardsRequest11.toString();
        }
    }

    /**
     * This is a custom deserializer class for ProjectsCreateCardBody.
     */
    protected static class ProjectsCreateCardBodyDeserializer
            extends JsonDeserializer<ProjectsCreateCardBody> {

        @Override
        public ProjectsCreateCardBody deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(ProjectsColumnsCardsRequest1Case.class,
                    ProjectsColumnsCardsRequest11Case.class), true);
        }
    }

}
