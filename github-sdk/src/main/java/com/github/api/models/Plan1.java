/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Plan1 type.
 */
public class Plan1 {
    private String name;
    private int space;
    private int privateRepos;
    private Integer filledSeats;
    private Integer seats;

    /**
     * Default constructor.
     */
    public Plan1() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  space  int value for space.
     * @param  privateRepos  int value for privateRepos.
     * @param  filledSeats  Integer value for filledSeats.
     * @param  seats  Integer value for seats.
     */
    public Plan1(
            String name,
            int space,
            int privateRepos,
            Integer filledSeats,
            Integer seats) {
        this.name = name;
        this.space = space;
        this.privateRepos = privateRepos;
        this.filledSeats = filledSeats;
        this.seats = seats;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Space.
     * @return Returns the int
     */
    @JsonGetter("space")
    public int getSpace() {
        return space;
    }

    /**
     * Setter for Space.
     * @param space Value for int
     */
    @JsonSetter("space")
    public void setSpace(int space) {
        this.space = space;
    }

    /**
     * Getter for PrivateRepos.
     * @return Returns the int
     */
    @JsonGetter("private_repos")
    public int getPrivateRepos() {
        return privateRepos;
    }

    /**
     * Setter for PrivateRepos.
     * @param privateRepos Value for int
     */
    @JsonSetter("private_repos")
    public void setPrivateRepos(int privateRepos) {
        this.privateRepos = privateRepos;
    }

    /**
     * Getter for FilledSeats.
     * @return Returns the Integer
     */
    @JsonGetter("filled_seats")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getFilledSeats() {
        return filledSeats;
    }

    /**
     * Setter for FilledSeats.
     * @param filledSeats Value for Integer
     */
    @JsonSetter("filled_seats")
    public void setFilledSeats(Integer filledSeats) {
        this.filledSeats = filledSeats;
    }

    /**
     * Getter for Seats.
     * @return Returns the Integer
     */
    @JsonGetter("seats")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getSeats() {
        return seats;
    }

    /**
     * Setter for Seats.
     * @param seats Value for Integer
     */
    @JsonSetter("seats")
    public void setSeats(Integer seats) {
        this.seats = seats;
    }

    /**
     * Converts this Plan1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Plan1 [" + "name=" + name + ", space=" + space + ", privateRepos=" + privateRepos
                + ", filledSeats=" + filledSeats + ", seats=" + seats + "]";
    }

    /**
     * Builds a new {@link Plan1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Plan1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, space, privateRepos)
                .filledSeats(getFilledSeats())
                .seats(getSeats());
        return builder;
    }

    /**
     * Class to build instances of {@link Plan1}.
     */
    public static class Builder {
        private String name;
        private int space;
        private int privateRepos;
        private Integer filledSeats;
        private Integer seats;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  space  int value for space.
         * @param  privateRepos  int value for privateRepos.
         */
        public Builder(String name, int space, int privateRepos) {
            this.name = name;
            this.space = space;
            this.privateRepos = privateRepos;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for space.
         * @param  space  int value for space.
         * @return Builder
         */
        public Builder space(int space) {
            this.space = space;
            return this;
        }

        /**
         * Setter for privateRepos.
         * @param  privateRepos  int value for privateRepos.
         * @return Builder
         */
        public Builder privateRepos(int privateRepos) {
            this.privateRepos = privateRepos;
            return this;
        }

        /**
         * Setter for filledSeats.
         * @param  filledSeats  Integer value for filledSeats.
         * @return Builder
         */
        public Builder filledSeats(Integer filledSeats) {
            this.filledSeats = filledSeats;
            return this;
        }

        /**
         * Setter for seats.
         * @param  seats  Integer value for seats.
         * @return Builder
         */
        public Builder seats(Integer seats) {
            this.seats = seats;
            return this;
        }

        /**
         * Builds a new {@link Plan1} object using the set fields.
         * @return {@link Plan1}
         */
        public Plan1 build() {
            return new Plan1(name, space, privateRepos, filledSeats, seats);
        }
    }
}
