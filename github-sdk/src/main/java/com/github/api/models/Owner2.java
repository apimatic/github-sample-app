/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Owner2 type.
 */
public class Owner2 {
    private String login;
    private Integer id;
    private String nodeId;
    private String url;
    private String reposUrl;
    private String eventsUrl;
    private String hooksUrl;
    private String issuesUrl;
    private String membersUrl;
    private String publicMembersUrl;
    private String avatarUrl;
    private String description;
    private String gravatarId;
    private String htmlUrl;
    private String followersUrl;
    private String followingUrl;
    private String gistsUrl;
    private String starredUrl;
    private String subscriptionsUrl;
    private String organizationsUrl;
    private String receivedEventsUrl;
    private String type;
    private Boolean siteAdmin;

    /**
     * Default constructor.
     */
    public Owner2() {
    }

    /**
     * Initialization constructor.
     * @param  login  String value for login.
     * @param  id  Integer value for id.
     * @param  nodeId  String value for nodeId.
     * @param  url  String value for url.
     * @param  reposUrl  String value for reposUrl.
     * @param  eventsUrl  String value for eventsUrl.
     * @param  hooksUrl  String value for hooksUrl.
     * @param  issuesUrl  String value for issuesUrl.
     * @param  membersUrl  String value for membersUrl.
     * @param  publicMembersUrl  String value for publicMembersUrl.
     * @param  avatarUrl  String value for avatarUrl.
     * @param  description  String value for description.
     * @param  gravatarId  String value for gravatarId.
     * @param  htmlUrl  String value for htmlUrl.
     * @param  followersUrl  String value for followersUrl.
     * @param  followingUrl  String value for followingUrl.
     * @param  gistsUrl  String value for gistsUrl.
     * @param  starredUrl  String value for starredUrl.
     * @param  subscriptionsUrl  String value for subscriptionsUrl.
     * @param  organizationsUrl  String value for organizationsUrl.
     * @param  receivedEventsUrl  String value for receivedEventsUrl.
     * @param  type  String value for type.
     * @param  siteAdmin  Boolean value for siteAdmin.
     */
    public Owner2(
            String login,
            Integer id,
            String nodeId,
            String url,
            String reposUrl,
            String eventsUrl,
            String hooksUrl,
            String issuesUrl,
            String membersUrl,
            String publicMembersUrl,
            String avatarUrl,
            String description,
            String gravatarId,
            String htmlUrl,
            String followersUrl,
            String followingUrl,
            String gistsUrl,
            String starredUrl,
            String subscriptionsUrl,
            String organizationsUrl,
            String receivedEventsUrl,
            String type,
            Boolean siteAdmin) {
        this.login = login;
        this.id = id;
        this.nodeId = nodeId;
        this.url = url;
        this.reposUrl = reposUrl;
        this.eventsUrl = eventsUrl;
        this.hooksUrl = hooksUrl;
        this.issuesUrl = issuesUrl;
        this.membersUrl = membersUrl;
        this.publicMembersUrl = publicMembersUrl;
        this.avatarUrl = avatarUrl;
        this.description = description;
        this.gravatarId = gravatarId;
        this.htmlUrl = htmlUrl;
        this.followersUrl = followersUrl;
        this.followingUrl = followingUrl;
        this.gistsUrl = gistsUrl;
        this.starredUrl = starredUrl;
        this.subscriptionsUrl = subscriptionsUrl;
        this.organizationsUrl = organizationsUrl;
        this.receivedEventsUrl = receivedEventsUrl;
        this.type = type;
        this.siteAdmin = siteAdmin;
    }

    /**
     * Getter for Login.
     * @return Returns the String
     */
    @JsonGetter("login")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLogin() {
        return login;
    }

    /**
     * Setter for Login.
     * @param login Value for String
     */
    @JsonSetter("login")
    public void setLogin(String login) {
        this.login = login;
    }

    /**
     * Getter for Id.
     * @return Returns the Integer
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for Integer
     */
    @JsonSetter("id")
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for ReposUrl.
     * @return Returns the String
     */
    @JsonGetter("repos_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getReposUrl() {
        return reposUrl;
    }

    /**
     * Setter for ReposUrl.
     * @param reposUrl Value for String
     */
    @JsonSetter("repos_url")
    public void setReposUrl(String reposUrl) {
        this.reposUrl = reposUrl;
    }

    /**
     * Getter for EventsUrl.
     * @return Returns the String
     */
    @JsonGetter("events_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEventsUrl() {
        return eventsUrl;
    }

    /**
     * Setter for EventsUrl.
     * @param eventsUrl Value for String
     */
    @JsonSetter("events_url")
    public void setEventsUrl(String eventsUrl) {
        this.eventsUrl = eventsUrl;
    }

    /**
     * Getter for HooksUrl.
     * @return Returns the String
     */
    @JsonGetter("hooks_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getHooksUrl() {
        return hooksUrl;
    }

    /**
     * Setter for HooksUrl.
     * @param hooksUrl Value for String
     */
    @JsonSetter("hooks_url")
    public void setHooksUrl(String hooksUrl) {
        this.hooksUrl = hooksUrl;
    }

    /**
     * Getter for IssuesUrl.
     * @return Returns the String
     */
    @JsonGetter("issues_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIssuesUrl() {
        return issuesUrl;
    }

    /**
     * Setter for IssuesUrl.
     * @param issuesUrl Value for String
     */
    @JsonSetter("issues_url")
    public void setIssuesUrl(String issuesUrl) {
        this.issuesUrl = issuesUrl;
    }

    /**
     * Getter for MembersUrl.
     * @return Returns the String
     */
    @JsonGetter("members_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMembersUrl() {
        return membersUrl;
    }

    /**
     * Setter for MembersUrl.
     * @param membersUrl Value for String
     */
    @JsonSetter("members_url")
    public void setMembersUrl(String membersUrl) {
        this.membersUrl = membersUrl;
    }

    /**
     * Getter for PublicMembersUrl.
     * @return Returns the String
     */
    @JsonGetter("public_members_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPublicMembersUrl() {
        return publicMembersUrl;
    }

    /**
     * Setter for PublicMembersUrl.
     * @param publicMembersUrl Value for String
     */
    @JsonSetter("public_members_url")
    public void setPublicMembersUrl(String publicMembersUrl) {
        this.publicMembersUrl = publicMembersUrl;
    }

    /**
     * Getter for AvatarUrl.
     * @return Returns the String
     */
    @JsonGetter("avatar_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAvatarUrl() {
        return avatarUrl;
    }

    /**
     * Setter for AvatarUrl.
     * @param avatarUrl Value for String
     */
    @JsonSetter("avatar_url")
    public void setAvatarUrl(String avatarUrl) {
        this.avatarUrl = avatarUrl;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for GravatarId.
     * @return Returns the String
     */
    @JsonGetter("gravatar_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getGravatarId() {
        return gravatarId;
    }

    /**
     * Setter for GravatarId.
     * @param gravatarId Value for String
     */
    @JsonSetter("gravatar_id")
    public void setGravatarId(String gravatarId) {
        this.gravatarId = gravatarId;
    }

    /**
     * Getter for HtmlUrl.
     * @return Returns the String
     */
    @JsonGetter("html_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getHtmlUrl() {
        return htmlUrl;
    }

    /**
     * Setter for HtmlUrl.
     * @param htmlUrl Value for String
     */
    @JsonSetter("html_url")
    public void setHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
    }

    /**
     * Getter for FollowersUrl.
     * @return Returns the String
     */
    @JsonGetter("followers_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFollowersUrl() {
        return followersUrl;
    }

    /**
     * Setter for FollowersUrl.
     * @param followersUrl Value for String
     */
    @JsonSetter("followers_url")
    public void setFollowersUrl(String followersUrl) {
        this.followersUrl = followersUrl;
    }

    /**
     * Getter for FollowingUrl.
     * @return Returns the String
     */
    @JsonGetter("following_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFollowingUrl() {
        return followingUrl;
    }

    /**
     * Setter for FollowingUrl.
     * @param followingUrl Value for String
     */
    @JsonSetter("following_url")
    public void setFollowingUrl(String followingUrl) {
        this.followingUrl = followingUrl;
    }

    /**
     * Getter for GistsUrl.
     * @return Returns the String
     */
    @JsonGetter("gists_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getGistsUrl() {
        return gistsUrl;
    }

    /**
     * Setter for GistsUrl.
     * @param gistsUrl Value for String
     */
    @JsonSetter("gists_url")
    public void setGistsUrl(String gistsUrl) {
        this.gistsUrl = gistsUrl;
    }

    /**
     * Getter for StarredUrl.
     * @return Returns the String
     */
    @JsonGetter("starred_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStarredUrl() {
        return starredUrl;
    }

    /**
     * Setter for StarredUrl.
     * @param starredUrl Value for String
     */
    @JsonSetter("starred_url")
    public void setStarredUrl(String starredUrl) {
        this.starredUrl = starredUrl;
    }

    /**
     * Getter for SubscriptionsUrl.
     * @return Returns the String
     */
    @JsonGetter("subscriptions_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSubscriptionsUrl() {
        return subscriptionsUrl;
    }

    /**
     * Setter for SubscriptionsUrl.
     * @param subscriptionsUrl Value for String
     */
    @JsonSetter("subscriptions_url")
    public void setSubscriptionsUrl(String subscriptionsUrl) {
        this.subscriptionsUrl = subscriptionsUrl;
    }

    /**
     * Getter for OrganizationsUrl.
     * @return Returns the String
     */
    @JsonGetter("organizations_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOrganizationsUrl() {
        return organizationsUrl;
    }

    /**
     * Setter for OrganizationsUrl.
     * @param organizationsUrl Value for String
     */
    @JsonSetter("organizations_url")
    public void setOrganizationsUrl(String organizationsUrl) {
        this.organizationsUrl = organizationsUrl;
    }

    /**
     * Getter for ReceivedEventsUrl.
     * @return Returns the String
     */
    @JsonGetter("received_events_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getReceivedEventsUrl() {
        return receivedEventsUrl;
    }

    /**
     * Setter for ReceivedEventsUrl.
     * @param receivedEventsUrl Value for String
     */
    @JsonSetter("received_events_url")
    public void setReceivedEventsUrl(String receivedEventsUrl) {
        this.receivedEventsUrl = receivedEventsUrl;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for SiteAdmin.
     * @return Returns the Boolean
     */
    @JsonGetter("site_admin")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getSiteAdmin() {
        return siteAdmin;
    }

    /**
     * Setter for SiteAdmin.
     * @param siteAdmin Value for Boolean
     */
    @JsonSetter("site_admin")
    public void setSiteAdmin(Boolean siteAdmin) {
        this.siteAdmin = siteAdmin;
    }

    /**
     * Converts this Owner2 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Owner2 [" + "login=" + login + ", id=" + id + ", nodeId=" + nodeId + ", url=" + url
                + ", reposUrl=" + reposUrl + ", eventsUrl=" + eventsUrl + ", hooksUrl=" + hooksUrl
                + ", issuesUrl=" + issuesUrl + ", membersUrl=" + membersUrl + ", publicMembersUrl="
                + publicMembersUrl + ", avatarUrl=" + avatarUrl + ", description=" + description
                + ", gravatarId=" + gravatarId + ", htmlUrl=" + htmlUrl + ", followersUrl="
                + followersUrl + ", followingUrl=" + followingUrl + ", gistsUrl=" + gistsUrl
                + ", starredUrl=" + starredUrl + ", subscriptionsUrl=" + subscriptionsUrl
                + ", organizationsUrl=" + organizationsUrl + ", receivedEventsUrl="
                + receivedEventsUrl + ", type=" + type + ", siteAdmin=" + siteAdmin + "]";
    }

    /**
     * Builds a new {@link Owner2.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Owner2.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .login(getLogin())
                .id(getId())
                .nodeId(getNodeId())
                .url(getUrl())
                .reposUrl(getReposUrl())
                .eventsUrl(getEventsUrl())
                .hooksUrl(getHooksUrl())
                .issuesUrl(getIssuesUrl())
                .membersUrl(getMembersUrl())
                .publicMembersUrl(getPublicMembersUrl())
                .avatarUrl(getAvatarUrl())
                .description(getDescription())
                .gravatarId(getGravatarId())
                .htmlUrl(getHtmlUrl())
                .followersUrl(getFollowersUrl())
                .followingUrl(getFollowingUrl())
                .gistsUrl(getGistsUrl())
                .starredUrl(getStarredUrl())
                .subscriptionsUrl(getSubscriptionsUrl())
                .organizationsUrl(getOrganizationsUrl())
                .receivedEventsUrl(getReceivedEventsUrl())
                .type(getType())
                .siteAdmin(getSiteAdmin());
        return builder;
    }

    /**
     * Class to build instances of {@link Owner2}.
     */
    public static class Builder {
        private String login;
        private Integer id;
        private String nodeId;
        private String url;
        private String reposUrl;
        private String eventsUrl;
        private String hooksUrl;
        private String issuesUrl;
        private String membersUrl;
        private String publicMembersUrl;
        private String avatarUrl;
        private String description;
        private String gravatarId;
        private String htmlUrl;
        private String followersUrl;
        private String followingUrl;
        private String gistsUrl;
        private String starredUrl;
        private String subscriptionsUrl;
        private String organizationsUrl;
        private String receivedEventsUrl;
        private String type;
        private Boolean siteAdmin;



        /**
         * Setter for login.
         * @param  login  String value for login.
         * @return Builder
         */
        public Builder login(String login) {
            this.login = login;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  Integer value for id.
         * @return Builder
         */
        public Builder id(Integer id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for reposUrl.
         * @param  reposUrl  String value for reposUrl.
         * @return Builder
         */
        public Builder reposUrl(String reposUrl) {
            this.reposUrl = reposUrl;
            return this;
        }

        /**
         * Setter for eventsUrl.
         * @param  eventsUrl  String value for eventsUrl.
         * @return Builder
         */
        public Builder eventsUrl(String eventsUrl) {
            this.eventsUrl = eventsUrl;
            return this;
        }

        /**
         * Setter for hooksUrl.
         * @param  hooksUrl  String value for hooksUrl.
         * @return Builder
         */
        public Builder hooksUrl(String hooksUrl) {
            this.hooksUrl = hooksUrl;
            return this;
        }

        /**
         * Setter for issuesUrl.
         * @param  issuesUrl  String value for issuesUrl.
         * @return Builder
         */
        public Builder issuesUrl(String issuesUrl) {
            this.issuesUrl = issuesUrl;
            return this;
        }

        /**
         * Setter for membersUrl.
         * @param  membersUrl  String value for membersUrl.
         * @return Builder
         */
        public Builder membersUrl(String membersUrl) {
            this.membersUrl = membersUrl;
            return this;
        }

        /**
         * Setter for publicMembersUrl.
         * @param  publicMembersUrl  String value for publicMembersUrl.
         * @return Builder
         */
        public Builder publicMembersUrl(String publicMembersUrl) {
            this.publicMembersUrl = publicMembersUrl;
            return this;
        }

        /**
         * Setter for avatarUrl.
         * @param  avatarUrl  String value for avatarUrl.
         * @return Builder
         */
        public Builder avatarUrl(String avatarUrl) {
            this.avatarUrl = avatarUrl;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for gravatarId.
         * @param  gravatarId  String value for gravatarId.
         * @return Builder
         */
        public Builder gravatarId(String gravatarId) {
            this.gravatarId = gravatarId;
            return this;
        }

        /**
         * Setter for htmlUrl.
         * @param  htmlUrl  String value for htmlUrl.
         * @return Builder
         */
        public Builder htmlUrl(String htmlUrl) {
            this.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * Setter for followersUrl.
         * @param  followersUrl  String value for followersUrl.
         * @return Builder
         */
        public Builder followersUrl(String followersUrl) {
            this.followersUrl = followersUrl;
            return this;
        }

        /**
         * Setter for followingUrl.
         * @param  followingUrl  String value for followingUrl.
         * @return Builder
         */
        public Builder followingUrl(String followingUrl) {
            this.followingUrl = followingUrl;
            return this;
        }

        /**
         * Setter for gistsUrl.
         * @param  gistsUrl  String value for gistsUrl.
         * @return Builder
         */
        public Builder gistsUrl(String gistsUrl) {
            this.gistsUrl = gistsUrl;
            return this;
        }

        /**
         * Setter for starredUrl.
         * @param  starredUrl  String value for starredUrl.
         * @return Builder
         */
        public Builder starredUrl(String starredUrl) {
            this.starredUrl = starredUrl;
            return this;
        }

        /**
         * Setter for subscriptionsUrl.
         * @param  subscriptionsUrl  String value for subscriptionsUrl.
         * @return Builder
         */
        public Builder subscriptionsUrl(String subscriptionsUrl) {
            this.subscriptionsUrl = subscriptionsUrl;
            return this;
        }

        /**
         * Setter for organizationsUrl.
         * @param  organizationsUrl  String value for organizationsUrl.
         * @return Builder
         */
        public Builder organizationsUrl(String organizationsUrl) {
            this.organizationsUrl = organizationsUrl;
            return this;
        }

        /**
         * Setter for receivedEventsUrl.
         * @param  receivedEventsUrl  String value for receivedEventsUrl.
         * @return Builder
         */
        public Builder receivedEventsUrl(String receivedEventsUrl) {
            this.receivedEventsUrl = receivedEventsUrl;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for siteAdmin.
         * @param  siteAdmin  Boolean value for siteAdmin.
         * @return Builder
         */
        public Builder siteAdmin(Boolean siteAdmin) {
            this.siteAdmin = siteAdmin;
            return this;
        }

        /**
         * Builds a new {@link Owner2} object using the set fields.
         * @return {@link Owner2}
         */
        public Owner2 build() {
            return new Owner2(login, id, nodeId, url, reposUrl, eventsUrl, hooksUrl, issuesUrl,
                    membersUrl, publicMembersUrl, avatarUrl, description, gravatarId, htmlUrl,
                    followersUrl, followingUrl, gistsUrl, starredUrl, subscriptionsUrl,
                    organizationsUrl, receivedEventsUrl, type, siteAdmin);
        }
    }
}
