/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Changes28 type.
 */
public class Changes28 {
    private Body4 body;
    private Name name;

    /**
     * Default constructor.
     */
    public Changes28() {
    }

    /**
     * Initialization constructor.
     * @param  body  Body4 value for body.
     * @param  name  Name value for name.
     */
    public Changes28(
            Body4 body,
            Name name) {
        this.body = body;
        this.name = name;
    }

    /**
     * Getter for Body.
     * @return Returns the Body4
     */
    @JsonGetter("body")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Body4 getBody() {
        return body;
    }

    /**
     * Setter for Body.
     * @param body Value for Body4
     */
    @JsonSetter("body")
    public void setBody(Body4 body) {
        this.body = body;
    }

    /**
     * Getter for Name.
     * @return Returns the Name
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Name getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for Name
     */
    @JsonSetter("name")
    public void setName(Name name) {
        this.name = name;
    }

    /**
     * Converts this Changes28 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Changes28 [" + "body=" + body + ", name=" + name + "]";
    }

    /**
     * Builds a new {@link Changes28.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Changes28.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .body(getBody())
                .name(getName());
        return builder;
    }

    /**
     * Class to build instances of {@link Changes28}.
     */
    public static class Builder {
        private Body4 body;
        private Name name;



        /**
         * Setter for body.
         * @param  body  Body4 value for body.
         * @return Builder
         */
        public Builder body(Body4 body) {
            this.body = body;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  Name value for name.
         * @return Builder
         */
        public Builder name(Name name) {
            this.name = name;
            return this;
        }

        /**
         * Builds a new {@link Changes28} object using the set fields.
         * @return {@link Changes28}
         */
        public Changes28 build() {
            return new Changes28(body, name);
        }
    }
}
