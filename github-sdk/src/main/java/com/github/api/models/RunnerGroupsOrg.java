/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for RunnerGroupsOrg type.
 */
public class RunnerGroupsOrg {
    private double id;
    private String name;
    private String visibility;
    private boolean mDefault;
    private String selectedRepositoriesUrl;
    private String runnersUrl;
    private boolean inherited;
    private Boolean inheritedAllowsPublicRepositories;
    private boolean allowsPublicRepositories;
    private Boolean workflowRestrictionsReadOnly;
    private Boolean restrictedToWorkflows;
    private List<String> selectedWorkflows;

    /**
     * Default constructor.
     */
    public RunnerGroupsOrg() {
        workflowRestrictionsReadOnly = false;
        restrictedToWorkflows = false;
    }

    /**
     * Initialization constructor.
     * @param  id  double value for id.
     * @param  name  String value for name.
     * @param  visibility  String value for visibility.
     * @param  mDefault  boolean value for mDefault.
     * @param  runnersUrl  String value for runnersUrl.
     * @param  inherited  boolean value for inherited.
     * @param  allowsPublicRepositories  boolean value for allowsPublicRepositories.
     * @param  selectedRepositoriesUrl  String value for selectedRepositoriesUrl.
     * @param  inheritedAllowsPublicRepositories  Boolean value for
     *         inheritedAllowsPublicRepositories.
     * @param  workflowRestrictionsReadOnly  Boolean value for workflowRestrictionsReadOnly.
     * @param  restrictedToWorkflows  Boolean value for restrictedToWorkflows.
     * @param  selectedWorkflows  List of String value for selectedWorkflows.
     */
    public RunnerGroupsOrg(
            double id,
            String name,
            String visibility,
            boolean mDefault,
            String runnersUrl,
            boolean inherited,
            boolean allowsPublicRepositories,
            String selectedRepositoriesUrl,
            Boolean inheritedAllowsPublicRepositories,
            Boolean workflowRestrictionsReadOnly,
            Boolean restrictedToWorkflows,
            List<String> selectedWorkflows) {
        this.id = id;
        this.name = name;
        this.visibility = visibility;
        this.mDefault = mDefault;
        this.selectedRepositoriesUrl = selectedRepositoriesUrl;
        this.runnersUrl = runnersUrl;
        this.inherited = inherited;
        this.inheritedAllowsPublicRepositories = inheritedAllowsPublicRepositories;
        this.allowsPublicRepositories = allowsPublicRepositories;
        this.workflowRestrictionsReadOnly = workflowRestrictionsReadOnly;
        this.restrictedToWorkflows = restrictedToWorkflows;
        this.selectedWorkflows = selectedWorkflows;
    }

    /**
     * Getter for Id.
     * @return Returns the double
     */
    @JsonGetter("id")
    public double getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for double
     */
    @JsonSetter("id")
    public void setId(double id) {
        this.id = id;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Visibility.
     * @return Returns the String
     */
    @JsonGetter("visibility")
    public String getVisibility() {
        return visibility;
    }

    /**
     * Setter for Visibility.
     * @param visibility Value for String
     */
    @JsonSetter("visibility")
    public void setVisibility(String visibility) {
        this.visibility = visibility;
    }

    /**
     * Getter for Default.
     * @return Returns the boolean
     */
    @JsonGetter("default")
    public boolean getDefault() {
        return mDefault;
    }

    /**
     * Setter for Default.
     * @param mDefault Value for boolean
     */
    @JsonSetter("default")
    public void setDefault(boolean mDefault) {
        this.mDefault = mDefault;
    }

    /**
     * Getter for SelectedRepositoriesUrl.
     * Link to the selected repositories resource for this runner group. Not present unless
     * visibility was set to `selected`
     * @return Returns the String
     */
    @JsonGetter("selected_repositories_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSelectedRepositoriesUrl() {
        return selectedRepositoriesUrl;
    }

    /**
     * Setter for SelectedRepositoriesUrl.
     * Link to the selected repositories resource for this runner group. Not present unless
     * visibility was set to `selected`
     * @param selectedRepositoriesUrl Value for String
     */
    @JsonSetter("selected_repositories_url")
    public void setSelectedRepositoriesUrl(String selectedRepositoriesUrl) {
        this.selectedRepositoriesUrl = selectedRepositoriesUrl;
    }

    /**
     * Getter for RunnersUrl.
     * @return Returns the String
     */
    @JsonGetter("runners_url")
    public String getRunnersUrl() {
        return runnersUrl;
    }

    /**
     * Setter for RunnersUrl.
     * @param runnersUrl Value for String
     */
    @JsonSetter("runners_url")
    public void setRunnersUrl(String runnersUrl) {
        this.runnersUrl = runnersUrl;
    }

    /**
     * Getter for Inherited.
     * @return Returns the boolean
     */
    @JsonGetter("inherited")
    public boolean getInherited() {
        return inherited;
    }

    /**
     * Setter for Inherited.
     * @param inherited Value for boolean
     */
    @JsonSetter("inherited")
    public void setInherited(boolean inherited) {
        this.inherited = inherited;
    }

    /**
     * Getter for InheritedAllowsPublicRepositories.
     * @return Returns the Boolean
     */
    @JsonGetter("inherited_allows_public_repositories")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getInheritedAllowsPublicRepositories() {
        return inheritedAllowsPublicRepositories;
    }

    /**
     * Setter for InheritedAllowsPublicRepositories.
     * @param inheritedAllowsPublicRepositories Value for Boolean
     */
    @JsonSetter("inherited_allows_public_repositories")
    public void setInheritedAllowsPublicRepositories(Boolean inheritedAllowsPublicRepositories) {
        this.inheritedAllowsPublicRepositories = inheritedAllowsPublicRepositories;
    }

    /**
     * Getter for AllowsPublicRepositories.
     * @return Returns the boolean
     */
    @JsonGetter("allows_public_repositories")
    public boolean getAllowsPublicRepositories() {
        return allowsPublicRepositories;
    }

    /**
     * Setter for AllowsPublicRepositories.
     * @param allowsPublicRepositories Value for boolean
     */
    @JsonSetter("allows_public_repositories")
    public void setAllowsPublicRepositories(boolean allowsPublicRepositories) {
        this.allowsPublicRepositories = allowsPublicRepositories;
    }

    /**
     * Getter for WorkflowRestrictionsReadOnly.
     * If `true`, the `restricted_to_workflows` and `selected_workflows` fields cannot be modified.
     * @return Returns the Boolean
     */
    @JsonGetter("workflow_restrictions_read_only")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getWorkflowRestrictionsReadOnly() {
        return workflowRestrictionsReadOnly;
    }

    /**
     * Setter for WorkflowRestrictionsReadOnly.
     * If `true`, the `restricted_to_workflows` and `selected_workflows` fields cannot be modified.
     * @param workflowRestrictionsReadOnly Value for Boolean
     */
    @JsonSetter("workflow_restrictions_read_only")
    public void setWorkflowRestrictionsReadOnly(Boolean workflowRestrictionsReadOnly) {
        this.workflowRestrictionsReadOnly = workflowRestrictionsReadOnly;
    }

    /**
     * Getter for RestrictedToWorkflows.
     * If `true`, the runner group will be restricted to running only the workflows specified in the
     * `selected_workflows` array.
     * @return Returns the Boolean
     */
    @JsonGetter("restricted_to_workflows")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getRestrictedToWorkflows() {
        return restrictedToWorkflows;
    }

    /**
     * Setter for RestrictedToWorkflows.
     * If `true`, the runner group will be restricted to running only the workflows specified in the
     * `selected_workflows` array.
     * @param restrictedToWorkflows Value for Boolean
     */
    @JsonSetter("restricted_to_workflows")
    public void setRestrictedToWorkflows(Boolean restrictedToWorkflows) {
        this.restrictedToWorkflows = restrictedToWorkflows;
    }

    /**
     * Getter for SelectedWorkflows.
     * List of workflows the runner group should be allowed to run. This setting will be ignored
     * unless `restricted_to_workflows` is set to `true`.
     * @return Returns the List of String
     */
    @JsonGetter("selected_workflows")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getSelectedWorkflows() {
        return selectedWorkflows;
    }

    /**
     * Setter for SelectedWorkflows.
     * List of workflows the runner group should be allowed to run. This setting will be ignored
     * unless `restricted_to_workflows` is set to `true`.
     * @param selectedWorkflows Value for List of String
     */
    @JsonSetter("selected_workflows")
    public void setSelectedWorkflows(List<String> selectedWorkflows) {
        this.selectedWorkflows = selectedWorkflows;
    }

    /**
     * Converts this RunnerGroupsOrg into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "RunnerGroupsOrg [" + "id=" + id + ", name=" + name + ", visibility=" + visibility
                + ", mDefault=" + mDefault + ", runnersUrl=" + runnersUrl + ", inherited="
                + inherited + ", allowsPublicRepositories=" + allowsPublicRepositories
                + ", selectedRepositoriesUrl=" + selectedRepositoriesUrl
                + ", inheritedAllowsPublicRepositories=" + inheritedAllowsPublicRepositories
                + ", workflowRestrictionsReadOnly=" + workflowRestrictionsReadOnly
                + ", restrictedToWorkflows=" + restrictedToWorkflows + ", selectedWorkflows="
                + selectedWorkflows + "]";
    }

    /**
     * Builds a new {@link RunnerGroupsOrg.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link RunnerGroupsOrg.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, name, visibility, mDefault, runnersUrl, inherited,
                allowsPublicRepositories)
                .selectedRepositoriesUrl(getSelectedRepositoriesUrl())
                .inheritedAllowsPublicRepositories(getInheritedAllowsPublicRepositories())
                .workflowRestrictionsReadOnly(getWorkflowRestrictionsReadOnly())
                .restrictedToWorkflows(getRestrictedToWorkflows())
                .selectedWorkflows(getSelectedWorkflows());
        return builder;
    }

    /**
     * Class to build instances of {@link RunnerGroupsOrg}.
     */
    public static class Builder {
        private double id;
        private String name;
        private String visibility;
        private boolean mDefault;
        private String runnersUrl;
        private boolean inherited;
        private boolean allowsPublicRepositories;
        private String selectedRepositoriesUrl;
        private Boolean inheritedAllowsPublicRepositories;
        private Boolean workflowRestrictionsReadOnly = false;
        private Boolean restrictedToWorkflows = false;
        private List<String> selectedWorkflows;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  double value for id.
         * @param  name  String value for name.
         * @param  visibility  String value for visibility.
         * @param  mDefault  boolean value for mDefault.
         * @param  runnersUrl  String value for runnersUrl.
         * @param  inherited  boolean value for inherited.
         * @param  allowsPublicRepositories  boolean value for allowsPublicRepositories.
         */
        public Builder(double id, String name, String visibility, boolean mDefault,
                String runnersUrl, boolean inherited, boolean allowsPublicRepositories) {
            this.id = id;
            this.name = name;
            this.visibility = visibility;
            this.mDefault = mDefault;
            this.runnersUrl = runnersUrl;
            this.inherited = inherited;
            this.allowsPublicRepositories = allowsPublicRepositories;
        }

        /**
         * Setter for id.
         * @param  id  double value for id.
         * @return Builder
         */
        public Builder id(double id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for visibility.
         * @param  visibility  String value for visibility.
         * @return Builder
         */
        public Builder visibility(String visibility) {
            this.visibility = visibility;
            return this;
        }

        /**
         * Setter for mDefault.
         * @param  mDefault  boolean value for mDefault.
         * @return Builder
         */
        public Builder mDefault(boolean mDefault) {
            this.mDefault = mDefault;
            return this;
        }

        /**
         * Setter for runnersUrl.
         * @param  runnersUrl  String value for runnersUrl.
         * @return Builder
         */
        public Builder runnersUrl(String runnersUrl) {
            this.runnersUrl = runnersUrl;
            return this;
        }

        /**
         * Setter for inherited.
         * @param  inherited  boolean value for inherited.
         * @return Builder
         */
        public Builder inherited(boolean inherited) {
            this.inherited = inherited;
            return this;
        }

        /**
         * Setter for allowsPublicRepositories.
         * @param  allowsPublicRepositories  boolean value for allowsPublicRepositories.
         * @return Builder
         */
        public Builder allowsPublicRepositories(boolean allowsPublicRepositories) {
            this.allowsPublicRepositories = allowsPublicRepositories;
            return this;
        }

        /**
         * Setter for selectedRepositoriesUrl.
         * @param  selectedRepositoriesUrl  String value for selectedRepositoriesUrl.
         * @return Builder
         */
        public Builder selectedRepositoriesUrl(String selectedRepositoriesUrl) {
            this.selectedRepositoriesUrl = selectedRepositoriesUrl;
            return this;
        }

        /**
         * Setter for inheritedAllowsPublicRepositories.
         * @param  inheritedAllowsPublicRepositories  Boolean value for
         *         inheritedAllowsPublicRepositories.
         * @return Builder
         */
        public Builder inheritedAllowsPublicRepositories(
                Boolean inheritedAllowsPublicRepositories) {
            this.inheritedAllowsPublicRepositories = inheritedAllowsPublicRepositories;
            return this;
        }

        /**
         * Setter for workflowRestrictionsReadOnly.
         * @param  workflowRestrictionsReadOnly  Boolean value for workflowRestrictionsReadOnly.
         * @return Builder
         */
        public Builder workflowRestrictionsReadOnly(Boolean workflowRestrictionsReadOnly) {
            this.workflowRestrictionsReadOnly = workflowRestrictionsReadOnly;
            return this;
        }

        /**
         * Setter for restrictedToWorkflows.
         * @param  restrictedToWorkflows  Boolean value for restrictedToWorkflows.
         * @return Builder
         */
        public Builder restrictedToWorkflows(Boolean restrictedToWorkflows) {
            this.restrictedToWorkflows = restrictedToWorkflows;
            return this;
        }

        /**
         * Setter for selectedWorkflows.
         * @param  selectedWorkflows  List of String value for selectedWorkflows.
         * @return Builder
         */
        public Builder selectedWorkflows(List<String> selectedWorkflows) {
            this.selectedWorkflows = selectedWorkflows;
            return this;
        }

        /**
         * Builds a new {@link RunnerGroupsOrg} object using the set fields.
         * @return {@link RunnerGroupsOrg}
         */
        public RunnerGroupsOrg build() {
            return new RunnerGroupsOrg(id, name, visibility, mDefault, runnersUrl, inherited,
                    allowsPublicRepositories, selectedRepositoriesUrl,
                    inheritedAllowsPublicRepositories, workflowRestrictionsReadOnly,
                    restrictedToWorkflows, selectedWorkflows);
        }
    }
}
