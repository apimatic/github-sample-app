/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for PendingDeployment type.
 */
public class PendingDeployment {
    private Environment2 environment;
    private int waitTimer;
    private LocalDateTime waitTimerStartedAt;
    private boolean currentUserCanApprove;
    private List<Reviewer> reviewers;

    /**
     * Default constructor.
     */
    public PendingDeployment() {
    }

    /**
     * Initialization constructor.
     * @param  environment  Environment2 value for environment.
     * @param  waitTimer  int value for waitTimer.
     * @param  waitTimerStartedAt  LocalDateTime value for waitTimerStartedAt.
     * @param  currentUserCanApprove  boolean value for currentUserCanApprove.
     * @param  reviewers  List of Reviewer value for reviewers.
     */
    public PendingDeployment(
            Environment2 environment,
            int waitTimer,
            LocalDateTime waitTimerStartedAt,
            boolean currentUserCanApprove,
            List<Reviewer> reviewers) {
        this.environment = environment;
        this.waitTimer = waitTimer;
        this.waitTimerStartedAt = waitTimerStartedAt;
        this.currentUserCanApprove = currentUserCanApprove;
        this.reviewers = reviewers;
    }

    /**
     * Getter for Environment.
     * @return Returns the Environment2
     */
    @JsonGetter("environment")
    public Environment2 getEnvironment() {
        return environment;
    }

    /**
     * Setter for Environment.
     * @param environment Value for Environment2
     */
    @JsonSetter("environment")
    public void setEnvironment(Environment2 environment) {
        this.environment = environment;
    }

    /**
     * Getter for WaitTimer.
     * The set duration of the wait timer
     * @return Returns the int
     */
    @JsonGetter("wait_timer")
    public int getWaitTimer() {
        return waitTimer;
    }

    /**
     * Setter for WaitTimer.
     * The set duration of the wait timer
     * @param waitTimer Value for int
     */
    @JsonSetter("wait_timer")
    public void setWaitTimer(int waitTimer) {
        this.waitTimer = waitTimer;
    }

    /**
     * Getter for WaitTimerStartedAt.
     * The time that the wait timer began.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("wait_timer_started_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getWaitTimerStartedAt() {
        return waitTimerStartedAt;
    }

    /**
     * Setter for WaitTimerStartedAt.
     * The time that the wait timer began.
     * @param waitTimerStartedAt Value for LocalDateTime
     */
    @JsonSetter("wait_timer_started_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setWaitTimerStartedAt(LocalDateTime waitTimerStartedAt) {
        this.waitTimerStartedAt = waitTimerStartedAt;
    }

    /**
     * Getter for CurrentUserCanApprove.
     * Whether the currently authenticated user can approve the deployment
     * @return Returns the boolean
     */
    @JsonGetter("current_user_can_approve")
    public boolean getCurrentUserCanApprove() {
        return currentUserCanApprove;
    }

    /**
     * Setter for CurrentUserCanApprove.
     * Whether the currently authenticated user can approve the deployment
     * @param currentUserCanApprove Value for boolean
     */
    @JsonSetter("current_user_can_approve")
    public void setCurrentUserCanApprove(boolean currentUserCanApprove) {
        this.currentUserCanApprove = currentUserCanApprove;
    }

    /**
     * Getter for Reviewers.
     * The people or teams that may approve jobs that reference the environment. You can list up to
     * six users or teams as reviewers. The reviewers must have at least read access to the
     * repository. Only one of the required reviewers needs to approve the job for it to proceed.
     * @return Returns the List of Reviewer
     */
    @JsonGetter("reviewers")
    public List<Reviewer> getReviewers() {
        return reviewers;
    }

    /**
     * Setter for Reviewers.
     * The people or teams that may approve jobs that reference the environment. You can list up to
     * six users or teams as reviewers. The reviewers must have at least read access to the
     * repository. Only one of the required reviewers needs to approve the job for it to proceed.
     * @param reviewers Value for List of Reviewer
     */
    @JsonSetter("reviewers")
    public void setReviewers(List<Reviewer> reviewers) {
        this.reviewers = reviewers;
    }

    /**
     * Converts this PendingDeployment into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PendingDeployment [" + "environment=" + environment + ", waitTimer=" + waitTimer
                + ", waitTimerStartedAt=" + waitTimerStartedAt + ", currentUserCanApprove="
                + currentUserCanApprove + ", reviewers=" + reviewers + "]";
    }

    /**
     * Builds a new {@link PendingDeployment.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PendingDeployment.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(environment, waitTimer, waitTimerStartedAt,
                currentUserCanApprove, reviewers);
        return builder;
    }

    /**
     * Class to build instances of {@link PendingDeployment}.
     */
    public static class Builder {
        private Environment2 environment;
        private int waitTimer;
        private LocalDateTime waitTimerStartedAt;
        private boolean currentUserCanApprove;
        private List<Reviewer> reviewers;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  environment  Environment2 value for environment.
         * @param  waitTimer  int value for waitTimer.
         * @param  waitTimerStartedAt  LocalDateTime value for waitTimerStartedAt.
         * @param  currentUserCanApprove  boolean value for currentUserCanApprove.
         * @param  reviewers  List of Reviewer value for reviewers.
         */
        public Builder(Environment2 environment, int waitTimer, LocalDateTime waitTimerStartedAt,
                boolean currentUserCanApprove, List<Reviewer> reviewers) {
            this.environment = environment;
            this.waitTimer = waitTimer;
            this.waitTimerStartedAt = waitTimerStartedAt;
            this.currentUserCanApprove = currentUserCanApprove;
            this.reviewers = reviewers;
        }

        /**
         * Setter for environment.
         * @param  environment  Environment2 value for environment.
         * @return Builder
         */
        public Builder environment(Environment2 environment) {
            this.environment = environment;
            return this;
        }

        /**
         * Setter for waitTimer.
         * @param  waitTimer  int value for waitTimer.
         * @return Builder
         */
        public Builder waitTimer(int waitTimer) {
            this.waitTimer = waitTimer;
            return this;
        }

        /**
         * Setter for waitTimerStartedAt.
         * @param  waitTimerStartedAt  LocalDateTime value for waitTimerStartedAt.
         * @return Builder
         */
        public Builder waitTimerStartedAt(LocalDateTime waitTimerStartedAt) {
            this.waitTimerStartedAt = waitTimerStartedAt;
            return this;
        }

        /**
         * Setter for currentUserCanApprove.
         * @param  currentUserCanApprove  boolean value for currentUserCanApprove.
         * @return Builder
         */
        public Builder currentUserCanApprove(boolean currentUserCanApprove) {
            this.currentUserCanApprove = currentUserCanApprove;
            return this;
        }

        /**
         * Setter for reviewers.
         * @param  reviewers  List of Reviewer value for reviewers.
         * @return Builder
         */
        public Builder reviewers(List<Reviewer> reviewers) {
            this.reviewers = reviewers;
            return this;
        }

        /**
         * Builds a new {@link PendingDeployment} object using the set fields.
         * @return {@link PendingDeployment}
         */
        public PendingDeployment build() {
            return new PendingDeployment(environment, waitTimer, waitTimerStartedAt,
                    currentUserCanApprove, reviewers);
        }
    }
}
