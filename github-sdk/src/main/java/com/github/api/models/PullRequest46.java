/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import com.github.api.models.containers.PullRequest46Assignees;
import com.github.api.models.containers.PullRequest46RequestedReviewers;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for PullRequest46 type.
 */
public class PullRequest46 {
    private Links2 links;
    private Object activeLockReason;
    private Integer additions;
    private Object assignee;
    private List<PullRequest46Assignees> assignees;
    private AuthorAssociationEnum authorAssociation;
    private Object autoMerge;
    private Base29 base;
    private String body;
    private Integer changedFiles;
    private LocalDateTime closedAt;
    private Integer comments;
    private String commentsUrl;
    private Integer commits;
    private String commitsUrl;
    private LocalDateTime createdAt;
    private Integer deletions;
    private String diffUrl;
    private boolean draft;
    private Head9 head;
    private String htmlUrl;
    private int id;
    private String issueUrl;
    private List<Label10> labels;
    private boolean locked;
    private Boolean maintainerCanModify;
    private String mergeCommitSha;
    private OptionalNullable<Boolean> mergeable;
    private String mergeableState;
    private OptionalNullable<Boolean> merged;
    private LocalDateTime mergedAt;
    private Object mergedBy;
    private Object milestone;
    private String nodeId;
    private int number;
    private String patchUrl;
    private OptionalNullable<Boolean> rebaseable;
    private List<PullRequest46RequestedReviewers> requestedReviewers;
    private List<Team6> requestedTeams;
    private String reviewCommentUrl;
    private Integer reviewComments;
    private String reviewCommentsUrl;
    private State13Enum state;
    private String statusesUrl;
    private String title;
    private LocalDateTime updatedAt;
    private String url;
    private Object user;

    /**
     * Default constructor.
     */
    public PullRequest46() {
    }

    /**
     * Initialization constructor.
     * @param  links  Links2 value for links.
     * @param  activeLockReason  Object value for activeLockReason.
     * @param  assignee  Object value for assignee.
     * @param  assignees  List of PullRequest46Assignees value for assignees.
     * @param  authorAssociation  AuthorAssociationEnum value for authorAssociation.
     * @param  autoMerge  Object value for autoMerge.
     * @param  base  Base29 value for base.
     * @param  body  String value for body.
     * @param  closedAt  LocalDateTime value for closedAt.
     * @param  commentsUrl  String value for commentsUrl.
     * @param  commitsUrl  String value for commitsUrl.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  diffUrl  String value for diffUrl.
     * @param  draft  boolean value for draft.
     * @param  head  Head9 value for head.
     * @param  htmlUrl  String value for htmlUrl.
     * @param  id  int value for id.
     * @param  issueUrl  String value for issueUrl.
     * @param  labels  List of Label10 value for labels.
     * @param  locked  boolean value for locked.
     * @param  mergeCommitSha  String value for mergeCommitSha.
     * @param  mergedAt  LocalDateTime value for mergedAt.
     * @param  milestone  Object value for milestone.
     * @param  nodeId  String value for nodeId.
     * @param  number  int value for number.
     * @param  patchUrl  String value for patchUrl.
     * @param  requestedReviewers  List of PullRequest46RequestedReviewers value for
     *         requestedReviewers.
     * @param  requestedTeams  List of Team6 value for requestedTeams.
     * @param  reviewCommentUrl  String value for reviewCommentUrl.
     * @param  reviewCommentsUrl  String value for reviewCommentsUrl.
     * @param  state  State13Enum value for state.
     * @param  statusesUrl  String value for statusesUrl.
     * @param  title  String value for title.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  url  String value for url.
     * @param  user  Object value for user.
     * @param  additions  Integer value for additions.
     * @param  changedFiles  Integer value for changedFiles.
     * @param  comments  Integer value for comments.
     * @param  commits  Integer value for commits.
     * @param  deletions  Integer value for deletions.
     * @param  maintainerCanModify  Boolean value for maintainerCanModify.
     * @param  mergeable  Boolean value for mergeable.
     * @param  mergeableState  String value for mergeableState.
     * @param  merged  Boolean value for merged.
     * @param  mergedBy  Object value for mergedBy.
     * @param  rebaseable  Boolean value for rebaseable.
     * @param  reviewComments  Integer value for reviewComments.
     */
    public PullRequest46(
            Links2 links,
            Object activeLockReason,
            Object assignee,
            List<PullRequest46Assignees> assignees,
            AuthorAssociationEnum authorAssociation,
            Object autoMerge,
            Base29 base,
            String body,
            LocalDateTime closedAt,
            String commentsUrl,
            String commitsUrl,
            LocalDateTime createdAt,
            String diffUrl,
            boolean draft,
            Head9 head,
            String htmlUrl,
            int id,
            String issueUrl,
            List<Label10> labels,
            boolean locked,
            String mergeCommitSha,
            LocalDateTime mergedAt,
            Object milestone,
            String nodeId,
            int number,
            String patchUrl,
            List<PullRequest46RequestedReviewers> requestedReviewers,
            List<Team6> requestedTeams,
            String reviewCommentUrl,
            String reviewCommentsUrl,
            State13Enum state,
            String statusesUrl,
            String title,
            LocalDateTime updatedAt,
            String url,
            Object user,
            Integer additions,
            Integer changedFiles,
            Integer comments,
            Integer commits,
            Integer deletions,
            Boolean maintainerCanModify,
            Boolean mergeable,
            String mergeableState,
            Boolean merged,
            Object mergedBy,
            Boolean rebaseable,
            Integer reviewComments) {
        this.links = links;
        this.activeLockReason = activeLockReason;
        this.additions = additions;
        this.assignee = assignee;
        this.assignees = assignees;
        this.authorAssociation = authorAssociation;
        this.autoMerge = autoMerge;
        this.base = base;
        this.body = body;
        this.changedFiles = changedFiles;
        this.closedAt = closedAt;
        this.comments = comments;
        this.commentsUrl = commentsUrl;
        this.commits = commits;
        this.commitsUrl = commitsUrl;
        this.createdAt = createdAt;
        this.deletions = deletions;
        this.diffUrl = diffUrl;
        this.draft = draft;
        this.head = head;
        this.htmlUrl = htmlUrl;
        this.id = id;
        this.issueUrl = issueUrl;
        this.labels = labels;
        this.locked = locked;
        this.maintainerCanModify = maintainerCanModify;
        this.mergeCommitSha = mergeCommitSha;
        this.mergeable = OptionalNullable.of(mergeable);
        this.mergeableState = mergeableState;
        this.merged = OptionalNullable.of(merged);
        this.mergedAt = mergedAt;
        this.mergedBy = mergedBy;
        this.milestone = milestone;
        this.nodeId = nodeId;
        this.number = number;
        this.patchUrl = patchUrl;
        this.rebaseable = OptionalNullable.of(rebaseable);
        this.requestedReviewers = requestedReviewers;
        this.requestedTeams = requestedTeams;
        this.reviewCommentUrl = reviewCommentUrl;
        this.reviewComments = reviewComments;
        this.reviewCommentsUrl = reviewCommentsUrl;
        this.state = state;
        this.statusesUrl = statusesUrl;
        this.title = title;
        this.updatedAt = updatedAt;
        this.url = url;
        this.user = user;
    }

    /**
     * Internal initialization constructor.
     */
    protected PullRequest46(Links2 links, Object activeLockReason, Object assignee,
            List<PullRequest46Assignees> assignees, AuthorAssociationEnum authorAssociation,
            Object autoMerge, Base29 base, String body, LocalDateTime closedAt, String commentsUrl,
            String commitsUrl, LocalDateTime createdAt, String diffUrl, boolean draft, Head9 head,
            String htmlUrl, int id, String issueUrl, List<Label10> labels, boolean locked,
            String mergeCommitSha, LocalDateTime mergedAt, Object milestone, String nodeId,
            int number, String patchUrl, List<PullRequest46RequestedReviewers> requestedReviewers,
            List<Team6> requestedTeams, String reviewCommentUrl, String reviewCommentsUrl,
            State13Enum state, String statusesUrl, String title, LocalDateTime updatedAt,
            String url, Object user, Integer additions, Integer changedFiles, Integer comments,
            Integer commits, Integer deletions, Boolean maintainerCanModify,
            OptionalNullable<Boolean> mergeable, String mergeableState,
            OptionalNullable<Boolean> merged, Object mergedBy, OptionalNullable<Boolean> rebaseable,
            Integer reviewComments) {
        this.links = links;
        this.activeLockReason = activeLockReason;
        this.additions = additions;
        this.assignee = assignee;
        this.assignees = assignees;
        this.authorAssociation = authorAssociation;
        this.autoMerge = autoMerge;
        this.base = base;
        this.body = body;
        this.changedFiles = changedFiles;
        this.closedAt = closedAt;
        this.comments = comments;
        this.commentsUrl = commentsUrl;
        this.commits = commits;
        this.commitsUrl = commitsUrl;
        this.createdAt = createdAt;
        this.deletions = deletions;
        this.diffUrl = diffUrl;
        this.draft = draft;
        this.head = head;
        this.htmlUrl = htmlUrl;
        this.id = id;
        this.issueUrl = issueUrl;
        this.labels = labels;
        this.locked = locked;
        this.maintainerCanModify = maintainerCanModify;
        this.mergeCommitSha = mergeCommitSha;
        this.mergeable = mergeable;
        this.mergeableState = mergeableState;
        this.merged = merged;
        this.mergedAt = mergedAt;
        this.mergedBy = mergedBy;
        this.milestone = milestone;
        this.nodeId = nodeId;
        this.number = number;
        this.patchUrl = patchUrl;
        this.rebaseable = rebaseable;
        this.requestedReviewers = requestedReviewers;
        this.requestedTeams = requestedTeams;
        this.reviewCommentUrl = reviewCommentUrl;
        this.reviewComments = reviewComments;
        this.reviewCommentsUrl = reviewCommentsUrl;
        this.state = state;
        this.statusesUrl = statusesUrl;
        this.title = title;
        this.updatedAt = updatedAt;
        this.url = url;
        this.user = user;
    }

    /**
     * Getter for Links.
     * @return Returns the Links2
     */
    @JsonGetter("_links")
    public Links2 getLinks() {
        return links;
    }

    /**
     * Setter for Links.
     * @param links Value for Links2
     */
    @JsonSetter("_links")
    public void setLinks(Links2 links) {
        this.links = links;
    }

    /**
     * Getter for ActiveLockReason.
     * @return Returns the Object
     */
    @JsonGetter("active_lock_reason")
    public Object getActiveLockReason() {
        return activeLockReason;
    }

    /**
     * Setter for ActiveLockReason.
     * @param activeLockReason Value for Object
     */
    @JsonSetter("active_lock_reason")
    public void setActiveLockReason(Object activeLockReason) {
        this.activeLockReason = activeLockReason;
    }

    /**
     * Getter for Additions.
     * @return Returns the Integer
     */
    @JsonGetter("additions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAdditions() {
        return additions;
    }

    /**
     * Setter for Additions.
     * @param additions Value for Integer
     */
    @JsonSetter("additions")
    public void setAdditions(Integer additions) {
        this.additions = additions;
    }

    /**
     * Getter for Assignee.
     * @return Returns the Object
     */
    @JsonGetter("assignee")
    public Object getAssignee() {
        return assignee;
    }

    /**
     * Setter for Assignee.
     * @param assignee Value for Object
     */
    @JsonSetter("assignee")
    public void setAssignee(Object assignee) {
        this.assignee = assignee;
    }

    /**
     * Getter for Assignees.
     * @return Returns the List of PullRequest46Assignees
     */
    @JsonGetter("assignees")
    public List<PullRequest46Assignees> getAssignees() {
        return assignees;
    }

    /**
     * Setter for Assignees.
     * @param assignees Value for List of PullRequest46Assignees
     */
    @JsonSetter("assignees")
    public void setAssignees(List<PullRequest46Assignees> assignees) {
        this.assignees = assignees;
    }

    /**
     * Getter for AuthorAssociation.
     * @return Returns the AuthorAssociationEnum
     */
    @JsonGetter("author_association")
    public AuthorAssociationEnum getAuthorAssociation() {
        return authorAssociation;
    }

    /**
     * Setter for AuthorAssociation.
     * @param authorAssociation Value for AuthorAssociationEnum
     */
    @JsonSetter("author_association")
    public void setAuthorAssociation(AuthorAssociationEnum authorAssociation) {
        this.authorAssociation = authorAssociation;
    }

    /**
     * Getter for AutoMerge.
     * @return Returns the Object
     */
    @JsonGetter("auto_merge")
    public Object getAutoMerge() {
        return autoMerge;
    }

    /**
     * Setter for AutoMerge.
     * @param autoMerge Value for Object
     */
    @JsonSetter("auto_merge")
    public void setAutoMerge(Object autoMerge) {
        this.autoMerge = autoMerge;
    }

    /**
     * Getter for Base.
     * @return Returns the Base29
     */
    @JsonGetter("base")
    public Base29 getBase() {
        return base;
    }

    /**
     * Setter for Base.
     * @param base Value for Base29
     */
    @JsonSetter("base")
    public void setBase(Base29 base) {
        this.base = base;
    }

    /**
     * Getter for Body.
     * @return Returns the String
     */
    @JsonGetter("body")
    public String getBody() {
        return body;
    }

    /**
     * Setter for Body.
     * @param body Value for String
     */
    @JsonSetter("body")
    public void setBody(String body) {
        this.body = body;
    }

    /**
     * Getter for ChangedFiles.
     * @return Returns the Integer
     */
    @JsonGetter("changed_files")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getChangedFiles() {
        return changedFiles;
    }

    /**
     * Setter for ChangedFiles.
     * @param changedFiles Value for Integer
     */
    @JsonSetter("changed_files")
    public void setChangedFiles(Integer changedFiles) {
        this.changedFiles = changedFiles;
    }

    /**
     * Getter for ClosedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("closed_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getClosedAt() {
        return closedAt;
    }

    /**
     * Setter for ClosedAt.
     * @param closedAt Value for LocalDateTime
     */
    @JsonSetter("closed_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setClosedAt(LocalDateTime closedAt) {
        this.closedAt = closedAt;
    }

    /**
     * Getter for Comments.
     * @return Returns the Integer
     */
    @JsonGetter("comments")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getComments() {
        return comments;
    }

    /**
     * Setter for Comments.
     * @param comments Value for Integer
     */
    @JsonSetter("comments")
    public void setComments(Integer comments) {
        this.comments = comments;
    }

    /**
     * Getter for CommentsUrl.
     * @return Returns the String
     */
    @JsonGetter("comments_url")
    public String getCommentsUrl() {
        return commentsUrl;
    }

    /**
     * Setter for CommentsUrl.
     * @param commentsUrl Value for String
     */
    @JsonSetter("comments_url")
    public void setCommentsUrl(String commentsUrl) {
        this.commentsUrl = commentsUrl;
    }

    /**
     * Getter for Commits.
     * @return Returns the Integer
     */
    @JsonGetter("commits")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCommits() {
        return commits;
    }

    /**
     * Setter for Commits.
     * @param commits Value for Integer
     */
    @JsonSetter("commits")
    public void setCommits(Integer commits) {
        this.commits = commits;
    }

    /**
     * Getter for CommitsUrl.
     * @return Returns the String
     */
    @JsonGetter("commits_url")
    public String getCommitsUrl() {
        return commitsUrl;
    }

    /**
     * Setter for CommitsUrl.
     * @param commitsUrl Value for String
     */
    @JsonSetter("commits_url")
    public void setCommitsUrl(String commitsUrl) {
        this.commitsUrl = commitsUrl;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for Deletions.
     * @return Returns the Integer
     */
    @JsonGetter("deletions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getDeletions() {
        return deletions;
    }

    /**
     * Setter for Deletions.
     * @param deletions Value for Integer
     */
    @JsonSetter("deletions")
    public void setDeletions(Integer deletions) {
        this.deletions = deletions;
    }

    /**
     * Getter for DiffUrl.
     * @return Returns the String
     */
    @JsonGetter("diff_url")
    public String getDiffUrl() {
        return diffUrl;
    }

    /**
     * Setter for DiffUrl.
     * @param diffUrl Value for String
     */
    @JsonSetter("diff_url")
    public void setDiffUrl(String diffUrl) {
        this.diffUrl = diffUrl;
    }

    /**
     * Getter for Draft.
     * Indicates whether or not the pull request is a draft.
     * @return Returns the boolean
     */
    @JsonGetter("draft")
    public boolean getDraft() {
        return draft;
    }

    /**
     * Setter for Draft.
     * Indicates whether or not the pull request is a draft.
     * @param draft Value for boolean
     */
    @JsonSetter("draft")
    public void setDraft(boolean draft) {
        this.draft = draft;
    }

    /**
     * Getter for Head.
     * @return Returns the Head9
     */
    @JsonGetter("head")
    public Head9 getHead() {
        return head;
    }

    /**
     * Setter for Head.
     * @param head Value for Head9
     */
    @JsonSetter("head")
    public void setHead(Head9 head) {
        this.head = head;
    }

    /**
     * Getter for HtmlUrl.
     * @return Returns the String
     */
    @JsonGetter("html_url")
    public String getHtmlUrl() {
        return htmlUrl;
    }

    /**
     * Setter for HtmlUrl.
     * @param htmlUrl Value for String
     */
    @JsonSetter("html_url")
    public void setHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
    }

    /**
     * Getter for Id.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for IssueUrl.
     * @return Returns the String
     */
    @JsonGetter("issue_url")
    public String getIssueUrl() {
        return issueUrl;
    }

    /**
     * Setter for IssueUrl.
     * @param issueUrl Value for String
     */
    @JsonSetter("issue_url")
    public void setIssueUrl(String issueUrl) {
        this.issueUrl = issueUrl;
    }

    /**
     * Getter for Labels.
     * @return Returns the List of Label10
     */
    @JsonGetter("labels")
    public List<Label10> getLabels() {
        return labels;
    }

    /**
     * Setter for Labels.
     * @param labels Value for List of Label10
     */
    @JsonSetter("labels")
    public void setLabels(List<Label10> labels) {
        this.labels = labels;
    }

    /**
     * Getter for Locked.
     * @return Returns the boolean
     */
    @JsonGetter("locked")
    public boolean getLocked() {
        return locked;
    }

    /**
     * Setter for Locked.
     * @param locked Value for boolean
     */
    @JsonSetter("locked")
    public void setLocked(boolean locked) {
        this.locked = locked;
    }

    /**
     * Getter for MaintainerCanModify.
     * Indicates whether maintainers can modify the pull request.
     * @return Returns the Boolean
     */
    @JsonGetter("maintainer_can_modify")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getMaintainerCanModify() {
        return maintainerCanModify;
    }

    /**
     * Setter for MaintainerCanModify.
     * Indicates whether maintainers can modify the pull request.
     * @param maintainerCanModify Value for Boolean
     */
    @JsonSetter("maintainer_can_modify")
    public void setMaintainerCanModify(Boolean maintainerCanModify) {
        this.maintainerCanModify = maintainerCanModify;
    }

    /**
     * Getter for MergeCommitSha.
     * @return Returns the String
     */
    @JsonGetter("merge_commit_sha")
    public String getMergeCommitSha() {
        return mergeCommitSha;
    }

    /**
     * Setter for MergeCommitSha.
     * @param mergeCommitSha Value for String
     */
    @JsonSetter("merge_commit_sha")
    public void setMergeCommitSha(String mergeCommitSha) {
        this.mergeCommitSha = mergeCommitSha;
    }

    /**
     * Internal Getter for Mergeable.
     * @return Returns the Internal Boolean
     */
    @JsonGetter("mergeable")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Boolean> internalGetMergeable() {
        return this.mergeable;
    }

    /**
     * Getter for Mergeable.
     * @return Returns the Boolean
     */
    public Boolean getMergeable() {
        return OptionalNullable.getFrom(mergeable);
    }

    /**
     * Setter for Mergeable.
     * @param mergeable Value for Boolean
     */
    @JsonSetter("mergeable")
    public void setMergeable(Boolean mergeable) {
        this.mergeable = OptionalNullable.of(mergeable);
    }

    /**
     * UnSetter for Mergeable.
     */
    public void unsetMergeable() {
        mergeable = null;
    }

    /**
     * Getter for MergeableState.
     * @return Returns the String
     */
    @JsonGetter("mergeable_state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMergeableState() {
        return mergeableState;
    }

    /**
     * Setter for MergeableState.
     * @param mergeableState Value for String
     */
    @JsonSetter("mergeable_state")
    public void setMergeableState(String mergeableState) {
        this.mergeableState = mergeableState;
    }

    /**
     * Internal Getter for Merged.
     * @return Returns the Internal Boolean
     */
    @JsonGetter("merged")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Boolean> internalGetMerged() {
        return this.merged;
    }

    /**
     * Getter for Merged.
     * @return Returns the Boolean
     */
    public Boolean getMerged() {
        return OptionalNullable.getFrom(merged);
    }

    /**
     * Setter for Merged.
     * @param merged Value for Boolean
     */
    @JsonSetter("merged")
    public void setMerged(Boolean merged) {
        this.merged = OptionalNullable.of(merged);
    }

    /**
     * UnSetter for Merged.
     */
    public void unsetMerged() {
        merged = null;
    }

    /**
     * Getter for MergedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("merged_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getMergedAt() {
        return mergedAt;
    }

    /**
     * Setter for MergedAt.
     * @param mergedAt Value for LocalDateTime
     */
    @JsonSetter("merged_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setMergedAt(LocalDateTime mergedAt) {
        this.mergedAt = mergedAt;
    }

    /**
     * Getter for MergedBy.
     * @return Returns the Object
     */
    @JsonGetter("merged_by")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getMergedBy() {
        return mergedBy;
    }

    /**
     * Setter for MergedBy.
     * @param mergedBy Value for Object
     */
    @JsonSetter("merged_by")
    public void setMergedBy(Object mergedBy) {
        this.mergedBy = mergedBy;
    }

    /**
     * Getter for Milestone.
     * @return Returns the Object
     */
    @JsonGetter("milestone")
    public Object getMilestone() {
        return milestone;
    }

    /**
     * Setter for Milestone.
     * @param milestone Value for Object
     */
    @JsonSetter("milestone")
    public void setMilestone(Object milestone) {
        this.milestone = milestone;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for Number.
     * Number uniquely identifying the pull request within its repository.
     * @return Returns the int
     */
    @JsonGetter("number")
    public int getNumber() {
        return number;
    }

    /**
     * Setter for Number.
     * Number uniquely identifying the pull request within its repository.
     * @param number Value for int
     */
    @JsonSetter("number")
    public void setNumber(int number) {
        this.number = number;
    }

    /**
     * Getter for PatchUrl.
     * @return Returns the String
     */
    @JsonGetter("patch_url")
    public String getPatchUrl() {
        return patchUrl;
    }

    /**
     * Setter for PatchUrl.
     * @param patchUrl Value for String
     */
    @JsonSetter("patch_url")
    public void setPatchUrl(String patchUrl) {
        this.patchUrl = patchUrl;
    }

    /**
     * Internal Getter for Rebaseable.
     * @return Returns the Internal Boolean
     */
    @JsonGetter("rebaseable")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Boolean> internalGetRebaseable() {
        return this.rebaseable;
    }

    /**
     * Getter for Rebaseable.
     * @return Returns the Boolean
     */
    public Boolean getRebaseable() {
        return OptionalNullable.getFrom(rebaseable);
    }

    /**
     * Setter for Rebaseable.
     * @param rebaseable Value for Boolean
     */
    @JsonSetter("rebaseable")
    public void setRebaseable(Boolean rebaseable) {
        this.rebaseable = OptionalNullable.of(rebaseable);
    }

    /**
     * UnSetter for Rebaseable.
     */
    public void unsetRebaseable() {
        rebaseable = null;
    }

    /**
     * Getter for RequestedReviewers.
     * @return Returns the List of PullRequest46RequestedReviewers
     */
    @JsonGetter("requested_reviewers")
    public List<PullRequest46RequestedReviewers> getRequestedReviewers() {
        return requestedReviewers;
    }

    /**
     * Setter for RequestedReviewers.
     * @param requestedReviewers Value for List of PullRequest46RequestedReviewers
     */
    @JsonSetter("requested_reviewers")
    public void setRequestedReviewers(List<PullRequest46RequestedReviewers> requestedReviewers) {
        this.requestedReviewers = requestedReviewers;
    }

    /**
     * Getter for RequestedTeams.
     * @return Returns the List of Team6
     */
    @JsonGetter("requested_teams")
    public List<Team6> getRequestedTeams() {
        return requestedTeams;
    }

    /**
     * Setter for RequestedTeams.
     * @param requestedTeams Value for List of Team6
     */
    @JsonSetter("requested_teams")
    public void setRequestedTeams(List<Team6> requestedTeams) {
        this.requestedTeams = requestedTeams;
    }

    /**
     * Getter for ReviewCommentUrl.
     * @return Returns the String
     */
    @JsonGetter("review_comment_url")
    public String getReviewCommentUrl() {
        return reviewCommentUrl;
    }

    /**
     * Setter for ReviewCommentUrl.
     * @param reviewCommentUrl Value for String
     */
    @JsonSetter("review_comment_url")
    public void setReviewCommentUrl(String reviewCommentUrl) {
        this.reviewCommentUrl = reviewCommentUrl;
    }

    /**
     * Getter for ReviewComments.
     * @return Returns the Integer
     */
    @JsonGetter("review_comments")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getReviewComments() {
        return reviewComments;
    }

    /**
     * Setter for ReviewComments.
     * @param reviewComments Value for Integer
     */
    @JsonSetter("review_comments")
    public void setReviewComments(Integer reviewComments) {
        this.reviewComments = reviewComments;
    }

    /**
     * Getter for ReviewCommentsUrl.
     * @return Returns the String
     */
    @JsonGetter("review_comments_url")
    public String getReviewCommentsUrl() {
        return reviewCommentsUrl;
    }

    /**
     * Setter for ReviewCommentsUrl.
     * @param reviewCommentsUrl Value for String
     */
    @JsonSetter("review_comments_url")
    public void setReviewCommentsUrl(String reviewCommentsUrl) {
        this.reviewCommentsUrl = reviewCommentsUrl;
    }

    /**
     * Getter for State.
     * @return Returns the State13Enum
     */
    @JsonGetter("state")
    public State13Enum getState() {
        return state;
    }

    /**
     * Setter for State.
     * @param state Value for State13Enum
     */
    @JsonSetter("state")
    public void setState(State13Enum state) {
        this.state = state;
    }

    /**
     * Getter for StatusesUrl.
     * @return Returns the String
     */
    @JsonGetter("statuses_url")
    public String getStatusesUrl() {
        return statusesUrl;
    }

    /**
     * Setter for StatusesUrl.
     * @param statusesUrl Value for String
     */
    @JsonSetter("statuses_url")
    public void setStatusesUrl(String statusesUrl) {
        this.statusesUrl = statusesUrl;
    }

    /**
     * Getter for Title.
     * The title of the pull request.
     * @return Returns the String
     */
    @JsonGetter("title")
    public String getTitle() {
        return title;
    }

    /**
     * Setter for Title.
     * The title of the pull request.
     * @param title Value for String
     */
    @JsonSetter("title")
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for User.
     * @return Returns the Object
     */
    @JsonGetter("user")
    public Object getUser() {
        return user;
    }

    /**
     * Setter for User.
     * @param user Value for Object
     */
    @JsonSetter("user")
    public void setUser(Object user) {
        this.user = user;
    }

    /**
     * Converts this PullRequest46 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PullRequest46 [" + "links=" + links + ", activeLockReason=" + activeLockReason
                + ", assignee=" + assignee + ", assignees=" + assignees + ", authorAssociation="
                + authorAssociation + ", autoMerge=" + autoMerge + ", base=" + base + ", body="
                + body + ", closedAt=" + closedAt + ", commentsUrl=" + commentsUrl + ", commitsUrl="
                + commitsUrl + ", createdAt=" + createdAt + ", diffUrl=" + diffUrl + ", draft="
                + draft + ", head=" + head + ", htmlUrl=" + htmlUrl + ", id=" + id + ", issueUrl="
                + issueUrl + ", labels=" + labels + ", locked=" + locked + ", mergeCommitSha="
                + mergeCommitSha + ", mergedAt=" + mergedAt + ", milestone=" + milestone
                + ", nodeId=" + nodeId + ", number=" + number + ", patchUrl=" + patchUrl
                + ", requestedReviewers=" + requestedReviewers + ", requestedTeams="
                + requestedTeams + ", reviewCommentUrl=" + reviewCommentUrl + ", reviewCommentsUrl="
                + reviewCommentsUrl + ", state=" + state + ", statusesUrl=" + statusesUrl
                + ", title=" + title + ", updatedAt=" + updatedAt + ", url=" + url + ", user="
                + user + ", additions=" + additions + ", changedFiles=" + changedFiles
                + ", comments=" + comments + ", commits=" + commits + ", deletions=" + deletions
                + ", maintainerCanModify=" + maintainerCanModify + ", mergeable=" + mergeable
                + ", mergeableState=" + mergeableState + ", merged=" + merged + ", mergedBy="
                + mergedBy + ", rebaseable=" + rebaseable + ", reviewComments=" + reviewComments
                + "]";
    }

    /**
     * Builds a new {@link PullRequest46.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PullRequest46.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(links, activeLockReason, assignee, assignees,
                authorAssociation, autoMerge, base, body, closedAt, commentsUrl, commitsUrl,
                createdAt, diffUrl, draft, head, htmlUrl, id, issueUrl, labels, locked,
                mergeCommitSha, mergedAt, milestone, nodeId, number, patchUrl, requestedReviewers,
                requestedTeams, reviewCommentUrl, reviewCommentsUrl, state, statusesUrl, title,
                updatedAt, url, user)
                .additions(getAdditions())
                .changedFiles(getChangedFiles())
                .comments(getComments())
                .commits(getCommits())
                .deletions(getDeletions())
                .maintainerCanModify(getMaintainerCanModify())
                .mergeableState(getMergeableState())
                .mergedBy(getMergedBy())
                .reviewComments(getReviewComments());
        builder.mergeable = internalGetMergeable();
        builder.merged = internalGetMerged();
        builder.rebaseable = internalGetRebaseable();
        return builder;
    }

    /**
     * Class to build instances of {@link PullRequest46}.
     */
    public static class Builder {
        private Links2 links;
        private Object activeLockReason;
        private Object assignee;
        private List<PullRequest46Assignees> assignees;
        private AuthorAssociationEnum authorAssociation;
        private Object autoMerge;
        private Base29 base;
        private String body;
        private LocalDateTime closedAt;
        private String commentsUrl;
        private String commitsUrl;
        private LocalDateTime createdAt;
        private String diffUrl;
        private boolean draft;
        private Head9 head;
        private String htmlUrl;
        private int id;
        private String issueUrl;
        private List<Label10> labels;
        private boolean locked;
        private String mergeCommitSha;
        private LocalDateTime mergedAt;
        private Object milestone;
        private String nodeId;
        private int number;
        private String patchUrl;
        private List<PullRequest46RequestedReviewers> requestedReviewers;
        private List<Team6> requestedTeams;
        private String reviewCommentUrl;
        private String reviewCommentsUrl;
        private State13Enum state;
        private String statusesUrl;
        private String title;
        private LocalDateTime updatedAt;
        private String url;
        private Object user;
        private Integer additions;
        private Integer changedFiles;
        private Integer comments;
        private Integer commits;
        private Integer deletions;
        private Boolean maintainerCanModify;
        private OptionalNullable<Boolean> mergeable;
        private String mergeableState;
        private OptionalNullable<Boolean> merged;
        private Object mergedBy;
        private OptionalNullable<Boolean> rebaseable;
        private Integer reviewComments;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  links  Links2 value for links.
         * @param  activeLockReason  Object value for activeLockReason.
         * @param  assignee  Object value for assignee.
         * @param  assignees  List of PullRequest46Assignees value for assignees.
         * @param  authorAssociation  AuthorAssociationEnum value for authorAssociation.
         * @param  autoMerge  Object value for autoMerge.
         * @param  base  Base29 value for base.
         * @param  body  String value for body.
         * @param  closedAt  LocalDateTime value for closedAt.
         * @param  commentsUrl  String value for commentsUrl.
         * @param  commitsUrl  String value for commitsUrl.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  diffUrl  String value for diffUrl.
         * @param  draft  boolean value for draft.
         * @param  head  Head9 value for head.
         * @param  htmlUrl  String value for htmlUrl.
         * @param  id  int value for id.
         * @param  issueUrl  String value for issueUrl.
         * @param  labels  List of Label10 value for labels.
         * @param  locked  boolean value for locked.
         * @param  mergeCommitSha  String value for mergeCommitSha.
         * @param  mergedAt  LocalDateTime value for mergedAt.
         * @param  milestone  Object value for milestone.
         * @param  nodeId  String value for nodeId.
         * @param  number  int value for number.
         * @param  patchUrl  String value for patchUrl.
         * @param  requestedReviewers  List of PullRequest46RequestedReviewers value for
         *         requestedReviewers.
         * @param  requestedTeams  List of Team6 value for requestedTeams.
         * @param  reviewCommentUrl  String value for reviewCommentUrl.
         * @param  reviewCommentsUrl  String value for reviewCommentsUrl.
         * @param  state  State13Enum value for state.
         * @param  statusesUrl  String value for statusesUrl.
         * @param  title  String value for title.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @param  url  String value for url.
         * @param  user  Object value for user.
         */
        public Builder(Links2 links, Object activeLockReason, Object assignee,
                List<PullRequest46Assignees> assignees, AuthorAssociationEnum authorAssociation,
                Object autoMerge, Base29 base, String body, LocalDateTime closedAt,
                String commentsUrl, String commitsUrl, LocalDateTime createdAt, String diffUrl,
                boolean draft, Head9 head, String htmlUrl, int id, String issueUrl,
                List<Label10> labels, boolean locked, String mergeCommitSha, LocalDateTime mergedAt,
                Object milestone, String nodeId, int number, String patchUrl,
                List<PullRequest46RequestedReviewers> requestedReviewers,
                List<Team6> requestedTeams, String reviewCommentUrl, String reviewCommentsUrl,
                State13Enum state, String statusesUrl, String title, LocalDateTime updatedAt,
                String url, Object user) {
            this.links = links;
            this.activeLockReason = activeLockReason;
            this.assignee = assignee;
            this.assignees = assignees;
            this.authorAssociation = authorAssociation;
            this.autoMerge = autoMerge;
            this.base = base;
            this.body = body;
            this.closedAt = closedAt;
            this.commentsUrl = commentsUrl;
            this.commitsUrl = commitsUrl;
            this.createdAt = createdAt;
            this.diffUrl = diffUrl;
            this.draft = draft;
            this.head = head;
            this.htmlUrl = htmlUrl;
            this.id = id;
            this.issueUrl = issueUrl;
            this.labels = labels;
            this.locked = locked;
            this.mergeCommitSha = mergeCommitSha;
            this.mergedAt = mergedAt;
            this.milestone = milestone;
            this.nodeId = nodeId;
            this.number = number;
            this.patchUrl = patchUrl;
            this.requestedReviewers = requestedReviewers;
            this.requestedTeams = requestedTeams;
            this.reviewCommentUrl = reviewCommentUrl;
            this.reviewCommentsUrl = reviewCommentsUrl;
            this.state = state;
            this.statusesUrl = statusesUrl;
            this.title = title;
            this.updatedAt = updatedAt;
            this.url = url;
            this.user = user;
        }

        /**
         * Setter for links.
         * @param  links  Links2 value for links.
         * @return Builder
         */
        public Builder links(Links2 links) {
            this.links = links;
            return this;
        }

        /**
         * Setter for activeLockReason.
         * @param  activeLockReason  Object value for activeLockReason.
         * @return Builder
         */
        public Builder activeLockReason(Object activeLockReason) {
            this.activeLockReason = activeLockReason;
            return this;
        }

        /**
         * Setter for assignee.
         * @param  assignee  Object value for assignee.
         * @return Builder
         */
        public Builder assignee(Object assignee) {
            this.assignee = assignee;
            return this;
        }

        /**
         * Setter for assignees.
         * @param  assignees  List of PullRequest46Assignees value for assignees.
         * @return Builder
         */
        public Builder assignees(List<PullRequest46Assignees> assignees) {
            this.assignees = assignees;
            return this;
        }

        /**
         * Setter for authorAssociation.
         * @param  authorAssociation  AuthorAssociationEnum value for authorAssociation.
         * @return Builder
         */
        public Builder authorAssociation(AuthorAssociationEnum authorAssociation) {
            this.authorAssociation = authorAssociation;
            return this;
        }

        /**
         * Setter for autoMerge.
         * @param  autoMerge  Object value for autoMerge.
         * @return Builder
         */
        public Builder autoMerge(Object autoMerge) {
            this.autoMerge = autoMerge;
            return this;
        }

        /**
         * Setter for base.
         * @param  base  Base29 value for base.
         * @return Builder
         */
        public Builder base(Base29 base) {
            this.base = base;
            return this;
        }

        /**
         * Setter for body.
         * @param  body  String value for body.
         * @return Builder
         */
        public Builder body(String body) {
            this.body = body;
            return this;
        }

        /**
         * Setter for closedAt.
         * @param  closedAt  LocalDateTime value for closedAt.
         * @return Builder
         */
        public Builder closedAt(LocalDateTime closedAt) {
            this.closedAt = closedAt;
            return this;
        }

        /**
         * Setter for commentsUrl.
         * @param  commentsUrl  String value for commentsUrl.
         * @return Builder
         */
        public Builder commentsUrl(String commentsUrl) {
            this.commentsUrl = commentsUrl;
            return this;
        }

        /**
         * Setter for commitsUrl.
         * @param  commitsUrl  String value for commitsUrl.
         * @return Builder
         */
        public Builder commitsUrl(String commitsUrl) {
            this.commitsUrl = commitsUrl;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for diffUrl.
         * @param  diffUrl  String value for diffUrl.
         * @return Builder
         */
        public Builder diffUrl(String diffUrl) {
            this.diffUrl = diffUrl;
            return this;
        }

        /**
         * Setter for draft.
         * @param  draft  boolean value for draft.
         * @return Builder
         */
        public Builder draft(boolean draft) {
            this.draft = draft;
            return this;
        }

        /**
         * Setter for head.
         * @param  head  Head9 value for head.
         * @return Builder
         */
        public Builder head(Head9 head) {
            this.head = head;
            return this;
        }

        /**
         * Setter for htmlUrl.
         * @param  htmlUrl  String value for htmlUrl.
         * @return Builder
         */
        public Builder htmlUrl(String htmlUrl) {
            this.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for issueUrl.
         * @param  issueUrl  String value for issueUrl.
         * @return Builder
         */
        public Builder issueUrl(String issueUrl) {
            this.issueUrl = issueUrl;
            return this;
        }

        /**
         * Setter for labels.
         * @param  labels  List of Label10 value for labels.
         * @return Builder
         */
        public Builder labels(List<Label10> labels) {
            this.labels = labels;
            return this;
        }

        /**
         * Setter for locked.
         * @param  locked  boolean value for locked.
         * @return Builder
         */
        public Builder locked(boolean locked) {
            this.locked = locked;
            return this;
        }

        /**
         * Setter for mergeCommitSha.
         * @param  mergeCommitSha  String value for mergeCommitSha.
         * @return Builder
         */
        public Builder mergeCommitSha(String mergeCommitSha) {
            this.mergeCommitSha = mergeCommitSha;
            return this;
        }

        /**
         * Setter for mergedAt.
         * @param  mergedAt  LocalDateTime value for mergedAt.
         * @return Builder
         */
        public Builder mergedAt(LocalDateTime mergedAt) {
            this.mergedAt = mergedAt;
            return this;
        }

        /**
         * Setter for milestone.
         * @param  milestone  Object value for milestone.
         * @return Builder
         */
        public Builder milestone(Object milestone) {
            this.milestone = milestone;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for number.
         * @param  number  int value for number.
         * @return Builder
         */
        public Builder number(int number) {
            this.number = number;
            return this;
        }

        /**
         * Setter for patchUrl.
         * @param  patchUrl  String value for patchUrl.
         * @return Builder
         */
        public Builder patchUrl(String patchUrl) {
            this.patchUrl = patchUrl;
            return this;
        }

        /**
         * Setter for requestedReviewers.
         * @param  requestedReviewers  List of PullRequest46RequestedReviewers value for
         *         requestedReviewers.
         * @return Builder
         */
        public Builder requestedReviewers(
                List<PullRequest46RequestedReviewers> requestedReviewers) {
            this.requestedReviewers = requestedReviewers;
            return this;
        }

        /**
         * Setter for requestedTeams.
         * @param  requestedTeams  List of Team6 value for requestedTeams.
         * @return Builder
         */
        public Builder requestedTeams(List<Team6> requestedTeams) {
            this.requestedTeams = requestedTeams;
            return this;
        }

        /**
         * Setter for reviewCommentUrl.
         * @param  reviewCommentUrl  String value for reviewCommentUrl.
         * @return Builder
         */
        public Builder reviewCommentUrl(String reviewCommentUrl) {
            this.reviewCommentUrl = reviewCommentUrl;
            return this;
        }

        /**
         * Setter for reviewCommentsUrl.
         * @param  reviewCommentsUrl  String value for reviewCommentsUrl.
         * @return Builder
         */
        public Builder reviewCommentsUrl(String reviewCommentsUrl) {
            this.reviewCommentsUrl = reviewCommentsUrl;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  State13Enum value for state.
         * @return Builder
         */
        public Builder state(State13Enum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for statusesUrl.
         * @param  statusesUrl  String value for statusesUrl.
         * @return Builder
         */
        public Builder statusesUrl(String statusesUrl) {
            this.statusesUrl = statusesUrl;
            return this;
        }

        /**
         * Setter for title.
         * @param  title  String value for title.
         * @return Builder
         */
        public Builder title(String title) {
            this.title = title;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for user.
         * @param  user  Object value for user.
         * @return Builder
         */
        public Builder user(Object user) {
            this.user = user;
            return this;
        }

        /**
         * Setter for additions.
         * @param  additions  Integer value for additions.
         * @return Builder
         */
        public Builder additions(Integer additions) {
            this.additions = additions;
            return this;
        }

        /**
         * Setter for changedFiles.
         * @param  changedFiles  Integer value for changedFiles.
         * @return Builder
         */
        public Builder changedFiles(Integer changedFiles) {
            this.changedFiles = changedFiles;
            return this;
        }

        /**
         * Setter for comments.
         * @param  comments  Integer value for comments.
         * @return Builder
         */
        public Builder comments(Integer comments) {
            this.comments = comments;
            return this;
        }

        /**
         * Setter for commits.
         * @param  commits  Integer value for commits.
         * @return Builder
         */
        public Builder commits(Integer commits) {
            this.commits = commits;
            return this;
        }

        /**
         * Setter for deletions.
         * @param  deletions  Integer value for deletions.
         * @return Builder
         */
        public Builder deletions(Integer deletions) {
            this.deletions = deletions;
            return this;
        }

        /**
         * Setter for maintainerCanModify.
         * @param  maintainerCanModify  Boolean value for maintainerCanModify.
         * @return Builder
         */
        public Builder maintainerCanModify(Boolean maintainerCanModify) {
            this.maintainerCanModify = maintainerCanModify;
            return this;
        }

        /**
         * Setter for mergeable.
         * @param  mergeable  Boolean value for mergeable.
         * @return Builder
         */
        public Builder mergeable(Boolean mergeable) {
            this.mergeable = OptionalNullable.of(mergeable);
            return this;
        }

        /**
         * UnSetter for mergeable.
         * @return Builder
         */
        public Builder unsetMergeable() {
            mergeable = null;
            return this;
        }

        /**
         * Setter for mergeableState.
         * @param  mergeableState  String value for mergeableState.
         * @return Builder
         */
        public Builder mergeableState(String mergeableState) {
            this.mergeableState = mergeableState;
            return this;
        }

        /**
         * Setter for merged.
         * @param  merged  Boolean value for merged.
         * @return Builder
         */
        public Builder merged(Boolean merged) {
            this.merged = OptionalNullable.of(merged);
            return this;
        }

        /**
         * UnSetter for merged.
         * @return Builder
         */
        public Builder unsetMerged() {
            merged = null;
            return this;
        }

        /**
         * Setter for mergedBy.
         * @param  mergedBy  Object value for mergedBy.
         * @return Builder
         */
        public Builder mergedBy(Object mergedBy) {
            this.mergedBy = mergedBy;
            return this;
        }

        /**
         * Setter for rebaseable.
         * @param  rebaseable  Boolean value for rebaseable.
         * @return Builder
         */
        public Builder rebaseable(Boolean rebaseable) {
            this.rebaseable = OptionalNullable.of(rebaseable);
            return this;
        }

        /**
         * UnSetter for rebaseable.
         * @return Builder
         */
        public Builder unsetRebaseable() {
            rebaseable = null;
            return this;
        }

        /**
         * Setter for reviewComments.
         * @param  reviewComments  Integer value for reviewComments.
         * @return Builder
         */
        public Builder reviewComments(Integer reviewComments) {
            this.reviewComments = reviewComments;
            return this;
        }

        /**
         * Builds a new {@link PullRequest46} object using the set fields.
         * @return {@link PullRequest46}
         */
        public PullRequest46 build() {
            return new PullRequest46(links, activeLockReason, assignee, assignees,
                    authorAssociation, autoMerge, base, body, closedAt, commentsUrl, commitsUrl,
                    createdAt, diffUrl, draft, head, htmlUrl, id, issueUrl, labels, locked,
                    mergeCommitSha, mergedAt, milestone, nodeId, number, patchUrl,
                    requestedReviewers, requestedTeams, reviewCommentUrl, reviewCommentsUrl, state,
                    statusesUrl, title, updatedAt, url, user, additions, changedFiles, comments,
                    commits, deletions, maintainerCanModify, mergeable, mergeableState, merged,
                    mergedBy, rebaseable, reviewComments);
        }
    }
}
