/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Files3 type.
 */
public class Files3 {
    private Object codeOfConduct;
    private Object codeOfConductFile;
    private Object license;
    private Object contributing;
    private Object readme;
    private Object issueTemplate;
    private Object pullRequestTemplate;

    /**
     * Default constructor.
     */
    public Files3() {
    }

    /**
     * Initialization constructor.
     * @param  codeOfConduct  Object value for codeOfConduct.
     * @param  codeOfConductFile  Object value for codeOfConductFile.
     * @param  license  Object value for license.
     * @param  contributing  Object value for contributing.
     * @param  readme  Object value for readme.
     * @param  issueTemplate  Object value for issueTemplate.
     * @param  pullRequestTemplate  Object value for pullRequestTemplate.
     */
    public Files3(
            Object codeOfConduct,
            Object codeOfConductFile,
            Object license,
            Object contributing,
            Object readme,
            Object issueTemplate,
            Object pullRequestTemplate) {
        this.codeOfConduct = codeOfConduct;
        this.codeOfConductFile = codeOfConductFile;
        this.license = license;
        this.contributing = contributing;
        this.readme = readme;
        this.issueTemplate = issueTemplate;
        this.pullRequestTemplate = pullRequestTemplate;
    }

    /**
     * Getter for CodeOfConduct.
     * @return Returns the Object
     */
    @JsonGetter("code_of_conduct")
    public Object getCodeOfConduct() {
        return codeOfConduct;
    }

    /**
     * Setter for CodeOfConduct.
     * @param codeOfConduct Value for Object
     */
    @JsonSetter("code_of_conduct")
    public void setCodeOfConduct(Object codeOfConduct) {
        this.codeOfConduct = codeOfConduct;
    }

    /**
     * Getter for CodeOfConductFile.
     * @return Returns the Object
     */
    @JsonGetter("code_of_conduct_file")
    public Object getCodeOfConductFile() {
        return codeOfConductFile;
    }

    /**
     * Setter for CodeOfConductFile.
     * @param codeOfConductFile Value for Object
     */
    @JsonSetter("code_of_conduct_file")
    public void setCodeOfConductFile(Object codeOfConductFile) {
        this.codeOfConductFile = codeOfConductFile;
    }

    /**
     * Getter for License.
     * @return Returns the Object
     */
    @JsonGetter("license")
    public Object getLicense() {
        return license;
    }

    /**
     * Setter for License.
     * @param license Value for Object
     */
    @JsonSetter("license")
    public void setLicense(Object license) {
        this.license = license;
    }

    /**
     * Getter for Contributing.
     * @return Returns the Object
     */
    @JsonGetter("contributing")
    public Object getContributing() {
        return contributing;
    }

    /**
     * Setter for Contributing.
     * @param contributing Value for Object
     */
    @JsonSetter("contributing")
    public void setContributing(Object contributing) {
        this.contributing = contributing;
    }

    /**
     * Getter for Readme.
     * @return Returns the Object
     */
    @JsonGetter("readme")
    public Object getReadme() {
        return readme;
    }

    /**
     * Setter for Readme.
     * @param readme Value for Object
     */
    @JsonSetter("readme")
    public void setReadme(Object readme) {
        this.readme = readme;
    }

    /**
     * Getter for IssueTemplate.
     * @return Returns the Object
     */
    @JsonGetter("issue_template")
    public Object getIssueTemplate() {
        return issueTemplate;
    }

    /**
     * Setter for IssueTemplate.
     * @param issueTemplate Value for Object
     */
    @JsonSetter("issue_template")
    public void setIssueTemplate(Object issueTemplate) {
        this.issueTemplate = issueTemplate;
    }

    /**
     * Getter for PullRequestTemplate.
     * @return Returns the Object
     */
    @JsonGetter("pull_request_template")
    public Object getPullRequestTemplate() {
        return pullRequestTemplate;
    }

    /**
     * Setter for PullRequestTemplate.
     * @param pullRequestTemplate Value for Object
     */
    @JsonSetter("pull_request_template")
    public void setPullRequestTemplate(Object pullRequestTemplate) {
        this.pullRequestTemplate = pullRequestTemplate;
    }

    /**
     * Converts this Files3 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Files3 [" + "codeOfConduct=" + codeOfConduct + ", codeOfConductFile="
                + codeOfConductFile + ", license=" + license + ", contributing=" + contributing
                + ", readme=" + readme + ", issueTemplate=" + issueTemplate
                + ", pullRequestTemplate=" + pullRequestTemplate + "]";
    }

    /**
     * Builds a new {@link Files3.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Files3.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(codeOfConduct, codeOfConductFile, license, contributing,
                readme, issueTemplate, pullRequestTemplate);
        return builder;
    }

    /**
     * Class to build instances of {@link Files3}.
     */
    public static class Builder {
        private Object codeOfConduct;
        private Object codeOfConductFile;
        private Object license;
        private Object contributing;
        private Object readme;
        private Object issueTemplate;
        private Object pullRequestTemplate;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  codeOfConduct  Object value for codeOfConduct.
         * @param  codeOfConductFile  Object value for codeOfConductFile.
         * @param  license  Object value for license.
         * @param  contributing  Object value for contributing.
         * @param  readme  Object value for readme.
         * @param  issueTemplate  Object value for issueTemplate.
         * @param  pullRequestTemplate  Object value for pullRequestTemplate.
         */
        public Builder(Object codeOfConduct, Object codeOfConductFile, Object license,
                Object contributing, Object readme, Object issueTemplate,
                Object pullRequestTemplate) {
            this.codeOfConduct = codeOfConduct;
            this.codeOfConductFile = codeOfConductFile;
            this.license = license;
            this.contributing = contributing;
            this.readme = readme;
            this.issueTemplate = issueTemplate;
            this.pullRequestTemplate = pullRequestTemplate;
        }

        /**
         * Setter for codeOfConduct.
         * @param  codeOfConduct  Object value for codeOfConduct.
         * @return Builder
         */
        public Builder codeOfConduct(Object codeOfConduct) {
            this.codeOfConduct = codeOfConduct;
            return this;
        }

        /**
         * Setter for codeOfConductFile.
         * @param  codeOfConductFile  Object value for codeOfConductFile.
         * @return Builder
         */
        public Builder codeOfConductFile(Object codeOfConductFile) {
            this.codeOfConductFile = codeOfConductFile;
            return this;
        }

        /**
         * Setter for license.
         * @param  license  Object value for license.
         * @return Builder
         */
        public Builder license(Object license) {
            this.license = license;
            return this;
        }

        /**
         * Setter for contributing.
         * @param  contributing  Object value for contributing.
         * @return Builder
         */
        public Builder contributing(Object contributing) {
            this.contributing = contributing;
            return this;
        }

        /**
         * Setter for readme.
         * @param  readme  Object value for readme.
         * @return Builder
         */
        public Builder readme(Object readme) {
            this.readme = readme;
            return this;
        }

        /**
         * Setter for issueTemplate.
         * @param  issueTemplate  Object value for issueTemplate.
         * @return Builder
         */
        public Builder issueTemplate(Object issueTemplate) {
            this.issueTemplate = issueTemplate;
            return this;
        }

        /**
         * Setter for pullRequestTemplate.
         * @param  pullRequestTemplate  Object value for pullRequestTemplate.
         * @return Builder
         */
        public Builder pullRequestTemplate(Object pullRequestTemplate) {
            this.pullRequestTemplate = pullRequestTemplate;
            return this;
        }

        /**
         * Builds a new {@link Files3} object using the set fields.
         * @return {@link Files3}
         */
        public Files3 build() {
            return new Files3(codeOfConduct, codeOfConductFile, license, contributing, readme,
                    issueTemplate, pullRequestTemplate);
        }
    }
}
