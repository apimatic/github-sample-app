/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;

/**
 * This is a model class for ReposMilestonesMilestoneNumberResponse type.
 */
public class ReposMilestonesMilestoneNumberResponse {
    private String url;
    private String htmlUrl;
    private String labelsUrl;
    private int id;
    private String nodeId;
    private int number;
    private State1Enum state;
    private String title;
    private String description;
    private Object creator;
    private int openIssues;
    private int closedIssues;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private LocalDateTime closedAt;
    private LocalDateTime dueOn;

    /**
     * Default constructor.
     */
    public ReposMilestonesMilestoneNumberResponse() {
    }

    /**
     * Initialization constructor.
     * @param  url  String value for url.
     * @param  htmlUrl  String value for htmlUrl.
     * @param  labelsUrl  String value for labelsUrl.
     * @param  id  int value for id.
     * @param  nodeId  String value for nodeId.
     * @param  number  int value for number.
     * @param  state  State1Enum value for state.
     * @param  title  String value for title.
     * @param  description  String value for description.
     * @param  creator  Object value for creator.
     * @param  openIssues  int value for openIssues.
     * @param  closedIssues  int value for closedIssues.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  closedAt  LocalDateTime value for closedAt.
     * @param  dueOn  LocalDateTime value for dueOn.
     */
    public ReposMilestonesMilestoneNumberResponse(
            String url,
            String htmlUrl,
            String labelsUrl,
            int id,
            String nodeId,
            int number,
            State1Enum state,
            String title,
            String description,
            Object creator,
            int openIssues,
            int closedIssues,
            LocalDateTime createdAt,
            LocalDateTime updatedAt,
            LocalDateTime closedAt,
            LocalDateTime dueOn) {
        this.url = url;
        this.htmlUrl = htmlUrl;
        this.labelsUrl = labelsUrl;
        this.id = id;
        this.nodeId = nodeId;
        this.number = number;
        this.state = state;
        this.title = title;
        this.description = description;
        this.creator = creator;
        this.openIssues = openIssues;
        this.closedIssues = closedIssues;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.closedAt = closedAt;
        this.dueOn = dueOn;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for HtmlUrl.
     * @return Returns the String
     */
    @JsonGetter("html_url")
    public String getHtmlUrl() {
        return htmlUrl;
    }

    /**
     * Setter for HtmlUrl.
     * @param htmlUrl Value for String
     */
    @JsonSetter("html_url")
    public void setHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
    }

    /**
     * Getter for LabelsUrl.
     * @return Returns the String
     */
    @JsonGetter("labels_url")
    public String getLabelsUrl() {
        return labelsUrl;
    }

    /**
     * Setter for LabelsUrl.
     * @param labelsUrl Value for String
     */
    @JsonSetter("labels_url")
    public void setLabelsUrl(String labelsUrl) {
        this.labelsUrl = labelsUrl;
    }

    /**
     * Getter for Id.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for Number.
     * The number of the milestone.
     * @return Returns the int
     */
    @JsonGetter("number")
    public int getNumber() {
        return number;
    }

    /**
     * Setter for Number.
     * The number of the milestone.
     * @param number Value for int
     */
    @JsonSetter("number")
    public void setNumber(int number) {
        this.number = number;
    }

    /**
     * Getter for State.
     * @return Returns the State1Enum
     */
    @JsonGetter("state")
    public State1Enum getState() {
        return state;
    }

    /**
     * Setter for State.
     * @param state Value for State1Enum
     */
    @JsonSetter("state")
    public void setState(State1Enum state) {
        this.state = state;
    }

    /**
     * Getter for Title.
     * The title of the milestone.
     * @return Returns the String
     */
    @JsonGetter("title")
    public String getTitle() {
        return title;
    }

    /**
     * Setter for Title.
     * The title of the milestone.
     * @param title Value for String
     */
    @JsonSetter("title")
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    @JsonGetter("description")
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Creator.
     * @return Returns the Object
     */
    @JsonGetter("creator")
    public Object getCreator() {
        return creator;
    }

    /**
     * Setter for Creator.
     * @param creator Value for Object
     */
    @JsonSetter("creator")
    public void setCreator(Object creator) {
        this.creator = creator;
    }

    /**
     * Getter for OpenIssues.
     * @return Returns the int
     */
    @JsonGetter("open_issues")
    public int getOpenIssues() {
        return openIssues;
    }

    /**
     * Setter for OpenIssues.
     * @param openIssues Value for int
     */
    @JsonSetter("open_issues")
    public void setOpenIssues(int openIssues) {
        this.openIssues = openIssues;
    }

    /**
     * Getter for ClosedIssues.
     * @return Returns the int
     */
    @JsonGetter("closed_issues")
    public int getClosedIssues() {
        return closedIssues;
    }

    /**
     * Setter for ClosedIssues.
     * @param closedIssues Value for int
     */
    @JsonSetter("closed_issues")
    public void setClosedIssues(int closedIssues) {
        this.closedIssues = closedIssues;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for ClosedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("closed_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getClosedAt() {
        return closedAt;
    }

    /**
     * Setter for ClosedAt.
     * @param closedAt Value for LocalDateTime
     */
    @JsonSetter("closed_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setClosedAt(LocalDateTime closedAt) {
        this.closedAt = closedAt;
    }

    /**
     * Getter for DueOn.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("due_on")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDueOn() {
        return dueOn;
    }

    /**
     * Setter for DueOn.
     * @param dueOn Value for LocalDateTime
     */
    @JsonSetter("due_on")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDueOn(LocalDateTime dueOn) {
        this.dueOn = dueOn;
    }

    /**
     * Converts this ReposMilestonesMilestoneNumberResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposMilestonesMilestoneNumberResponse [" + "url=" + url + ", htmlUrl=" + htmlUrl
                + ", labelsUrl=" + labelsUrl + ", id=" + id + ", nodeId=" + nodeId + ", number="
                + number + ", state=" + state + ", title=" + title + ", description=" + description
                + ", creator=" + creator + ", openIssues=" + openIssues + ", closedIssues="
                + closedIssues + ", createdAt=" + createdAt + ", updatedAt=" + updatedAt
                + ", closedAt=" + closedAt + ", dueOn=" + dueOn + "]";
    }

    /**
     * Builds a new {@link ReposMilestonesMilestoneNumberResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposMilestonesMilestoneNumberResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(url, htmlUrl, labelsUrl, id, nodeId, number, state, title,
                description, creator, openIssues, closedIssues, createdAt, updatedAt, closedAt,
                dueOn);
        return builder;
    }

    /**
     * Class to build instances of {@link ReposMilestonesMilestoneNumberResponse}.
     */
    public static class Builder {
        private String url;
        private String htmlUrl;
        private String labelsUrl;
        private int id;
        private String nodeId;
        private int number;
        private State1Enum state;
        private String title;
        private String description;
        private Object creator;
        private int openIssues;
        private int closedIssues;
        private LocalDateTime createdAt;
        private LocalDateTime updatedAt;
        private LocalDateTime closedAt;
        private LocalDateTime dueOn;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  url  String value for url.
         * @param  htmlUrl  String value for htmlUrl.
         * @param  labelsUrl  String value for labelsUrl.
         * @param  id  int value for id.
         * @param  nodeId  String value for nodeId.
         * @param  number  int value for number.
         * @param  state  State1Enum value for state.
         * @param  title  String value for title.
         * @param  description  String value for description.
         * @param  creator  Object value for creator.
         * @param  openIssues  int value for openIssues.
         * @param  closedIssues  int value for closedIssues.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @param  closedAt  LocalDateTime value for closedAt.
         * @param  dueOn  LocalDateTime value for dueOn.
         */
        public Builder(String url, String htmlUrl, String labelsUrl, int id, String nodeId,
                int number, State1Enum state, String title, String description, Object creator,
                int openIssues, int closedIssues, LocalDateTime createdAt, LocalDateTime updatedAt,
                LocalDateTime closedAt, LocalDateTime dueOn) {
            this.url = url;
            this.htmlUrl = htmlUrl;
            this.labelsUrl = labelsUrl;
            this.id = id;
            this.nodeId = nodeId;
            this.number = number;
            this.state = state;
            this.title = title;
            this.description = description;
            this.creator = creator;
            this.openIssues = openIssues;
            this.closedIssues = closedIssues;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
            this.closedAt = closedAt;
            this.dueOn = dueOn;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for htmlUrl.
         * @param  htmlUrl  String value for htmlUrl.
         * @return Builder
         */
        public Builder htmlUrl(String htmlUrl) {
            this.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * Setter for labelsUrl.
         * @param  labelsUrl  String value for labelsUrl.
         * @return Builder
         */
        public Builder labelsUrl(String labelsUrl) {
            this.labelsUrl = labelsUrl;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for number.
         * @param  number  int value for number.
         * @return Builder
         */
        public Builder number(int number) {
            this.number = number;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  State1Enum value for state.
         * @return Builder
         */
        public Builder state(State1Enum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for title.
         * @param  title  String value for title.
         * @return Builder
         */
        public Builder title(String title) {
            this.title = title;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for creator.
         * @param  creator  Object value for creator.
         * @return Builder
         */
        public Builder creator(Object creator) {
            this.creator = creator;
            return this;
        }

        /**
         * Setter for openIssues.
         * @param  openIssues  int value for openIssues.
         * @return Builder
         */
        public Builder openIssues(int openIssues) {
            this.openIssues = openIssues;
            return this;
        }

        /**
         * Setter for closedIssues.
         * @param  closedIssues  int value for closedIssues.
         * @return Builder
         */
        public Builder closedIssues(int closedIssues) {
            this.closedIssues = closedIssues;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for closedAt.
         * @param  closedAt  LocalDateTime value for closedAt.
         * @return Builder
         */
        public Builder closedAt(LocalDateTime closedAt) {
            this.closedAt = closedAt;
            return this;
        }

        /**
         * Setter for dueOn.
         * @param  dueOn  LocalDateTime value for dueOn.
         * @return Builder
         */
        public Builder dueOn(LocalDateTime dueOn) {
            this.dueOn = dueOn;
            return this;
        }

        /**
         * Builds a new {@link ReposMilestonesMilestoneNumberResponse} object using the set fields.
         * @return {@link ReposMilestonesMilestoneNumberResponse}
         */
        public ReposMilestonesMilestoneNumberResponse build() {
            return new ReposMilestonesMilestoneNumberResponse(url, htmlUrl, labelsUrl, id, nodeId,
                    number, state, title, description, creator, openIssues, closedIssues, createdAt,
                    updatedAt, closedAt, dueOn);
        }
    }
}
