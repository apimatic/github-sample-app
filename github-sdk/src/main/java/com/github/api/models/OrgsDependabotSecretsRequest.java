/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for OrgsDependabotSecretsRequest type.
 */
public class OrgsDependabotSecretsRequest {
    private String encryptedValue;
    private String keyId;
    private Visibility81Enum visibility;
    private List<String> selectedRepositoryIds;

    /**
     * Default constructor.
     */
    public OrgsDependabotSecretsRequest() {
    }

    /**
     * Initialization constructor.
     * @param  visibility  Visibility81Enum value for visibility.
     * @param  encryptedValue  String value for encryptedValue.
     * @param  keyId  String value for keyId.
     * @param  selectedRepositoryIds  List of String value for selectedRepositoryIds.
     */
    public OrgsDependabotSecretsRequest(
            Visibility81Enum visibility,
            String encryptedValue,
            String keyId,
            List<String> selectedRepositoryIds) {
        this.encryptedValue = encryptedValue;
        this.keyId = keyId;
        this.visibility = visibility;
        this.selectedRepositoryIds = selectedRepositoryIds;
    }

    /**
     * Getter for EncryptedValue.
     * Value for your secret, encrypted with
     * [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public
     * key retrieved from the [Get an organization public
     * key](https://docs.github.com/rest/reference/dependabot#get-an-organization-public-key)
     * endpoint.
     * @return Returns the String
     */
    @JsonGetter("encrypted_value")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEncryptedValue() {
        return encryptedValue;
    }

    /**
     * Setter for EncryptedValue.
     * Value for your secret, encrypted with
     * [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public
     * key retrieved from the [Get an organization public
     * key](https://docs.github.com/rest/reference/dependabot#get-an-organization-public-key)
     * endpoint.
     * @param encryptedValue Value for String
     */
    @JsonSetter("encrypted_value")
    public void setEncryptedValue(String encryptedValue) {
        this.encryptedValue = encryptedValue;
    }

    /**
     * Getter for KeyId.
     * ID of the key you used to encrypt the secret.
     * @return Returns the String
     */
    @JsonGetter("key_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getKeyId() {
        return keyId;
    }

    /**
     * Setter for KeyId.
     * ID of the key you used to encrypt the secret.
     * @param keyId Value for String
     */
    @JsonSetter("key_id")
    public void setKeyId(String keyId) {
        this.keyId = keyId;
    }

    /**
     * Getter for Visibility.
     * @return Returns the Visibility81Enum
     */
    @JsonGetter("visibility")
    public Visibility81Enum getVisibility() {
        return visibility;
    }

    /**
     * Setter for Visibility.
     * @param visibility Value for Visibility81Enum
     */
    @JsonSetter("visibility")
    public void setVisibility(Visibility81Enum visibility) {
        this.visibility = visibility;
    }

    /**
     * Getter for SelectedRepositoryIds.
     * An array of repository ids that can access the organization secret. You can only provide a
     * list of repository ids when the `visibility` is set to `selected`. You can manage the list of
     * selected repositories using the [List selected repositories for an organization
     * secret](https://docs.github.com/rest/reference/dependabot#list-selected-repositories-for-an-organization-secret),
     * [Set selected repositories for an organization
     * secret](https://docs.github.com/rest/reference/dependabot#set-selected-repositories-for-an-organization-secret),
     * and [Remove selected repository from an organization
     * secret](https://docs.github.com/rest/reference/dependabot#remove-selected-repository-from-an-organization-secret)
     * endpoints.
     * @return Returns the List of String
     */
    @JsonGetter("selected_repository_ids")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getSelectedRepositoryIds() {
        return selectedRepositoryIds;
    }

    /**
     * Setter for SelectedRepositoryIds.
     * An array of repository ids that can access the organization secret. You can only provide a
     * list of repository ids when the `visibility` is set to `selected`. You can manage the list of
     * selected repositories using the [List selected repositories for an organization
     * secret](https://docs.github.com/rest/reference/dependabot#list-selected-repositories-for-an-organization-secret),
     * [Set selected repositories for an organization
     * secret](https://docs.github.com/rest/reference/dependabot#set-selected-repositories-for-an-organization-secret),
     * and [Remove selected repository from an organization
     * secret](https://docs.github.com/rest/reference/dependabot#remove-selected-repository-from-an-organization-secret)
     * endpoints.
     * @param selectedRepositoryIds Value for List of String
     */
    @JsonSetter("selected_repository_ids")
    public void setSelectedRepositoryIds(List<String> selectedRepositoryIds) {
        this.selectedRepositoryIds = selectedRepositoryIds;
    }

    /**
     * Converts this OrgsDependabotSecretsRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "OrgsDependabotSecretsRequest [" + "visibility=" + visibility + ", encryptedValue="
                + encryptedValue + ", keyId=" + keyId + ", selectedRepositoryIds="
                + selectedRepositoryIds + "]";
    }

    /**
     * Builds a new {@link OrgsDependabotSecretsRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link OrgsDependabotSecretsRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(visibility)
                .encryptedValue(getEncryptedValue())
                .keyId(getKeyId())
                .selectedRepositoryIds(getSelectedRepositoryIds());
        return builder;
    }

    /**
     * Class to build instances of {@link OrgsDependabotSecretsRequest}.
     */
    public static class Builder {
        private Visibility81Enum visibility;
        private String encryptedValue;
        private String keyId;
        private List<String> selectedRepositoryIds;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  visibility  Visibility81Enum value for visibility.
         */
        public Builder(Visibility81Enum visibility) {
            this.visibility = visibility;
        }

        /**
         * Setter for visibility.
         * @param  visibility  Visibility81Enum value for visibility.
         * @return Builder
         */
        public Builder visibility(Visibility81Enum visibility) {
            this.visibility = visibility;
            return this;
        }

        /**
         * Setter for encryptedValue.
         * @param  encryptedValue  String value for encryptedValue.
         * @return Builder
         */
        public Builder encryptedValue(String encryptedValue) {
            this.encryptedValue = encryptedValue;
            return this;
        }

        /**
         * Setter for keyId.
         * @param  keyId  String value for keyId.
         * @return Builder
         */
        public Builder keyId(String keyId) {
            this.keyId = keyId;
            return this;
        }

        /**
         * Setter for selectedRepositoryIds.
         * @param  selectedRepositoryIds  List of String value for selectedRepositoryIds.
         * @return Builder
         */
        public Builder selectedRepositoryIds(List<String> selectedRepositoryIds) {
            this.selectedRepositoryIds = selectedRepositoryIds;
            return this;
        }

        /**
         * Builds a new {@link OrgsDependabotSecretsRequest} object using the set fields.
         * @return {@link OrgsDependabotSecretsRequest}
         */
        public OrgsDependabotSecretsRequest build() {
            return new OrgsDependabotSecretsRequest(visibility, encryptedValue, keyId,
                    selectedRepositoryIds);
        }
    }
}
