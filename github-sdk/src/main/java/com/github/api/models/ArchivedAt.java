/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;
import java.time.LocalDateTime;

/**
 * This is a model class for ArchivedAt type.
 */
public class ArchivedAt {
    private OptionalNullable<LocalDateTime> from;
    private OptionalNullable<LocalDateTime> to;

    /**
     * Default constructor.
     */
    public ArchivedAt() {
    }

    /**
     * Initialization constructor.
     * @param  from  LocalDateTime value for from.
     * @param  to  LocalDateTime value for to.
     */
    public ArchivedAt(
            LocalDateTime from,
            LocalDateTime to) {
        this.from = OptionalNullable.of(from);
        this.to = OptionalNullable.of(to);
    }

    /**
     * Internal initialization constructor.
     */
    protected ArchivedAt(OptionalNullable<LocalDateTime> from,
            OptionalNullable<LocalDateTime> to) {
        this.from = from;
        this.to = to;
    }

    /**
     * Internal Getter for From.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("from")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetFrom() {
        return this.from;
    }

    /**
     * Getter for From.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getFrom() {
        return OptionalNullable.getFrom(from);
    }

    /**
     * Setter for From.
     * @param from Value for LocalDateTime
     */
    @JsonSetter("from")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setFrom(LocalDateTime from) {
        this.from = OptionalNullable.of(from);
    }

    /**
     * UnSetter for From.
     */
    public void unsetFrom() {
        from = null;
    }

    /**
     * Internal Getter for To.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("to")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetTo() {
        return this.to;
    }

    /**
     * Getter for To.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getTo() {
        return OptionalNullable.getFrom(to);
    }

    /**
     * Setter for To.
     * @param to Value for LocalDateTime
     */
    @JsonSetter("to")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setTo(LocalDateTime to) {
        this.to = OptionalNullable.of(to);
    }

    /**
     * UnSetter for To.
     */
    public void unsetTo() {
        to = null;
    }

    /**
     * Converts this ArchivedAt into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ArchivedAt [" + "from=" + from + ", to=" + to + "]";
    }

    /**
     * Builds a new {@link ArchivedAt.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ArchivedAt.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.from = internalGetFrom();
        builder.to = internalGetTo();
        return builder;
    }

    /**
     * Class to build instances of {@link ArchivedAt}.
     */
    public static class Builder {
        private OptionalNullable<LocalDateTime> from;
        private OptionalNullable<LocalDateTime> to;



        /**
         * Setter for from.
         * @param  from  LocalDateTime value for from.
         * @return Builder
         */
        public Builder from(LocalDateTime from) {
            this.from = OptionalNullable.of(from);
            return this;
        }

        /**
         * UnSetter for from.
         * @return Builder
         */
        public Builder unsetFrom() {
            from = null;
            return this;
        }

        /**
         * Setter for to.
         * @param  to  LocalDateTime value for to.
         * @return Builder
         */
        public Builder to(LocalDateTime to) {
            this.to = OptionalNullable.of(to);
            return this;
        }

        /**
         * UnSetter for to.
         * @return Builder
         */
        public Builder unsetTo() {
            to = null;
            return this;
        }

        /**
         * Builds a new {@link ArchivedAt} object using the set fields.
         * @return {@link ArchivedAt}
         */
        public ArchivedAt build() {
            return new ArchivedAt(from, to);
        }
    }
}
