/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for MarketplacePendingChange type.
 */
public class MarketplacePendingChange {
    private Boolean isInstalled;
    private String effectiveDate;
    private OptionalNullable<Integer> unitCount;
    private Integer id;
    private Plan5 plan;

    /**
     * Default constructor.
     */
    public MarketplacePendingChange() {
    }

    /**
     * Initialization constructor.
     * @param  isInstalled  Boolean value for isInstalled.
     * @param  effectiveDate  String value for effectiveDate.
     * @param  unitCount  Integer value for unitCount.
     * @param  id  Integer value for id.
     * @param  plan  Plan5 value for plan.
     */
    public MarketplacePendingChange(
            Boolean isInstalled,
            String effectiveDate,
            Integer unitCount,
            Integer id,
            Plan5 plan) {
        this.isInstalled = isInstalled;
        this.effectiveDate = effectiveDate;
        this.unitCount = OptionalNullable.of(unitCount);
        this.id = id;
        this.plan = plan;
    }

    /**
     * Internal initialization constructor.
     */
    protected MarketplacePendingChange(Boolean isInstalled, String effectiveDate,
            OptionalNullable<Integer> unitCount, Integer id, Plan5 plan) {
        this.isInstalled = isInstalled;
        this.effectiveDate = effectiveDate;
        this.unitCount = unitCount;
        this.id = id;
        this.plan = plan;
    }

    /**
     * Getter for IsInstalled.
     * @return Returns the Boolean
     */
    @JsonGetter("is_installed")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsInstalled() {
        return isInstalled;
    }

    /**
     * Setter for IsInstalled.
     * @param isInstalled Value for Boolean
     */
    @JsonSetter("is_installed")
    public void setIsInstalled(Boolean isInstalled) {
        this.isInstalled = isInstalled;
    }

    /**
     * Getter for EffectiveDate.
     * @return Returns the String
     */
    @JsonGetter("effective_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEffectiveDate() {
        return effectiveDate;
    }

    /**
     * Setter for EffectiveDate.
     * @param effectiveDate Value for String
     */
    @JsonSetter("effective_date")
    public void setEffectiveDate(String effectiveDate) {
        this.effectiveDate = effectiveDate;
    }

    /**
     * Internal Getter for UnitCount.
     * @return Returns the Internal Integer
     */
    @JsonGetter("unit_count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetUnitCount() {
        return this.unitCount;
    }

    /**
     * Getter for UnitCount.
     * @return Returns the Integer
     */
    public Integer getUnitCount() {
        return OptionalNullable.getFrom(unitCount);
    }

    /**
     * Setter for UnitCount.
     * @param unitCount Value for Integer
     */
    @JsonSetter("unit_count")
    public void setUnitCount(Integer unitCount) {
        this.unitCount = OptionalNullable.of(unitCount);
    }

    /**
     * UnSetter for UnitCount.
     */
    public void unsetUnitCount() {
        unitCount = null;
    }

    /**
     * Getter for Id.
     * @return Returns the Integer
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for Integer
     */
    @JsonSetter("id")
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for Plan.
     * @return Returns the Plan5
     */
    @JsonGetter("plan")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Plan5 getPlan() {
        return plan;
    }

    /**
     * Setter for Plan.
     * @param plan Value for Plan5
     */
    @JsonSetter("plan")
    public void setPlan(Plan5 plan) {
        this.plan = plan;
    }

    /**
     * Converts this MarketplacePendingChange into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "MarketplacePendingChange [" + "isInstalled=" + isInstalled + ", effectiveDate="
                + effectiveDate + ", unitCount=" + unitCount + ", id=" + id + ", plan=" + plan
                + "]";
    }

    /**
     * Builds a new {@link MarketplacePendingChange.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link MarketplacePendingChange.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .isInstalled(getIsInstalled())
                .effectiveDate(getEffectiveDate())
                .id(getId())
                .plan(getPlan());
        builder.unitCount = internalGetUnitCount();
        return builder;
    }

    /**
     * Class to build instances of {@link MarketplacePendingChange}.
     */
    public static class Builder {
        private Boolean isInstalled;
        private String effectiveDate;
        private OptionalNullable<Integer> unitCount;
        private Integer id;
        private Plan5 plan;



        /**
         * Setter for isInstalled.
         * @param  isInstalled  Boolean value for isInstalled.
         * @return Builder
         */
        public Builder isInstalled(Boolean isInstalled) {
            this.isInstalled = isInstalled;
            return this;
        }

        /**
         * Setter for effectiveDate.
         * @param  effectiveDate  String value for effectiveDate.
         * @return Builder
         */
        public Builder effectiveDate(String effectiveDate) {
            this.effectiveDate = effectiveDate;
            return this;
        }

        /**
         * Setter for unitCount.
         * @param  unitCount  Integer value for unitCount.
         * @return Builder
         */
        public Builder unitCount(Integer unitCount) {
            this.unitCount = OptionalNullable.of(unitCount);
            return this;
        }

        /**
         * UnSetter for unitCount.
         * @return Builder
         */
        public Builder unsetUnitCount() {
            unitCount = null;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  Integer value for id.
         * @return Builder
         */
        public Builder id(Integer id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for plan.
         * @param  plan  Plan5 value for plan.
         * @return Builder
         */
        public Builder plan(Plan5 plan) {
            this.plan = plan;
            return this;
        }

        /**
         * Builds a new {@link MarketplacePendingChange} object using the set fields.
         * @return {@link MarketplacePendingChange}
         */
        public MarketplacePendingChange build() {
            return new MarketplacePendingChange(isInstalled, effectiveDate, unitCount, id, plan);
        }
    }
}
