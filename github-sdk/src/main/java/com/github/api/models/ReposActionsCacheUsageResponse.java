/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for ReposActionsCacheUsageResponse type.
 */
public class ReposActionsCacheUsageResponse {
    private String fullName;
    private int activeCachesSizeInBytes;
    private int activeCachesCount;

    /**
     * Default constructor.
     */
    public ReposActionsCacheUsageResponse() {
    }

    /**
     * Initialization constructor.
     * @param  fullName  String value for fullName.
     * @param  activeCachesSizeInBytes  int value for activeCachesSizeInBytes.
     * @param  activeCachesCount  int value for activeCachesCount.
     */
    public ReposActionsCacheUsageResponse(
            String fullName,
            int activeCachesSizeInBytes,
            int activeCachesCount) {
        this.fullName = fullName;
        this.activeCachesSizeInBytes = activeCachesSizeInBytes;
        this.activeCachesCount = activeCachesCount;
    }

    /**
     * Getter for FullName.
     * The repository owner and name for the cache usage being shown.
     * @return Returns the String
     */
    @JsonGetter("full_name")
    public String getFullName() {
        return fullName;
    }

    /**
     * Setter for FullName.
     * The repository owner and name for the cache usage being shown.
     * @param fullName Value for String
     */
    @JsonSetter("full_name")
    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    /**
     * Getter for ActiveCachesSizeInBytes.
     * The sum of the size in bytes of all the active cache items in the repository.
     * @return Returns the int
     */
    @JsonGetter("active_caches_size_in_bytes")
    public int getActiveCachesSizeInBytes() {
        return activeCachesSizeInBytes;
    }

    /**
     * Setter for ActiveCachesSizeInBytes.
     * The sum of the size in bytes of all the active cache items in the repository.
     * @param activeCachesSizeInBytes Value for int
     */
    @JsonSetter("active_caches_size_in_bytes")
    public void setActiveCachesSizeInBytes(int activeCachesSizeInBytes) {
        this.activeCachesSizeInBytes = activeCachesSizeInBytes;
    }

    /**
     * Getter for ActiveCachesCount.
     * The number of active caches in the repository.
     * @return Returns the int
     */
    @JsonGetter("active_caches_count")
    public int getActiveCachesCount() {
        return activeCachesCount;
    }

    /**
     * Setter for ActiveCachesCount.
     * The number of active caches in the repository.
     * @param activeCachesCount Value for int
     */
    @JsonSetter("active_caches_count")
    public void setActiveCachesCount(int activeCachesCount) {
        this.activeCachesCount = activeCachesCount;
    }

    /**
     * Converts this ReposActionsCacheUsageResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposActionsCacheUsageResponse [" + "fullName=" + fullName
                + ", activeCachesSizeInBytes=" + activeCachesSizeInBytes + ", activeCachesCount="
                + activeCachesCount + "]";
    }

    /**
     * Builds a new {@link ReposActionsCacheUsageResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposActionsCacheUsageResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(fullName, activeCachesSizeInBytes, activeCachesCount);
        return builder;
    }

    /**
     * Class to build instances of {@link ReposActionsCacheUsageResponse}.
     */
    public static class Builder {
        private String fullName;
        private int activeCachesSizeInBytes;
        private int activeCachesCount;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  fullName  String value for fullName.
         * @param  activeCachesSizeInBytes  int value for activeCachesSizeInBytes.
         * @param  activeCachesCount  int value for activeCachesCount.
         */
        public Builder(String fullName, int activeCachesSizeInBytes, int activeCachesCount) {
            this.fullName = fullName;
            this.activeCachesSizeInBytes = activeCachesSizeInBytes;
            this.activeCachesCount = activeCachesCount;
        }

        /**
         * Setter for fullName.
         * @param  fullName  String value for fullName.
         * @return Builder
         */
        public Builder fullName(String fullName) {
            this.fullName = fullName;
            return this;
        }

        /**
         * Setter for activeCachesSizeInBytes.
         * @param  activeCachesSizeInBytes  int value for activeCachesSizeInBytes.
         * @return Builder
         */
        public Builder activeCachesSizeInBytes(int activeCachesSizeInBytes) {
            this.activeCachesSizeInBytes = activeCachesSizeInBytes;
            return this;
        }

        /**
         * Setter for activeCachesCount.
         * @param  activeCachesCount  int value for activeCachesCount.
         * @return Builder
         */
        public Builder activeCachesCount(int activeCachesCount) {
            this.activeCachesCount = activeCachesCount;
            return this;
        }

        /**
         * Builds a new {@link ReposActionsCacheUsageResponse} object using the set fields.
         * @return {@link ReposActionsCacheUsageResponse}
         */
        public ReposActionsCacheUsageResponse build() {
            return new ReposActionsCacheUsageResponse(fullName, activeCachesSizeInBytes,
                    activeCachesCount);
        }
    }
}
