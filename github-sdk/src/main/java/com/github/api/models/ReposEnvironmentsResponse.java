/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for ReposEnvironmentsResponse type.
 */
public class ReposEnvironmentsResponse {
    private Integer totalCount;
    private List<Environment> environments;

    /**
     * Default constructor.
     */
    public ReposEnvironmentsResponse() {
    }

    /**
     * Initialization constructor.
     * @param  totalCount  Integer value for totalCount.
     * @param  environments  List of Environment value for environments.
     */
    public ReposEnvironmentsResponse(
            Integer totalCount,
            List<Environment> environments) {
        this.totalCount = totalCount;
        this.environments = environments;
    }

    /**
     * Getter for TotalCount.
     * The number of environments in this repository
     * @return Returns the Integer
     */
    @JsonGetter("total_count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTotalCount() {
        return totalCount;
    }

    /**
     * Setter for TotalCount.
     * The number of environments in this repository
     * @param totalCount Value for Integer
     */
    @JsonSetter("total_count")
    public void setTotalCount(Integer totalCount) {
        this.totalCount = totalCount;
    }

    /**
     * Getter for Environments.
     * @return Returns the List of Environment
     */
    @JsonGetter("environments")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Environment> getEnvironments() {
        return environments;
    }

    /**
     * Setter for Environments.
     * @param environments Value for List of Environment
     */
    @JsonSetter("environments")
    public void setEnvironments(List<Environment> environments) {
        this.environments = environments;
    }

    /**
     * Converts this ReposEnvironmentsResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposEnvironmentsResponse [" + "totalCount=" + totalCount + ", environments="
                + environments + "]";
    }

    /**
     * Builds a new {@link ReposEnvironmentsResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposEnvironmentsResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .totalCount(getTotalCount())
                .environments(getEnvironments());
        return builder;
    }

    /**
     * Class to build instances of {@link ReposEnvironmentsResponse}.
     */
    public static class Builder {
        private Integer totalCount;
        private List<Environment> environments;



        /**
         * Setter for totalCount.
         * @param  totalCount  Integer value for totalCount.
         * @return Builder
         */
        public Builder totalCount(Integer totalCount) {
            this.totalCount = totalCount;
            return this;
        }

        /**
         * Setter for environments.
         * @param  environments  List of Environment value for environments.
         * @return Builder
         */
        public Builder environments(List<Environment> environments) {
            this.environments = environments;
            return this;
        }

        /**
         * Builds a new {@link ReposEnvironmentsResponse} object using the set fields.
         * @return {@link ReposEnvironmentsResponse}
         */
        public ReposEnvironmentsResponse build() {
            return new ReposEnvironmentsResponse(totalCount, environments);
        }
    }
}
