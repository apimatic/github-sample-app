/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;
import java.util.List;

/**
 * This is a model class for ReposEnvironmentsEnvironmentNameRequest type.
 */
public class ReposEnvironmentsEnvironmentNameRequest {
    private Integer waitTimer;
    private OptionalNullable<List<Reviewer4>> reviewers;
    private Object deploymentBranchPolicy;

    /**
     * Default constructor.
     */
    public ReposEnvironmentsEnvironmentNameRequest() {
    }

    /**
     * Initialization constructor.
     * @param  waitTimer  Integer value for waitTimer.
     * @param  reviewers  List of Reviewer4 value for reviewers.
     * @param  deploymentBranchPolicy  Object value for deploymentBranchPolicy.
     */
    public ReposEnvironmentsEnvironmentNameRequest(
            Integer waitTimer,
            List<Reviewer4> reviewers,
            Object deploymentBranchPolicy) {
        this.waitTimer = waitTimer;
        this.reviewers = OptionalNullable.of(reviewers);
        this.deploymentBranchPolicy = deploymentBranchPolicy;
    }

    /**
     * Internal initialization constructor.
     */
    protected ReposEnvironmentsEnvironmentNameRequest(Integer waitTimer,
            OptionalNullable<List<Reviewer4>> reviewers, Object deploymentBranchPolicy) {
        this.waitTimer = waitTimer;
        this.reviewers = reviewers;
        this.deploymentBranchPolicy = deploymentBranchPolicy;
    }

    /**
     * Getter for WaitTimer.
     * The amount of time to delay a job after the job is initially triggered. The time (in minutes)
     * must be an integer between 0 and 43,200 (30 days).
     * @return Returns the Integer
     */
    @JsonGetter("wait_timer")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getWaitTimer() {
        return waitTimer;
    }

    /**
     * Setter for WaitTimer.
     * The amount of time to delay a job after the job is initially triggered. The time (in minutes)
     * must be an integer between 0 and 43,200 (30 days).
     * @param waitTimer Value for Integer
     */
    @JsonSetter("wait_timer")
    public void setWaitTimer(Integer waitTimer) {
        this.waitTimer = waitTimer;
    }

    /**
     * Internal Getter for Reviewers.
     * The people or teams that may review jobs that reference the environment. You can list up to
     * six users or teams as reviewers. The reviewers must have at least read access to the
     * repository. Only one of the required reviewers needs to approve the job for it to proceed.
     * @return Returns the Internal List of Reviewer4
     */
    @JsonGetter("reviewers")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<List<Reviewer4>> internalGetReviewers() {
        return this.reviewers;
    }

    /**
     * Getter for Reviewers.
     * The people or teams that may review jobs that reference the environment. You can list up to
     * six users or teams as reviewers. The reviewers must have at least read access to the
     * repository. Only one of the required reviewers needs to approve the job for it to proceed.
     * @return Returns the List of Reviewer4
     */
    public List<Reviewer4> getReviewers() {
        return OptionalNullable.getFrom(reviewers);
    }

    /**
     * Setter for Reviewers.
     * The people or teams that may review jobs that reference the environment. You can list up to
     * six users or teams as reviewers. The reviewers must have at least read access to the
     * repository. Only one of the required reviewers needs to approve the job for it to proceed.
     * @param reviewers Value for List of Reviewer4
     */
    @JsonSetter("reviewers")
    public void setReviewers(List<Reviewer4> reviewers) {
        this.reviewers = OptionalNullable.of(reviewers);
    }

    /**
     * UnSetter for Reviewers.
     * The people or teams that may review jobs that reference the environment. You can list up to
     * six users or teams as reviewers. The reviewers must have at least read access to the
     * repository. Only one of the required reviewers needs to approve the job for it to proceed.
     */
    public void unsetReviewers() {
        reviewers = null;
    }

    /**
     * Getter for DeploymentBranchPolicy.
     * @return Returns the Object
     */
    @JsonGetter("deployment_branch_policy")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getDeploymentBranchPolicy() {
        return deploymentBranchPolicy;
    }

    /**
     * Setter for DeploymentBranchPolicy.
     * @param deploymentBranchPolicy Value for Object
     */
    @JsonSetter("deployment_branch_policy")
    public void setDeploymentBranchPolicy(Object deploymentBranchPolicy) {
        this.deploymentBranchPolicy = deploymentBranchPolicy;
    }

    /**
     * Converts this ReposEnvironmentsEnvironmentNameRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposEnvironmentsEnvironmentNameRequest [" + "waitTimer=" + waitTimer
                + ", reviewers=" + reviewers + ", deploymentBranchPolicy=" + deploymentBranchPolicy
                + "]";
    }

    /**
     * Builds a new {@link ReposEnvironmentsEnvironmentNameRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposEnvironmentsEnvironmentNameRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .waitTimer(getWaitTimer())
                .deploymentBranchPolicy(getDeploymentBranchPolicy());
        builder.reviewers = internalGetReviewers();
        return builder;
    }

    /**
     * Class to build instances of {@link ReposEnvironmentsEnvironmentNameRequest}.
     */
    public static class Builder {
        private Integer waitTimer;
        private OptionalNullable<List<Reviewer4>> reviewers;
        private Object deploymentBranchPolicy;



        /**
         * Setter for waitTimer.
         * @param  waitTimer  Integer value for waitTimer.
         * @return Builder
         */
        public Builder waitTimer(Integer waitTimer) {
            this.waitTimer = waitTimer;
            return this;
        }

        /**
         * Setter for reviewers.
         * @param  reviewers  List of Reviewer4 value for reviewers.
         * @return Builder
         */
        public Builder reviewers(List<Reviewer4> reviewers) {
            this.reviewers = OptionalNullable.of(reviewers);
            return this;
        }

        /**
         * UnSetter for reviewers.
         * @return Builder
         */
        public Builder unsetReviewers() {
            reviewers = null;
            return this;
        }

        /**
         * Setter for deploymentBranchPolicy.
         * @param  deploymentBranchPolicy  Object value for deploymentBranchPolicy.
         * @return Builder
         */
        public Builder deploymentBranchPolicy(Object deploymentBranchPolicy) {
            this.deploymentBranchPolicy = deploymentBranchPolicy;
            return this;
        }

        /**
         * Builds a new {@link ReposEnvironmentsEnvironmentNameRequest} object using the set fields.
         * @return {@link ReposEnvironmentsEnvironmentNameRequest}
         */
        public ReposEnvironmentsEnvironmentNameRequest build() {
            return new ReposEnvironmentsEnvironmentNameRequest(waitTimer, reviewers,
                    deploymentBranchPolicy);
        }
    }
}
