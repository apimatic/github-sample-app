/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;
import java.time.LocalDateTime;

/**
 * This is a model class for CodeScanningAlertItems type.
 */
public class CodeScanningAlertItems {
    private int number;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private String url;
    private String htmlUrl;
    private String instancesUrl;
    private CodeScanningAlertStateEnum state;
    private OptionalNullable<LocalDateTime> fixedAt;
    private Object dismissedBy;
    private LocalDateTime dismissedAt;
    private Object dismissedReason;
    private OptionalNullable<String> dismissedComment;
    private CodeScanningAlertRuleSummary rule;
    private CodeScanningAnalysisTool tool;
    private CodeScanningAlertInstance mostRecentInstance;

    /**
     * Default constructor.
     */
    public CodeScanningAlertItems() {
    }

    /**
     * Initialization constructor.
     * @param  number  int value for number.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  url  String value for url.
     * @param  htmlUrl  String value for htmlUrl.
     * @param  instancesUrl  String value for instancesUrl.
     * @param  state  CodeScanningAlertStateEnum value for state.
     * @param  dismissedBy  Object value for dismissedBy.
     * @param  dismissedAt  LocalDateTime value for dismissedAt.
     * @param  dismissedReason  Object value for dismissedReason.
     * @param  rule  CodeScanningAlertRuleSummary value for rule.
     * @param  tool  CodeScanningAnalysisTool value for tool.
     * @param  mostRecentInstance  CodeScanningAlertInstance value for mostRecentInstance.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  fixedAt  LocalDateTime value for fixedAt.
     * @param  dismissedComment  String value for dismissedComment.
     */
    public CodeScanningAlertItems(
            int number,
            LocalDateTime createdAt,
            String url,
            String htmlUrl,
            String instancesUrl,
            CodeScanningAlertStateEnum state,
            Object dismissedBy,
            LocalDateTime dismissedAt,
            Object dismissedReason,
            CodeScanningAlertRuleSummary rule,
            CodeScanningAnalysisTool tool,
            CodeScanningAlertInstance mostRecentInstance,
            LocalDateTime updatedAt,
            LocalDateTime fixedAt,
            String dismissedComment) {
        this.number = number;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.url = url;
        this.htmlUrl = htmlUrl;
        this.instancesUrl = instancesUrl;
        this.state = state;
        this.fixedAt = OptionalNullable.of(fixedAt);
        this.dismissedBy = dismissedBy;
        this.dismissedAt = dismissedAt;
        this.dismissedReason = dismissedReason;
        this.dismissedComment = OptionalNullable.of(dismissedComment);
        this.rule = rule;
        this.tool = tool;
        this.mostRecentInstance = mostRecentInstance;
    }

    /**
     * Internal initialization constructor.
     */
    protected CodeScanningAlertItems(int number, LocalDateTime createdAt, String url,
            String htmlUrl, String instancesUrl, CodeScanningAlertStateEnum state,
            Object dismissedBy, LocalDateTime dismissedAt, Object dismissedReason,
            CodeScanningAlertRuleSummary rule, CodeScanningAnalysisTool tool,
            CodeScanningAlertInstance mostRecentInstance, LocalDateTime updatedAt,
            OptionalNullable<LocalDateTime> fixedAt, OptionalNullable<String> dismissedComment) {
        this.number = number;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.url = url;
        this.htmlUrl = htmlUrl;
        this.instancesUrl = instancesUrl;
        this.state = state;
        this.fixedAt = fixedAt;
        this.dismissedBy = dismissedBy;
        this.dismissedAt = dismissedAt;
        this.dismissedReason = dismissedReason;
        this.dismissedComment = dismissedComment;
        this.rule = rule;
        this.tool = tool;
        this.mostRecentInstance = mostRecentInstance;
    }

    /**
     * Getter for Number.
     * The security alert number.
     * @return Returns the int
     */
    @JsonGetter("number")
    public int getNumber() {
        return number;
    }

    /**
     * Setter for Number.
     * The security alert number.
     * @param number Value for int
     */
    @JsonSetter("number")
    public void setNumber(int number) {
        this.number = number;
    }

    /**
     * Getter for CreatedAt.
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Url.
     * The REST API URL of the alert resource.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * The REST API URL of the alert resource.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for HtmlUrl.
     * The GitHub URL of the alert resource.
     * @return Returns the String
     */
    @JsonGetter("html_url")
    public String getHtmlUrl() {
        return htmlUrl;
    }

    /**
     * Setter for HtmlUrl.
     * The GitHub URL of the alert resource.
     * @param htmlUrl Value for String
     */
    @JsonSetter("html_url")
    public void setHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
    }

    /**
     * Getter for InstancesUrl.
     * The REST API URL for fetching the list of instances for an alert.
     * @return Returns the String
     */
    @JsonGetter("instances_url")
    public String getInstancesUrl() {
        return instancesUrl;
    }

    /**
     * Setter for InstancesUrl.
     * The REST API URL for fetching the list of instances for an alert.
     * @param instancesUrl Value for String
     */
    @JsonSetter("instances_url")
    public void setInstancesUrl(String instancesUrl) {
        this.instancesUrl = instancesUrl;
    }

    /**
     * Getter for State.
     * @return Returns the CodeScanningAlertStateEnum
     */
    @JsonGetter("state")
    public CodeScanningAlertStateEnum getState() {
        return state;
    }

    /**
     * Setter for State.
     * @param state Value for CodeScanningAlertStateEnum
     */
    @JsonSetter("state")
    public void setState(CodeScanningAlertStateEnum state) {
        this.state = state;
    }

    /**
     * Internal Getter for FixedAt.
     * The time that the alert was no longer detected and was considered fixed in ISO 8601 format:
     * `YYYY-MM-DDTHH:MM:SSZ`.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("fixed_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetFixedAt() {
        return this.fixedAt;
    }

    /**
     * Getter for FixedAt.
     * The time that the alert was no longer detected and was considered fixed in ISO 8601 format:
     * `YYYY-MM-DDTHH:MM:SSZ`.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getFixedAt() {
        return OptionalNullable.getFrom(fixedAt);
    }

    /**
     * Setter for FixedAt.
     * The time that the alert was no longer detected and was considered fixed in ISO 8601 format:
     * `YYYY-MM-DDTHH:MM:SSZ`.
     * @param fixedAt Value for LocalDateTime
     */
    @JsonSetter("fixed_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setFixedAt(LocalDateTime fixedAt) {
        this.fixedAt = OptionalNullable.of(fixedAt);
    }

    /**
     * UnSetter for FixedAt.
     * The time that the alert was no longer detected and was considered fixed in ISO 8601 format:
     * `YYYY-MM-DDTHH:MM:SSZ`.
     */
    public void unsetFixedAt() {
        fixedAt = null;
    }

    /**
     * Getter for DismissedBy.
     * @return Returns the Object
     */
    @JsonGetter("dismissed_by")
    public Object getDismissedBy() {
        return dismissedBy;
    }

    /**
     * Setter for DismissedBy.
     * @param dismissedBy Value for Object
     */
    @JsonSetter("dismissed_by")
    public void setDismissedBy(Object dismissedBy) {
        this.dismissedBy = dismissedBy;
    }

    /**
     * Getter for DismissedAt.
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("dismissed_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDismissedAt() {
        return dismissedAt;
    }

    /**
     * Setter for DismissedAt.
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @param dismissedAt Value for LocalDateTime
     */
    @JsonSetter("dismissed_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDismissedAt(LocalDateTime dismissedAt) {
        this.dismissedAt = dismissedAt;
    }

    /**
     * Getter for DismissedReason.
     * @return Returns the Object
     */
    @JsonGetter("dismissed_reason")
    public Object getDismissedReason() {
        return dismissedReason;
    }

    /**
     * Setter for DismissedReason.
     * @param dismissedReason Value for Object
     */
    @JsonSetter("dismissed_reason")
    public void setDismissedReason(Object dismissedReason) {
        this.dismissedReason = dismissedReason;
    }

    /**
     * Internal Getter for DismissedComment.
     * The dismissal comment associated with the dismissal of the alert.
     * @return Returns the Internal String
     */
    @JsonGetter("dismissed_comment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDismissedComment() {
        return this.dismissedComment;
    }

    /**
     * Getter for DismissedComment.
     * The dismissal comment associated with the dismissal of the alert.
     * @return Returns the String
     */
    public String getDismissedComment() {
        return OptionalNullable.getFrom(dismissedComment);
    }

    /**
     * Setter for DismissedComment.
     * The dismissal comment associated with the dismissal of the alert.
     * @param dismissedComment Value for String
     */
    @JsonSetter("dismissed_comment")
    public void setDismissedComment(String dismissedComment) {
        this.dismissedComment = OptionalNullable.of(dismissedComment);
    }

    /**
     * UnSetter for DismissedComment.
     * The dismissal comment associated with the dismissal of the alert.
     */
    public void unsetDismissedComment() {
        dismissedComment = null;
    }

    /**
     * Getter for Rule.
     * @return Returns the CodeScanningAlertRuleSummary
     */
    @JsonGetter("rule")
    public CodeScanningAlertRuleSummary getRule() {
        return rule;
    }

    /**
     * Setter for Rule.
     * @param rule Value for CodeScanningAlertRuleSummary
     */
    @JsonSetter("rule")
    public void setRule(CodeScanningAlertRuleSummary rule) {
        this.rule = rule;
    }

    /**
     * Getter for Tool.
     * @return Returns the CodeScanningAnalysisTool
     */
    @JsonGetter("tool")
    public CodeScanningAnalysisTool getTool() {
        return tool;
    }

    /**
     * Setter for Tool.
     * @param tool Value for CodeScanningAnalysisTool
     */
    @JsonSetter("tool")
    public void setTool(CodeScanningAnalysisTool tool) {
        this.tool = tool;
    }

    /**
     * Getter for MostRecentInstance.
     * @return Returns the CodeScanningAlertInstance
     */
    @JsonGetter("most_recent_instance")
    public CodeScanningAlertInstance getMostRecentInstance() {
        return mostRecentInstance;
    }

    /**
     * Setter for MostRecentInstance.
     * @param mostRecentInstance Value for CodeScanningAlertInstance
     */
    @JsonSetter("most_recent_instance")
    public void setMostRecentInstance(CodeScanningAlertInstance mostRecentInstance) {
        this.mostRecentInstance = mostRecentInstance;
    }

    /**
     * Converts this CodeScanningAlertItems into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CodeScanningAlertItems [" + "number=" + number + ", createdAt=" + createdAt
                + ", url=" + url + ", htmlUrl=" + htmlUrl + ", instancesUrl=" + instancesUrl
                + ", state=" + state + ", dismissedBy=" + dismissedBy + ", dismissedAt="
                + dismissedAt + ", dismissedReason=" + dismissedReason + ", rule=" + rule
                + ", tool=" + tool + ", mostRecentInstance=" + mostRecentInstance + ", updatedAt="
                + updatedAt + ", fixedAt=" + fixedAt + ", dismissedComment=" + dismissedComment
                + "]";
    }

    /**
     * Builds a new {@link CodeScanningAlertItems.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CodeScanningAlertItems.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(number, createdAt, url, htmlUrl, instancesUrl, state,
                dismissedBy, dismissedAt, dismissedReason, rule, tool, mostRecentInstance)
                .updatedAt(getUpdatedAt());
        builder.fixedAt = internalGetFixedAt();
        builder.dismissedComment = internalGetDismissedComment();
        return builder;
    }

    /**
     * Class to build instances of {@link CodeScanningAlertItems}.
     */
    public static class Builder {
        private int number;
        private LocalDateTime createdAt;
        private String url;
        private String htmlUrl;
        private String instancesUrl;
        private CodeScanningAlertStateEnum state;
        private Object dismissedBy;
        private LocalDateTime dismissedAt;
        private Object dismissedReason;
        private CodeScanningAlertRuleSummary rule;
        private CodeScanningAnalysisTool tool;
        private CodeScanningAlertInstance mostRecentInstance;
        private LocalDateTime updatedAt;
        private OptionalNullable<LocalDateTime> fixedAt;
        private OptionalNullable<String> dismissedComment;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  number  int value for number.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  url  String value for url.
         * @param  htmlUrl  String value for htmlUrl.
         * @param  instancesUrl  String value for instancesUrl.
         * @param  state  CodeScanningAlertStateEnum value for state.
         * @param  dismissedBy  Object value for dismissedBy.
         * @param  dismissedAt  LocalDateTime value for dismissedAt.
         * @param  dismissedReason  Object value for dismissedReason.
         * @param  rule  CodeScanningAlertRuleSummary value for rule.
         * @param  tool  CodeScanningAnalysisTool value for tool.
         * @param  mostRecentInstance  CodeScanningAlertInstance value for mostRecentInstance.
         */
        public Builder(int number, LocalDateTime createdAt, String url, String htmlUrl,
                String instancesUrl, CodeScanningAlertStateEnum state, Object dismissedBy,
                LocalDateTime dismissedAt, Object dismissedReason,
                CodeScanningAlertRuleSummary rule, CodeScanningAnalysisTool tool,
                CodeScanningAlertInstance mostRecentInstance) {
            this.number = number;
            this.createdAt = createdAt;
            this.url = url;
            this.htmlUrl = htmlUrl;
            this.instancesUrl = instancesUrl;
            this.state = state;
            this.dismissedBy = dismissedBy;
            this.dismissedAt = dismissedAt;
            this.dismissedReason = dismissedReason;
            this.rule = rule;
            this.tool = tool;
            this.mostRecentInstance = mostRecentInstance;
        }

        /**
         * Setter for number.
         * @param  number  int value for number.
         * @return Builder
         */
        public Builder number(int number) {
            this.number = number;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for htmlUrl.
         * @param  htmlUrl  String value for htmlUrl.
         * @return Builder
         */
        public Builder htmlUrl(String htmlUrl) {
            this.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * Setter for instancesUrl.
         * @param  instancesUrl  String value for instancesUrl.
         * @return Builder
         */
        public Builder instancesUrl(String instancesUrl) {
            this.instancesUrl = instancesUrl;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  CodeScanningAlertStateEnum value for state.
         * @return Builder
         */
        public Builder state(CodeScanningAlertStateEnum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for dismissedBy.
         * @param  dismissedBy  Object value for dismissedBy.
         * @return Builder
         */
        public Builder dismissedBy(Object dismissedBy) {
            this.dismissedBy = dismissedBy;
            return this;
        }

        /**
         * Setter for dismissedAt.
         * @param  dismissedAt  LocalDateTime value for dismissedAt.
         * @return Builder
         */
        public Builder dismissedAt(LocalDateTime dismissedAt) {
            this.dismissedAt = dismissedAt;
            return this;
        }

        /**
         * Setter for dismissedReason.
         * @param  dismissedReason  Object value for dismissedReason.
         * @return Builder
         */
        public Builder dismissedReason(Object dismissedReason) {
            this.dismissedReason = dismissedReason;
            return this;
        }

        /**
         * Setter for rule.
         * @param  rule  CodeScanningAlertRuleSummary value for rule.
         * @return Builder
         */
        public Builder rule(CodeScanningAlertRuleSummary rule) {
            this.rule = rule;
            return this;
        }

        /**
         * Setter for tool.
         * @param  tool  CodeScanningAnalysisTool value for tool.
         * @return Builder
         */
        public Builder tool(CodeScanningAnalysisTool tool) {
            this.tool = tool;
            return this;
        }

        /**
         * Setter for mostRecentInstance.
         * @param  mostRecentInstance  CodeScanningAlertInstance value for mostRecentInstance.
         * @return Builder
         */
        public Builder mostRecentInstance(CodeScanningAlertInstance mostRecentInstance) {
            this.mostRecentInstance = mostRecentInstance;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for fixedAt.
         * @param  fixedAt  LocalDateTime value for fixedAt.
         * @return Builder
         */
        public Builder fixedAt(LocalDateTime fixedAt) {
            this.fixedAt = OptionalNullable.of(fixedAt);
            return this;
        }

        /**
         * UnSetter for fixedAt.
         * @return Builder
         */
        public Builder unsetFixedAt() {
            fixedAt = null;
            return this;
        }

        /**
         * Setter for dismissedComment.
         * @param  dismissedComment  String value for dismissedComment.
         * @return Builder
         */
        public Builder dismissedComment(String dismissedComment) {
            this.dismissedComment = OptionalNullable.of(dismissedComment);
            return this;
        }

        /**
         * UnSetter for dismissedComment.
         * @return Builder
         */
        public Builder unsetDismissedComment() {
            dismissedComment = null;
            return this;
        }

        /**
         * Builds a new {@link CodeScanningAlertItems} object using the set fields.
         * @return {@link CodeScanningAlertItems}
         */
        public CodeScanningAlertItems build() {
            return new CodeScanningAlertItems(number, createdAt, url, htmlUrl, instancesUrl, state,
                    dismissedBy, dismissedAt, dismissedReason, rule, tool, mostRecentInstance,
                    updatedAt, fixedAt, dismissedComment);
        }
    }
}
