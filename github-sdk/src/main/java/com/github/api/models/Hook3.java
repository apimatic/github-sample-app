/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for Hook3 type.
 */
public class Hook3 {
    private boolean active;
    private Config2 config;
    private String createdAt;
    private List<Event28Enum> events;
    private int id;
    private String name;
    private String type;
    private String updatedAt;

    /**
     * Default constructor.
     */
    public Hook3() {
    }

    /**
     * Initialization constructor.
     * @param  active  boolean value for active.
     * @param  config  Config2 value for config.
     * @param  createdAt  String value for createdAt.
     * @param  events  List of Event28Enum value for events.
     * @param  id  int value for id.
     * @param  name  String value for name.
     * @param  type  String value for type.
     * @param  updatedAt  String value for updatedAt.
     */
    public Hook3(
            boolean active,
            Config2 config,
            String createdAt,
            List<Event28Enum> events,
            int id,
            String name,
            String type,
            String updatedAt) {
        this.active = active;
        this.config = config;
        this.createdAt = createdAt;
        this.events = events;
        this.id = id;
        this.name = name;
        this.type = type;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Active.
     * @return Returns the boolean
     */
    @JsonGetter("active")
    public boolean getActive() {
        return active;
    }

    /**
     * Setter for Active.
     * @param active Value for boolean
     */
    @JsonSetter("active")
    public void setActive(boolean active) {
        this.active = active;
    }

    /**
     * Getter for Config.
     * @return Returns the Config2
     */
    @JsonGetter("config")
    public Config2 getConfig() {
        return config;
    }

    /**
     * Setter for Config.
     * @param config Value for Config2
     */
    @JsonSetter("config")
    public void setConfig(Config2 config) {
        this.config = config;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the String
     */
    @JsonGetter("created_at")
    public String getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for String
     */
    @JsonSetter("created_at")
    public void setCreatedAt(String createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for Events.
     * @return Returns the List of Event28Enum
     */
    @JsonGetter("events")
    public List<Event28Enum> getEvents() {
        return events;
    }

    /**
     * Setter for Events.
     * @param events Value for List of Event28Enum
     */
    @JsonSetter("events")
    public void setEvents(List<Event28Enum> events) {
        this.events = events;
    }

    /**
     * Getter for Id.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the String
     */
    @JsonGetter("updated_at")
    public String getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for String
     */
    @JsonSetter("updated_at")
    public void setUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Converts this Hook3 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Hook3 [" + "active=" + active + ", config=" + config + ", createdAt=" + createdAt
                + ", events=" + events + ", id=" + id + ", name=" + name + ", type=" + type
                + ", updatedAt=" + updatedAt + "]";
    }

    /**
     * Builds a new {@link Hook3.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Hook3.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(active, config, createdAt, events, id, name, type, updatedAt);
        return builder;
    }

    /**
     * Class to build instances of {@link Hook3}.
     */
    public static class Builder {
        private boolean active;
        private Config2 config;
        private String createdAt;
        private List<Event28Enum> events;
        private int id;
        private String name;
        private String type;
        private String updatedAt;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  active  boolean value for active.
         * @param  config  Config2 value for config.
         * @param  createdAt  String value for createdAt.
         * @param  events  List of Event28Enum value for events.
         * @param  id  int value for id.
         * @param  name  String value for name.
         * @param  type  String value for type.
         * @param  updatedAt  String value for updatedAt.
         */
        public Builder(boolean active, Config2 config, String createdAt, List<Event28Enum> events,
                int id, String name, String type, String updatedAt) {
            this.active = active;
            this.config = config;
            this.createdAt = createdAt;
            this.events = events;
            this.id = id;
            this.name = name;
            this.type = type;
            this.updatedAt = updatedAt;
        }

        /**
         * Setter for active.
         * @param  active  boolean value for active.
         * @return Builder
         */
        public Builder active(boolean active) {
            this.active = active;
            return this;
        }

        /**
         * Setter for config.
         * @param  config  Config2 value for config.
         * @return Builder
         */
        public Builder config(Config2 config) {
            this.config = config;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  String value for createdAt.
         * @return Builder
         */
        public Builder createdAt(String createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for events.
         * @param  events  List of Event28Enum value for events.
         * @return Builder
         */
        public Builder events(List<Event28Enum> events) {
            this.events = events;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  String value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Builds a new {@link Hook3} object using the set fields.
         * @return {@link Hook3}
         */
        public Hook3 build() {
            return new Hook3(active, config, createdAt, events, id, name, type, updatedAt);
        }
    }
}
