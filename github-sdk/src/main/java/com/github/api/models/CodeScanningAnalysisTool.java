/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for CodeScanningAnalysisTool type.
 */
public class CodeScanningAnalysisTool {
    private String name;
    private OptionalNullable<String> version;
    private OptionalNullable<String> guid;

    /**
     * Default constructor.
     */
    public CodeScanningAnalysisTool() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  version  String value for version.
     * @param  guid  String value for guid.
     */
    public CodeScanningAnalysisTool(
            String name,
            String version,
            String guid) {
        this.name = name;
        this.version = OptionalNullable.of(version);
        this.guid = OptionalNullable.of(guid);
    }

    /**
     * Internal initialization constructor.
     */
    protected CodeScanningAnalysisTool(String name, OptionalNullable<String> version,
            OptionalNullable<String> guid) {
        this.name = name;
        this.version = version;
        this.guid = guid;
    }

    /**
     * Getter for Name.
     * The name of the tool used to generate the code scanning analysis.
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the tool used to generate the code scanning analysis.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Internal Getter for Version.
     * The version of the tool used to generate the code scanning analysis.
     * @return Returns the Internal String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetVersion() {
        return this.version;
    }

    /**
     * Getter for Version.
     * The version of the tool used to generate the code scanning analysis.
     * @return Returns the String
     */
    public String getVersion() {
        return OptionalNullable.getFrom(version);
    }

    /**
     * Setter for Version.
     * The version of the tool used to generate the code scanning analysis.
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = OptionalNullable.of(version);
    }

    /**
     * UnSetter for Version.
     * The version of the tool used to generate the code scanning analysis.
     */
    public void unsetVersion() {
        version = null;
    }

    /**
     * Internal Getter for Guid.
     * The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded
     * SARIF data.
     * @return Returns the Internal String
     */
    @JsonGetter("guid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetGuid() {
        return this.guid;
    }

    /**
     * Getter for Guid.
     * The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded
     * SARIF data.
     * @return Returns the String
     */
    public String getGuid() {
        return OptionalNullable.getFrom(guid);
    }

    /**
     * Setter for Guid.
     * The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded
     * SARIF data.
     * @param guid Value for String
     */
    @JsonSetter("guid")
    public void setGuid(String guid) {
        this.guid = OptionalNullable.of(guid);
    }

    /**
     * UnSetter for Guid.
     * The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded
     * SARIF data.
     */
    public void unsetGuid() {
        guid = null;
    }

    /**
     * Converts this CodeScanningAnalysisTool into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CodeScanningAnalysisTool [" + "name=" + name + ", version=" + version + ", guid="
                + guid + "]";
    }

    /**
     * Builds a new {@link CodeScanningAnalysisTool.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CodeScanningAnalysisTool.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .name(getName());
        builder.version = internalGetVersion();
        builder.guid = internalGetGuid();
        return builder;
    }

    /**
     * Class to build instances of {@link CodeScanningAnalysisTool}.
     */
    public static class Builder {
        private String name;
        private OptionalNullable<String> version;
        private OptionalNullable<String> guid;



        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = OptionalNullable.of(version);
            return this;
        }

        /**
         * UnSetter for version.
         * @return Builder
         */
        public Builder unsetVersion() {
            version = null;
            return this;
        }

        /**
         * Setter for guid.
         * @param  guid  String value for guid.
         * @return Builder
         */
        public Builder guid(String guid) {
            this.guid = OptionalNullable.of(guid);
            return this;
        }

        /**
         * UnSetter for guid.
         * @return Builder
         */
        public Builder unsetGuid() {
            guid = null;
            return this;
        }

        /**
         * Builds a new {@link CodeScanningAnalysisTool} object using the set fields.
         * @return {@link CodeScanningAnalysisTool}
         */
        public CodeScanningAnalysisTool build() {
            return new CodeScanningAnalysisTool(name, version, guid);
        }
    }
}
