/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for ProjectsColumnsCardsMovesRequest type.
 */
public class ProjectsColumnsCardsMovesRequest {
    private String position;
    private Integer columnId;

    /**
     * Default constructor.
     */
    public ProjectsColumnsCardsMovesRequest() {
    }

    /**
     * Initialization constructor.
     * @param  position  String value for position.
     * @param  columnId  Integer value for columnId.
     */
    public ProjectsColumnsCardsMovesRequest(
            String position,
            Integer columnId) {
        this.position = position;
        this.columnId = columnId;
    }

    /**
     * Getter for Position.
     * The position of the card in a column. Can be one of: `top`, `bottom`, or `after:&lt;card_id&gt;` to
     * place after the specified card.
     * @return Returns the String
     */
    @JsonGetter("position")
    public String getPosition() {
        return position;
    }

    /**
     * Setter for Position.
     * The position of the card in a column. Can be one of: `top`, `bottom`, or `after:&lt;card_id&gt;` to
     * place after the specified card.
     * @param position Value for String
     */
    @JsonSetter("position")
    public void setPosition(String position) {
        this.position = position;
    }

    /**
     * Getter for ColumnId.
     * The unique identifier of the column the card should be moved to
     * @return Returns the Integer
     */
    @JsonGetter("column_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getColumnId() {
        return columnId;
    }

    /**
     * Setter for ColumnId.
     * The unique identifier of the column the card should be moved to
     * @param columnId Value for Integer
     */
    @JsonSetter("column_id")
    public void setColumnId(Integer columnId) {
        this.columnId = columnId;
    }

    /**
     * Converts this ProjectsColumnsCardsMovesRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ProjectsColumnsCardsMovesRequest [" + "position=" + position + ", columnId="
                + columnId + "]";
    }

    /**
     * Builds a new {@link ProjectsColumnsCardsMovesRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ProjectsColumnsCardsMovesRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(position)
                .columnId(getColumnId());
        return builder;
    }

    /**
     * Class to build instances of {@link ProjectsColumnsCardsMovesRequest}.
     */
    public static class Builder {
        private String position;
        private Integer columnId;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  position  String value for position.
         */
        public Builder(String position) {
            this.position = position;
        }

        /**
         * Setter for position.
         * @param  position  String value for position.
         * @return Builder
         */
        public Builder position(String position) {
            this.position = position;
            return this;
        }

        /**
         * Setter for columnId.
         * @param  columnId  Integer value for columnId.
         * @return Builder
         */
        public Builder columnId(Integer columnId) {
            this.columnId = columnId;
            return this;
        }

        /**
         * Builds a new {@link ProjectsColumnsCardsMovesRequest} object using the set fields.
         * @return {@link ProjectsColumnsCardsMovesRequest}
         */
        public ProjectsColumnsCardsMovesRequest build() {
            return new ProjectsColumnsCardsMovesRequest(position, columnId);
        }
    }
}
