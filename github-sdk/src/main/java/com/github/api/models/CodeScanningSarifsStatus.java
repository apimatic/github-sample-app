/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;
import java.util.List;

/**
 * This is a model class for CodeScanningSarifsStatus type.
 */
public class CodeScanningSarifsStatus {
    private ProcessingStatusEnum processingStatus;
    private OptionalNullable<String> analysesUrl;
    private OptionalNullable<List<String>> errors;

    /**
     * Default constructor.
     */
    public CodeScanningSarifsStatus() {
    }

    /**
     * Initialization constructor.
     * @param  processingStatus  ProcessingStatusEnum value for processingStatus.
     * @param  analysesUrl  String value for analysesUrl.
     * @param  errors  List of String value for errors.
     */
    public CodeScanningSarifsStatus(
            ProcessingStatusEnum processingStatus,
            String analysesUrl,
            List<String> errors) {
        this.processingStatus = processingStatus;
        this.analysesUrl = OptionalNullable.of(analysesUrl);
        this.errors = OptionalNullable.of(errors);
    }

    /**
     * Internal initialization constructor.
     */
    protected CodeScanningSarifsStatus(ProcessingStatusEnum processingStatus,
            OptionalNullable<String> analysesUrl, OptionalNullable<List<String>> errors) {
        this.processingStatus = processingStatus;
        this.analysesUrl = analysesUrl;
        this.errors = errors;
    }

    /**
     * Getter for ProcessingStatus.
     * @return Returns the ProcessingStatusEnum
     */
    @JsonGetter("processing_status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ProcessingStatusEnum getProcessingStatus() {
        return processingStatus;
    }

    /**
     * Setter for ProcessingStatus.
     * @param processingStatus Value for ProcessingStatusEnum
     */
    @JsonSetter("processing_status")
    public void setProcessingStatus(ProcessingStatusEnum processingStatus) {
        this.processingStatus = processingStatus;
    }

    /**
     * Internal Getter for AnalysesUrl.
     * The REST API URL for getting the analyses associated with the upload.
     * @return Returns the Internal String
     */
    @JsonGetter("analyses_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAnalysesUrl() {
        return this.analysesUrl;
    }

    /**
     * Getter for AnalysesUrl.
     * The REST API URL for getting the analyses associated with the upload.
     * @return Returns the String
     */
    public String getAnalysesUrl() {
        return OptionalNullable.getFrom(analysesUrl);
    }

    /**
     * Setter for AnalysesUrl.
     * The REST API URL for getting the analyses associated with the upload.
     * @param analysesUrl Value for String
     */
    @JsonSetter("analyses_url")
    public void setAnalysesUrl(String analysesUrl) {
        this.analysesUrl = OptionalNullable.of(analysesUrl);
    }

    /**
     * UnSetter for AnalysesUrl.
     * The REST API URL for getting the analyses associated with the upload.
     */
    public void unsetAnalysesUrl() {
        analysesUrl = null;
    }

    /**
     * Internal Getter for Errors.
     * Any errors that ocurred during processing of the delivery.
     * @return Returns the Internal List of String
     */
    @JsonGetter("errors")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<List<String>> internalGetErrors() {
        return this.errors;
    }

    /**
     * Getter for Errors.
     * Any errors that ocurred during processing of the delivery.
     * @return Returns the List of String
     */
    public List<String> getErrors() {
        return OptionalNullable.getFrom(errors);
    }

    /**
     * Setter for Errors.
     * Any errors that ocurred during processing of the delivery.
     * @param errors Value for List of String
     */
    @JsonSetter("errors")
    public void setErrors(List<String> errors) {
        this.errors = OptionalNullable.of(errors);
    }

    /**
     * UnSetter for Errors.
     * Any errors that ocurred during processing of the delivery.
     */
    public void unsetErrors() {
        errors = null;
    }

    /**
     * Converts this CodeScanningSarifsStatus into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CodeScanningSarifsStatus [" + "processingStatus=" + processingStatus
                + ", analysesUrl=" + analysesUrl + ", errors=" + errors + "]";
    }

    /**
     * Builds a new {@link CodeScanningSarifsStatus.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CodeScanningSarifsStatus.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .processingStatus(getProcessingStatus());
        builder.analysesUrl = internalGetAnalysesUrl();
        builder.errors = internalGetErrors();
        return builder;
    }

    /**
     * Class to build instances of {@link CodeScanningSarifsStatus}.
     */
    public static class Builder {
        private ProcessingStatusEnum processingStatus;
        private OptionalNullable<String> analysesUrl;
        private OptionalNullable<List<String>> errors;



        /**
         * Setter for processingStatus.
         * @param  processingStatus  ProcessingStatusEnum value for processingStatus.
         * @return Builder
         */
        public Builder processingStatus(ProcessingStatusEnum processingStatus) {
            this.processingStatus = processingStatus;
            return this;
        }

        /**
         * Setter for analysesUrl.
         * @param  analysesUrl  String value for analysesUrl.
         * @return Builder
         */
        public Builder analysesUrl(String analysesUrl) {
            this.analysesUrl = OptionalNullable.of(analysesUrl);
            return this;
        }

        /**
         * UnSetter for analysesUrl.
         * @return Builder
         */
        public Builder unsetAnalysesUrl() {
            analysesUrl = null;
            return this;
        }

        /**
         * Setter for errors.
         * @param  errors  List of String value for errors.
         * @return Builder
         */
        public Builder errors(List<String> errors) {
            this.errors = OptionalNullable.of(errors);
            return this;
        }

        /**
         * UnSetter for errors.
         * @return Builder
         */
        public Builder unsetErrors() {
            errors = null;
            return this;
        }

        /**
         * Builds a new {@link CodeScanningSarifsStatus} object using the set fields.
         * @return {@link CodeScanningSarifsStatus}
         */
        public CodeScanningSarifsStatus build() {
            return new CodeScanningSarifsStatus(processingStatus, analysesUrl, errors);
        }
    }
}
