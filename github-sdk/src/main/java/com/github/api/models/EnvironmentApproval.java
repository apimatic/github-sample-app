/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for EnvironmentApproval type.
 */
public class EnvironmentApproval {
    private List<Environments1> environments;
    private State7Enum state;
    private User2 user;
    private String comment;

    /**
     * Default constructor.
     */
    public EnvironmentApproval() {
    }

    /**
     * Initialization constructor.
     * @param  environments  List of Environments1 value for environments.
     * @param  state  State7Enum value for state.
     * @param  user  User2 value for user.
     * @param  comment  String value for comment.
     */
    public EnvironmentApproval(
            List<Environments1> environments,
            State7Enum state,
            User2 user,
            String comment) {
        this.environments = environments;
        this.state = state;
        this.user = user;
        this.comment = comment;
    }

    /**
     * Getter for Environments.
     * The list of environments that were approved or rejected
     * @return Returns the List of Environments1
     */
    @JsonGetter("environments")
    public List<Environments1> getEnvironments() {
        return environments;
    }

    /**
     * Setter for Environments.
     * The list of environments that were approved or rejected
     * @param environments Value for List of Environments1
     */
    @JsonSetter("environments")
    public void setEnvironments(List<Environments1> environments) {
        this.environments = environments;
    }

    /**
     * Getter for State.
     * @return Returns the State7Enum
     */
    @JsonGetter("state")
    public State7Enum getState() {
        return state;
    }

    /**
     * Setter for State.
     * @param state Value for State7Enum
     */
    @JsonSetter("state")
    public void setState(State7Enum state) {
        this.state = state;
    }

    /**
     * Getter for User.
     * @return Returns the User2
     */
    @JsonGetter("user")
    public User2 getUser() {
        return user;
    }

    /**
     * Setter for User.
     * @param user Value for User2
     */
    @JsonSetter("user")
    public void setUser(User2 user) {
        this.user = user;
    }

    /**
     * Getter for Comment.
     * The comment submitted with the deployment review
     * @return Returns the String
     */
    @JsonGetter("comment")
    public String getComment() {
        return comment;
    }

    /**
     * Setter for Comment.
     * The comment submitted with the deployment review
     * @param comment Value for String
     */
    @JsonSetter("comment")
    public void setComment(String comment) {
        this.comment = comment;
    }

    /**
     * Converts this EnvironmentApproval into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "EnvironmentApproval [" + "environments=" + environments + ", state=" + state
                + ", user=" + user + ", comment=" + comment + "]";
    }

    /**
     * Builds a new {@link EnvironmentApproval.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link EnvironmentApproval.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(environments, state, user, comment);
        return builder;
    }

    /**
     * Class to build instances of {@link EnvironmentApproval}.
     */
    public static class Builder {
        private List<Environments1> environments;
        private State7Enum state;
        private User2 user;
        private String comment;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  environments  List of Environments1 value for environments.
         * @param  state  State7Enum value for state.
         * @param  user  User2 value for user.
         * @param  comment  String value for comment.
         */
        public Builder(List<Environments1> environments, State7Enum state, User2 user,
                String comment) {
            this.environments = environments;
            this.state = state;
            this.user = user;
            this.comment = comment;
        }

        /**
         * Setter for environments.
         * @param  environments  List of Environments1 value for environments.
         * @return Builder
         */
        public Builder environments(List<Environments1> environments) {
            this.environments = environments;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  State7Enum value for state.
         * @return Builder
         */
        public Builder state(State7Enum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for user.
         * @param  user  User2 value for user.
         * @return Builder
         */
        public Builder user(User2 user) {
            this.user = user;
            return this;
        }

        /**
         * Setter for comment.
         * @param  comment  String value for comment.
         * @return Builder
         */
        public Builder comment(String comment) {
            this.comment = comment;
            return this;
        }

        /**
         * Builds a new {@link EnvironmentApproval} object using the set fields.
         * @return {@link EnvironmentApproval}
         */
        public EnvironmentApproval build() {
            return new EnvironmentApproval(environments, state, user, comment);
        }
    }
}
