/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.github.api.ApiHelper;
import com.github.api.models.PrivateUser;
import com.github.api.models.PublicUser;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for one-of types.
 */
@JsonDeserialize(using = UsersGetAuthenticatedResponse.UsersGetAuthenticatedResponseDeserializer.class)
public abstract class UsersGetAuthenticatedResponse {
    
    /**
     * One-of type initialization method.
     * @param privateUser PrivateUser value for privateUser.
     * @return The PrivateUserCase object.
     */
    public static UsersGetAuthenticatedResponse fromPrivateUser(PrivateUser privateUser) {
        return privateUser == null ? null : new PrivateUserCase(privateUser);
    }

    /**
     * One-of type initialization method.
     * @param publicUser PublicUser value for publicUser.
     * @return The PublicUserCase object.
     */
    public static UsersGetAuthenticatedResponse fromPublicUser(PublicUser publicUser) {
        return publicUser == null ? null : new PublicUserCase(publicUser);
    }

    /**
     * Method to match from the provided one-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The one-of type cases callback.
     * @return The one-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for one-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R privateUser(PrivateUser privateUser);

        R publicUser(PublicUser publicUser);
    }

    /**
     * This is a implementation class for PrivateUserCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase
    private static class PrivateUserCase extends UsersGetAuthenticatedResponse {

        @JsonValue
        private PrivateUser privateUser;

        PrivateUserCase(PrivateUser privateUser) {
            this.privateUser = privateUser;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.privateUser(this.privateUser);
        }

        @JsonCreator
        private PrivateUserCase(JsonNode jsonNode) throws IOException {
            this.privateUser = ApiHelper.deserialize(jsonNode,
                PrivateUser.class);
        }

        @Override
        public String toString() {
            return privateUser.toString();
        }
    }

    /**
     * This is a implementation class for PublicUserCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase
    private static class PublicUserCase extends UsersGetAuthenticatedResponse {

        @JsonValue
        private PublicUser publicUser;

        PublicUserCase(PublicUser publicUser) {
            this.publicUser = publicUser;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.publicUser(this.publicUser);
        }

        @JsonCreator
        private PublicUserCase(JsonNode jsonNode) throws IOException {
            this.publicUser = ApiHelper.deserialize(jsonNode,
                PublicUser.class);
        }

        @Override
        public String toString() {
            return publicUser.toString();
        }
    }

    /**
     * This is a custom deserializer class for UsersGetAuthenticatedResponse.
     */
    protected static class UsersGetAuthenticatedResponseDeserializer
            extends JsonDeserializer<UsersGetAuthenticatedResponse> {

        @Override
        public UsersGetAuthenticatedResponse deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(PrivateUserCase.class,
                    PublicUserCase.class), true);
        }
    }

}
