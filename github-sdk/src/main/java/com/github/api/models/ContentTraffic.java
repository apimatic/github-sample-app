/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for ContentTraffic type.
 */
public class ContentTraffic {
    private String path;
    private String title;
    private int count;
    private int uniques;

    /**
     * Default constructor.
     */
    public ContentTraffic() {
    }

    /**
     * Initialization constructor.
     * @param  path  String value for path.
     * @param  title  String value for title.
     * @param  count  int value for count.
     * @param  uniques  int value for uniques.
     */
    public ContentTraffic(
            String path,
            String title,
            int count,
            int uniques) {
        this.path = path;
        this.title = title;
        this.count = count;
        this.uniques = uniques;
    }

    /**
     * Getter for Path.
     * @return Returns the String
     */
    @JsonGetter("path")
    public String getPath() {
        return path;
    }

    /**
     * Setter for Path.
     * @param path Value for String
     */
    @JsonSetter("path")
    public void setPath(String path) {
        this.path = path;
    }

    /**
     * Getter for Title.
     * @return Returns the String
     */
    @JsonGetter("title")
    public String getTitle() {
        return title;
    }

    /**
     * Setter for Title.
     * @param title Value for String
     */
    @JsonSetter("title")
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for Count.
     * @return Returns the int
     */
    @JsonGetter("count")
    public int getCount() {
        return count;
    }

    /**
     * Setter for Count.
     * @param count Value for int
     */
    @JsonSetter("count")
    public void setCount(int count) {
        this.count = count;
    }

    /**
     * Getter for Uniques.
     * @return Returns the int
     */
    @JsonGetter("uniques")
    public int getUniques() {
        return uniques;
    }

    /**
     * Setter for Uniques.
     * @param uniques Value for int
     */
    @JsonSetter("uniques")
    public void setUniques(int uniques) {
        this.uniques = uniques;
    }

    /**
     * Converts this ContentTraffic into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ContentTraffic [" + "path=" + path + ", title=" + title + ", count=" + count
                + ", uniques=" + uniques + "]";
    }

    /**
     * Builds a new {@link ContentTraffic.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ContentTraffic.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(path, title, count, uniques);
        return builder;
    }

    /**
     * Class to build instances of {@link ContentTraffic}.
     */
    public static class Builder {
        private String path;
        private String title;
        private int count;
        private int uniques;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  path  String value for path.
         * @param  title  String value for title.
         * @param  count  int value for count.
         * @param  uniques  int value for uniques.
         */
        public Builder(String path, String title, int count, int uniques) {
            this.path = path;
            this.title = title;
            this.count = count;
            this.uniques = uniques;
        }

        /**
         * Setter for path.
         * @param  path  String value for path.
         * @return Builder
         */
        public Builder path(String path) {
            this.path = path;
            return this;
        }

        /**
         * Setter for title.
         * @param  title  String value for title.
         * @return Builder
         */
        public Builder title(String title) {
            this.title = title;
            return this;
        }

        /**
         * Setter for count.
         * @param  count  int value for count.
         * @return Builder
         */
        public Builder count(int count) {
            this.count = count;
            return this;
        }

        /**
         * Setter for uniques.
         * @param  uniques  int value for uniques.
         * @return Builder
         */
        public Builder uniques(int uniques) {
            this.uniques = uniques;
            return this;
        }

        /**
         * Builds a new {@link ContentTraffic} object using the set fields.
         * @return {@link ContentTraffic}
         */
        public ContentTraffic build() {
            return new ContentTraffic(path, title, count, uniques);
        }
    }
}
