/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for MarketplacePurchase3 type.
 */
public class MarketplacePurchase3 {
    private Account2 account;
    private String billingCycle;
    private Object freeTrialEndsOn;
    private OptionalNullable<String> nextBillingDate;
    private boolean onFreeTrial;
    private Plan4 plan;
    private int unitCount;

    /**
     * Default constructor.
     */
    public MarketplacePurchase3() {
    }

    /**
     * Initialization constructor.
     * @param  account  Account2 value for account.
     * @param  billingCycle  String value for billingCycle.
     * @param  freeTrialEndsOn  Object value for freeTrialEndsOn.
     * @param  onFreeTrial  boolean value for onFreeTrial.
     * @param  plan  Plan4 value for plan.
     * @param  unitCount  int value for unitCount.
     * @param  nextBillingDate  String value for nextBillingDate.
     */
    public MarketplacePurchase3(
            Account2 account,
            String billingCycle,
            Object freeTrialEndsOn,
            boolean onFreeTrial,
            Plan4 plan,
            int unitCount,
            String nextBillingDate) {
        this.account = account;
        this.billingCycle = billingCycle;
        this.freeTrialEndsOn = freeTrialEndsOn;
        this.nextBillingDate = OptionalNullable.of(nextBillingDate);
        this.onFreeTrial = onFreeTrial;
        this.plan = plan;
        this.unitCount = unitCount;
    }

    /**
     * Internal initialization constructor.
     */
    protected MarketplacePurchase3(Account2 account, String billingCycle, Object freeTrialEndsOn,
            boolean onFreeTrial, Plan4 plan, int unitCount,
            OptionalNullable<String> nextBillingDate) {
        this.account = account;
        this.billingCycle = billingCycle;
        this.freeTrialEndsOn = freeTrialEndsOn;
        this.nextBillingDate = nextBillingDate;
        this.onFreeTrial = onFreeTrial;
        this.plan = plan;
        this.unitCount = unitCount;
    }

    /**
     * Getter for Account.
     * @return Returns the Account2
     */
    @JsonGetter("account")
    public Account2 getAccount() {
        return account;
    }

    /**
     * Setter for Account.
     * @param account Value for Account2
     */
    @JsonSetter("account")
    public void setAccount(Account2 account) {
        this.account = account;
    }

    /**
     * Getter for BillingCycle.
     * @return Returns the String
     */
    @JsonGetter("billing_cycle")
    public String getBillingCycle() {
        return billingCycle;
    }

    /**
     * Setter for BillingCycle.
     * @param billingCycle Value for String
     */
    @JsonSetter("billing_cycle")
    public void setBillingCycle(String billingCycle) {
        this.billingCycle = billingCycle;
    }

    /**
     * Getter for FreeTrialEndsOn.
     * @return Returns the Object
     */
    @JsonGetter("free_trial_ends_on")
    public Object getFreeTrialEndsOn() {
        return freeTrialEndsOn;
    }

    /**
     * Setter for FreeTrialEndsOn.
     * @param freeTrialEndsOn Value for Object
     */
    @JsonSetter("free_trial_ends_on")
    public void setFreeTrialEndsOn(Object freeTrialEndsOn) {
        this.freeTrialEndsOn = freeTrialEndsOn;
    }

    /**
     * Internal Getter for NextBillingDate.
     * @return Returns the Internal String
     */
    @JsonGetter("next_billing_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetNextBillingDate() {
        return this.nextBillingDate;
    }

    /**
     * Getter for NextBillingDate.
     * @return Returns the String
     */
    public String getNextBillingDate() {
        return OptionalNullable.getFrom(nextBillingDate);
    }

    /**
     * Setter for NextBillingDate.
     * @param nextBillingDate Value for String
     */
    @JsonSetter("next_billing_date")
    public void setNextBillingDate(String nextBillingDate) {
        this.nextBillingDate = OptionalNullable.of(nextBillingDate);
    }

    /**
     * UnSetter for NextBillingDate.
     */
    public void unsetNextBillingDate() {
        nextBillingDate = null;
    }

    /**
     * Getter for OnFreeTrial.
     * @return Returns the boolean
     */
    @JsonGetter("on_free_trial")
    public boolean getOnFreeTrial() {
        return onFreeTrial;
    }

    /**
     * Setter for OnFreeTrial.
     * @param onFreeTrial Value for boolean
     */
    @JsonSetter("on_free_trial")
    public void setOnFreeTrial(boolean onFreeTrial) {
        this.onFreeTrial = onFreeTrial;
    }

    /**
     * Getter for Plan.
     * @return Returns the Plan4
     */
    @JsonGetter("plan")
    public Plan4 getPlan() {
        return plan;
    }

    /**
     * Setter for Plan.
     * @param plan Value for Plan4
     */
    @JsonSetter("plan")
    public void setPlan(Plan4 plan) {
        this.plan = plan;
    }

    /**
     * Getter for UnitCount.
     * @return Returns the int
     */
    @JsonGetter("unit_count")
    public int getUnitCount() {
        return unitCount;
    }

    /**
     * Setter for UnitCount.
     * @param unitCount Value for int
     */
    @JsonSetter("unit_count")
    public void setUnitCount(int unitCount) {
        this.unitCount = unitCount;
    }

    /**
     * Converts this MarketplacePurchase3 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "MarketplacePurchase3 [" + "account=" + account + ", billingCycle=" + billingCycle
                + ", freeTrialEndsOn=" + freeTrialEndsOn + ", onFreeTrial=" + onFreeTrial
                + ", plan=" + plan + ", unitCount=" + unitCount + ", nextBillingDate="
                + nextBillingDate + "]";
    }

    /**
     * Builds a new {@link MarketplacePurchase3.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link MarketplacePurchase3.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(account, billingCycle, freeTrialEndsOn, onFreeTrial, plan,
                unitCount);
        builder.nextBillingDate = internalGetNextBillingDate();
        return builder;
    }

    /**
     * Class to build instances of {@link MarketplacePurchase3}.
     */
    public static class Builder {
        private Account2 account;
        private String billingCycle;
        private Object freeTrialEndsOn;
        private boolean onFreeTrial;
        private Plan4 plan;
        private int unitCount;
        private OptionalNullable<String> nextBillingDate;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  account  Account2 value for account.
         * @param  billingCycle  String value for billingCycle.
         * @param  freeTrialEndsOn  Object value for freeTrialEndsOn.
         * @param  onFreeTrial  boolean value for onFreeTrial.
         * @param  plan  Plan4 value for plan.
         * @param  unitCount  int value for unitCount.
         */
        public Builder(Account2 account, String billingCycle, Object freeTrialEndsOn,
                boolean onFreeTrial, Plan4 plan, int unitCount) {
            this.account = account;
            this.billingCycle = billingCycle;
            this.freeTrialEndsOn = freeTrialEndsOn;
            this.onFreeTrial = onFreeTrial;
            this.plan = plan;
            this.unitCount = unitCount;
        }

        /**
         * Setter for account.
         * @param  account  Account2 value for account.
         * @return Builder
         */
        public Builder account(Account2 account) {
            this.account = account;
            return this;
        }

        /**
         * Setter for billingCycle.
         * @param  billingCycle  String value for billingCycle.
         * @return Builder
         */
        public Builder billingCycle(String billingCycle) {
            this.billingCycle = billingCycle;
            return this;
        }

        /**
         * Setter for freeTrialEndsOn.
         * @param  freeTrialEndsOn  Object value for freeTrialEndsOn.
         * @return Builder
         */
        public Builder freeTrialEndsOn(Object freeTrialEndsOn) {
            this.freeTrialEndsOn = freeTrialEndsOn;
            return this;
        }

        /**
         * Setter for onFreeTrial.
         * @param  onFreeTrial  boolean value for onFreeTrial.
         * @return Builder
         */
        public Builder onFreeTrial(boolean onFreeTrial) {
            this.onFreeTrial = onFreeTrial;
            return this;
        }

        /**
         * Setter for plan.
         * @param  plan  Plan4 value for plan.
         * @return Builder
         */
        public Builder plan(Plan4 plan) {
            this.plan = plan;
            return this;
        }

        /**
         * Setter for unitCount.
         * @param  unitCount  int value for unitCount.
         * @return Builder
         */
        public Builder unitCount(int unitCount) {
            this.unitCount = unitCount;
            return this;
        }

        /**
         * Setter for nextBillingDate.
         * @param  nextBillingDate  String value for nextBillingDate.
         * @return Builder
         */
        public Builder nextBillingDate(String nextBillingDate) {
            this.nextBillingDate = OptionalNullable.of(nextBillingDate);
            return this;
        }

        /**
         * UnSetter for nextBillingDate.
         * @return Builder
         */
        public Builder unsetNextBillingDate() {
            nextBillingDate = null;
            return this;
        }

        /**
         * Builds a new {@link MarketplacePurchase3} object using the set fields.
         * @return {@link MarketplacePurchase3}
         */
        public MarketplacePurchase3 build() {
            return new MarketplacePurchase3(account, billingCycle, freeTrialEndsOn, onFreeTrial,
                    plan, unitCount, nextBillingDate);
        }
    }
}
