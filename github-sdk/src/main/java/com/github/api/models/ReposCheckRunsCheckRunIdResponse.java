/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for ReposCheckRunsCheckRunIdResponse type.
 */
public class ReposCheckRunsCheckRunIdResponse {
    private int id;
    private String headSha;
    private String nodeId;
    private String externalId;
    private String url;
    private String htmlUrl;
    private String detailsUrl;
    private Status6Enum status;
    private Object conclusion;
    private LocalDateTime startedAt;
    private LocalDateTime completedAt;
    private Output output;
    private String name;
    private Object checkSuite;
    private Object app;
    private List<PullRequestMinimal> pullRequests;
    private Deployment22 deployment;

    /**
     * Default constructor.
     */
    public ReposCheckRunsCheckRunIdResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  int value for id.
     * @param  headSha  String value for headSha.
     * @param  nodeId  String value for nodeId.
     * @param  externalId  String value for externalId.
     * @param  url  String value for url.
     * @param  htmlUrl  String value for htmlUrl.
     * @param  detailsUrl  String value for detailsUrl.
     * @param  status  Status6Enum value for status.
     * @param  conclusion  Object value for conclusion.
     * @param  startedAt  LocalDateTime value for startedAt.
     * @param  completedAt  LocalDateTime value for completedAt.
     * @param  output  Output value for output.
     * @param  name  String value for name.
     * @param  checkSuite  Object value for checkSuite.
     * @param  app  Object value for app.
     * @param  pullRequests  List of PullRequestMinimal value for pullRequests.
     * @param  deployment  Deployment22 value for deployment.
     */
    public ReposCheckRunsCheckRunIdResponse(
            int id,
            String headSha,
            String nodeId,
            String externalId,
            String url,
            String htmlUrl,
            String detailsUrl,
            Status6Enum status,
            Object conclusion,
            LocalDateTime startedAt,
            LocalDateTime completedAt,
            Output output,
            String name,
            Object checkSuite,
            Object app,
            List<PullRequestMinimal> pullRequests,
            Deployment22 deployment) {
        this.id = id;
        this.headSha = headSha;
        this.nodeId = nodeId;
        this.externalId = externalId;
        this.url = url;
        this.htmlUrl = htmlUrl;
        this.detailsUrl = detailsUrl;
        this.status = status;
        this.conclusion = conclusion;
        this.startedAt = startedAt;
        this.completedAt = completedAt;
        this.output = output;
        this.name = name;
        this.checkSuite = checkSuite;
        this.app = app;
        this.pullRequests = pullRequests;
        this.deployment = deployment;
    }

    /**
     * Getter for Id.
     * The id of the check.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * The id of the check.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for HeadSha.
     * The SHA of the commit that is being checked.
     * @return Returns the String
     */
    @JsonGetter("head_sha")
    public String getHeadSha() {
        return headSha;
    }

    /**
     * Setter for HeadSha.
     * The SHA of the commit that is being checked.
     * @param headSha Value for String
     */
    @JsonSetter("head_sha")
    public void setHeadSha(String headSha) {
        this.headSha = headSha;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for ExternalId.
     * @return Returns the String
     */
    @JsonGetter("external_id")
    public String getExternalId() {
        return externalId;
    }

    /**
     * Setter for ExternalId.
     * @param externalId Value for String
     */
    @JsonSetter("external_id")
    public void setExternalId(String externalId) {
        this.externalId = externalId;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for HtmlUrl.
     * @return Returns the String
     */
    @JsonGetter("html_url")
    public String getHtmlUrl() {
        return htmlUrl;
    }

    /**
     * Setter for HtmlUrl.
     * @param htmlUrl Value for String
     */
    @JsonSetter("html_url")
    public void setHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
    }

    /**
     * Getter for DetailsUrl.
     * @return Returns the String
     */
    @JsonGetter("details_url")
    public String getDetailsUrl() {
        return detailsUrl;
    }

    /**
     * Setter for DetailsUrl.
     * @param detailsUrl Value for String
     */
    @JsonSetter("details_url")
    public void setDetailsUrl(String detailsUrl) {
        this.detailsUrl = detailsUrl;
    }

    /**
     * Getter for Status.
     * @return Returns the Status6Enum
     */
    @JsonGetter("status")
    public Status6Enum getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * @param status Value for Status6Enum
     */
    @JsonSetter("status")
    public void setStatus(Status6Enum status) {
        this.status = status;
    }

    /**
     * Getter for Conclusion.
     * @return Returns the Object
     */
    @JsonGetter("conclusion")
    public Object getConclusion() {
        return conclusion;
    }

    /**
     * Setter for Conclusion.
     * @param conclusion Value for Object
     */
    @JsonSetter("conclusion")
    public void setConclusion(Object conclusion) {
        this.conclusion = conclusion;
    }

    /**
     * Getter for StartedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("started_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getStartedAt() {
        return startedAt;
    }

    /**
     * Setter for StartedAt.
     * @param startedAt Value for LocalDateTime
     */
    @JsonSetter("started_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setStartedAt(LocalDateTime startedAt) {
        this.startedAt = startedAt;
    }

    /**
     * Getter for CompletedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("completed_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCompletedAt() {
        return completedAt;
    }

    /**
     * Setter for CompletedAt.
     * @param completedAt Value for LocalDateTime
     */
    @JsonSetter("completed_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCompletedAt(LocalDateTime completedAt) {
        this.completedAt = completedAt;
    }

    /**
     * Getter for Output.
     * @return Returns the Output
     */
    @JsonGetter("output")
    public Output getOutput() {
        return output;
    }

    /**
     * Setter for Output.
     * @param output Value for Output
     */
    @JsonSetter("output")
    public void setOutput(Output output) {
        this.output = output;
    }

    /**
     * Getter for Name.
     * The name of the check.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the check.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for CheckSuite.
     * @return Returns the Object
     */
    @JsonGetter("check_suite")
    public Object getCheckSuite() {
        return checkSuite;
    }

    /**
     * Setter for CheckSuite.
     * @param checkSuite Value for Object
     */
    @JsonSetter("check_suite")
    public void setCheckSuite(Object checkSuite) {
        this.checkSuite = checkSuite;
    }

    /**
     * Getter for App.
     * @return Returns the Object
     */
    @JsonGetter("app")
    public Object getApp() {
        return app;
    }

    /**
     * Setter for App.
     * @param app Value for Object
     */
    @JsonSetter("app")
    public void setApp(Object app) {
        this.app = app;
    }

    /**
     * Getter for PullRequests.
     * @return Returns the List of PullRequestMinimal
     */
    @JsonGetter("pull_requests")
    public List<PullRequestMinimal> getPullRequests() {
        return pullRequests;
    }

    /**
     * Setter for PullRequests.
     * @param pullRequests Value for List of PullRequestMinimal
     */
    @JsonSetter("pull_requests")
    public void setPullRequests(List<PullRequestMinimal> pullRequests) {
        this.pullRequests = pullRequests;
    }

    /**
     * Getter for Deployment.
     * @return Returns the Deployment22
     */
    @JsonGetter("deployment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Deployment22 getDeployment() {
        return deployment;
    }

    /**
     * Setter for Deployment.
     * @param deployment Value for Deployment22
     */
    @JsonSetter("deployment")
    public void setDeployment(Deployment22 deployment) {
        this.deployment = deployment;
    }

    /**
     * Converts this ReposCheckRunsCheckRunIdResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposCheckRunsCheckRunIdResponse [" + "id=" + id + ", headSha=" + headSha
                + ", nodeId=" + nodeId + ", externalId=" + externalId + ", url=" + url
                + ", htmlUrl=" + htmlUrl + ", detailsUrl=" + detailsUrl + ", status=" + status
                + ", conclusion=" + conclusion + ", startedAt=" + startedAt + ", completedAt="
                + completedAt + ", output=" + output + ", name=" + name + ", checkSuite="
                + checkSuite + ", app=" + app + ", pullRequests=" + pullRequests + ", deployment="
                + deployment + "]";
    }

    /**
     * Builds a new {@link ReposCheckRunsCheckRunIdResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposCheckRunsCheckRunIdResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, headSha, nodeId, externalId, url, htmlUrl, detailsUrl,
                status, conclusion, startedAt, completedAt, output, name, checkSuite, app,
                pullRequests)
                .deployment(getDeployment());
        return builder;
    }

    /**
     * Class to build instances of {@link ReposCheckRunsCheckRunIdResponse}.
     */
    public static class Builder {
        private int id;
        private String headSha;
        private String nodeId;
        private String externalId;
        private String url;
        private String htmlUrl;
        private String detailsUrl;
        private Status6Enum status;
        private Object conclusion;
        private LocalDateTime startedAt;
        private LocalDateTime completedAt;
        private Output output;
        private String name;
        private Object checkSuite;
        private Object app;
        private List<PullRequestMinimal> pullRequests;
        private Deployment22 deployment;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  int value for id.
         * @param  headSha  String value for headSha.
         * @param  nodeId  String value for nodeId.
         * @param  externalId  String value for externalId.
         * @param  url  String value for url.
         * @param  htmlUrl  String value for htmlUrl.
         * @param  detailsUrl  String value for detailsUrl.
         * @param  status  Status6Enum value for status.
         * @param  conclusion  Object value for conclusion.
         * @param  startedAt  LocalDateTime value for startedAt.
         * @param  completedAt  LocalDateTime value for completedAt.
         * @param  output  Output value for output.
         * @param  name  String value for name.
         * @param  checkSuite  Object value for checkSuite.
         * @param  app  Object value for app.
         * @param  pullRequests  List of PullRequestMinimal value for pullRequests.
         */
        public Builder(int id, String headSha, String nodeId, String externalId, String url,
                String htmlUrl, String detailsUrl, Status6Enum status, Object conclusion,
                LocalDateTime startedAt, LocalDateTime completedAt, Output output, String name,
                Object checkSuite, Object app, List<PullRequestMinimal> pullRequests) {
            this.id = id;
            this.headSha = headSha;
            this.nodeId = nodeId;
            this.externalId = externalId;
            this.url = url;
            this.htmlUrl = htmlUrl;
            this.detailsUrl = detailsUrl;
            this.status = status;
            this.conclusion = conclusion;
            this.startedAt = startedAt;
            this.completedAt = completedAt;
            this.output = output;
            this.name = name;
            this.checkSuite = checkSuite;
            this.app = app;
            this.pullRequests = pullRequests;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for headSha.
         * @param  headSha  String value for headSha.
         * @return Builder
         */
        public Builder headSha(String headSha) {
            this.headSha = headSha;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for externalId.
         * @param  externalId  String value for externalId.
         * @return Builder
         */
        public Builder externalId(String externalId) {
            this.externalId = externalId;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for htmlUrl.
         * @param  htmlUrl  String value for htmlUrl.
         * @return Builder
         */
        public Builder htmlUrl(String htmlUrl) {
            this.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * Setter for detailsUrl.
         * @param  detailsUrl  String value for detailsUrl.
         * @return Builder
         */
        public Builder detailsUrl(String detailsUrl) {
            this.detailsUrl = detailsUrl;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  Status6Enum value for status.
         * @return Builder
         */
        public Builder status(Status6Enum status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for conclusion.
         * @param  conclusion  Object value for conclusion.
         * @return Builder
         */
        public Builder conclusion(Object conclusion) {
            this.conclusion = conclusion;
            return this;
        }

        /**
         * Setter for startedAt.
         * @param  startedAt  LocalDateTime value for startedAt.
         * @return Builder
         */
        public Builder startedAt(LocalDateTime startedAt) {
            this.startedAt = startedAt;
            return this;
        }

        /**
         * Setter for completedAt.
         * @param  completedAt  LocalDateTime value for completedAt.
         * @return Builder
         */
        public Builder completedAt(LocalDateTime completedAt) {
            this.completedAt = completedAt;
            return this;
        }

        /**
         * Setter for output.
         * @param  output  Output value for output.
         * @return Builder
         */
        public Builder output(Output output) {
            this.output = output;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for checkSuite.
         * @param  checkSuite  Object value for checkSuite.
         * @return Builder
         */
        public Builder checkSuite(Object checkSuite) {
            this.checkSuite = checkSuite;
            return this;
        }

        /**
         * Setter for app.
         * @param  app  Object value for app.
         * @return Builder
         */
        public Builder app(Object app) {
            this.app = app;
            return this;
        }

        /**
         * Setter for pullRequests.
         * @param  pullRequests  List of PullRequestMinimal value for pullRequests.
         * @return Builder
         */
        public Builder pullRequests(List<PullRequestMinimal> pullRequests) {
            this.pullRequests = pullRequests;
            return this;
        }

        /**
         * Setter for deployment.
         * @param  deployment  Deployment22 value for deployment.
         * @return Builder
         */
        public Builder deployment(Deployment22 deployment) {
            this.deployment = deployment;
            return this;
        }

        /**
         * Builds a new {@link ReposCheckRunsCheckRunIdResponse} object using the set fields.
         * @return {@link ReposCheckRunsCheckRunIdResponse}
         */
        public ReposCheckRunsCheckRunIdResponse build() {
            return new ReposCheckRunsCheckRunIdResponse(id, headSha, nodeId, externalId, url,
                    htmlUrl, detailsUrl, status, conclusion, startedAt, completedAt, output, name,
                    checkSuite, app, pullRequests, deployment);
        }
    }
}
