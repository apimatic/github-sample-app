/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for ReposContentsPathRequest type.
 */
public class ReposContentsPathRequest {
    private String message;
    private String content;
    private String sha;
    private String branch;
    private Committer8 committer;
    private Author16 author;

    /**
     * Default constructor.
     */
    public ReposContentsPathRequest() {
    }

    /**
     * Initialization constructor.
     * @param  message  String value for message.
     * @param  content  String value for content.
     * @param  sha  String value for sha.
     * @param  branch  String value for branch.
     * @param  committer  Committer8 value for committer.
     * @param  author  Author16 value for author.
     */
    public ReposContentsPathRequest(
            String message,
            String content,
            String sha,
            String branch,
            Committer8 committer,
            Author16 author) {
        this.message = message;
        this.content = content;
        this.sha = sha;
        this.branch = branch;
        this.committer = committer;
        this.author = author;
    }

    /**
     * Getter for Message.
     * The commit message.
     * @return Returns the String
     */
    @JsonGetter("message")
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * The commit message.
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for Content.
     * The new file content, using Base64 encoding.
     * @return Returns the String
     */
    @JsonGetter("content")
    public String getContent() {
        return content;
    }

    /**
     * Setter for Content.
     * The new file content, using Base64 encoding.
     * @param content Value for String
     */
    @JsonSetter("content")
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * Getter for Sha.
     * **Required if you are updating a file**. The blob SHA of the file being replaced.
     * @return Returns the String
     */
    @JsonGetter("sha")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSha() {
        return sha;
    }

    /**
     * Setter for Sha.
     * **Required if you are updating a file**. The blob SHA of the file being replaced.
     * @param sha Value for String
     */
    @JsonSetter("sha")
    public void setSha(String sha) {
        this.sha = sha;
    }

    /**
     * Getter for Branch.
     * The branch name. Default: the repository’s default branch (usually `master`)
     * @return Returns the String
     */
    @JsonGetter("branch")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBranch() {
        return branch;
    }

    /**
     * Setter for Branch.
     * The branch name. Default: the repository’s default branch (usually `master`)
     * @param branch Value for String
     */
    @JsonSetter("branch")
    public void setBranch(String branch) {
        this.branch = branch;
    }

    /**
     * Getter for Committer.
     * @return Returns the Committer8
     */
    @JsonGetter("committer")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Committer8 getCommitter() {
        return committer;
    }

    /**
     * Setter for Committer.
     * @param committer Value for Committer8
     */
    @JsonSetter("committer")
    public void setCommitter(Committer8 committer) {
        this.committer = committer;
    }

    /**
     * Getter for Author.
     * @return Returns the Author16
     */
    @JsonGetter("author")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Author16 getAuthor() {
        return author;
    }

    /**
     * Setter for Author.
     * @param author Value for Author16
     */
    @JsonSetter("author")
    public void setAuthor(Author16 author) {
        this.author = author;
    }

    /**
     * Converts this ReposContentsPathRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposContentsPathRequest [" + "message=" + message + ", content=" + content
                + ", sha=" + sha + ", branch=" + branch + ", committer=" + committer + ", author="
                + author + "]";
    }

    /**
     * Builds a new {@link ReposContentsPathRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposContentsPathRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(message, content)
                .sha(getSha())
                .branch(getBranch())
                .committer(getCommitter())
                .author(getAuthor());
        return builder;
    }

    /**
     * Class to build instances of {@link ReposContentsPathRequest}.
     */
    public static class Builder {
        private String message;
        private String content;
        private String sha;
        private String branch;
        private Committer8 committer;
        private Author16 author;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  message  String value for message.
         * @param  content  String value for content.
         */
        public Builder(String message, String content) {
            this.message = message;
            this.content = content;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for content.
         * @param  content  String value for content.
         * @return Builder
         */
        public Builder content(String content) {
            this.content = content;
            return this;
        }

        /**
         * Setter for sha.
         * @param  sha  String value for sha.
         * @return Builder
         */
        public Builder sha(String sha) {
            this.sha = sha;
            return this;
        }

        /**
         * Setter for branch.
         * @param  branch  String value for branch.
         * @return Builder
         */
        public Builder branch(String branch) {
            this.branch = branch;
            return this;
        }

        /**
         * Setter for committer.
         * @param  committer  Committer8 value for committer.
         * @return Builder
         */
        public Builder committer(Committer8 committer) {
            this.committer = committer;
            return this;
        }

        /**
         * Setter for author.
         * @param  author  Author16 value for author.
         * @return Builder
         */
        public Builder author(Author16 author) {
            this.author = author;
            return this;
        }

        /**
         * Builds a new {@link ReposContentsPathRequest} object using the set fields.
         * @return {@link ReposContentsPathRequest}
         */
        public ReposContentsPathRequest build() {
            return new ReposContentsPathRequest(message, content, sha, branch, committer, author);
        }
    }
}
