/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for ParticipationStats type.
 */
public class ParticipationStats {
    private List<Integer> all;
    private List<Integer> owner;

    /**
     * Default constructor.
     */
    public ParticipationStats() {
    }

    /**
     * Initialization constructor.
     * @param  all  List of Integer value for all.
     * @param  owner  List of Integer value for owner.
     */
    public ParticipationStats(
            List<Integer> all,
            List<Integer> owner) {
        this.all = all;
        this.owner = owner;
    }

    /**
     * Getter for All.
     * @return Returns the List of Integer
     */
    @JsonGetter("all")
    public List<Integer> getAll() {
        return all;
    }

    /**
     * Setter for All.
     * @param all Value for List of Integer
     */
    @JsonSetter("all")
    public void setAll(List<Integer> all) {
        this.all = all;
    }

    /**
     * Getter for Owner.
     * @return Returns the List of Integer
     */
    @JsonGetter("owner")
    public List<Integer> getOwner() {
        return owner;
    }

    /**
     * Setter for Owner.
     * @param owner Value for List of Integer
     */
    @JsonSetter("owner")
    public void setOwner(List<Integer> owner) {
        this.owner = owner;
    }

    /**
     * Converts this ParticipationStats into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ParticipationStats [" + "all=" + all + ", owner=" + owner + "]";
    }

    /**
     * Builds a new {@link ParticipationStats.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ParticipationStats.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(all, owner);
        return builder;
    }

    /**
     * Class to build instances of {@link ParticipationStats}.
     */
    public static class Builder {
        private List<Integer> all;
        private List<Integer> owner;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  all  List of Integer value for all.
         * @param  owner  List of Integer value for owner.
         */
        public Builder(List<Integer> all, List<Integer> owner) {
            this.all = all;
            this.owner = owner;
        }

        /**
         * Setter for all.
         * @param  all  List of Integer value for all.
         * @return Builder
         */
        public Builder all(List<Integer> all) {
            this.all = all;
            return this;
        }

        /**
         * Setter for owner.
         * @param  owner  List of Integer value for owner.
         * @return Builder
         */
        public Builder owner(List<Integer> owner) {
            this.owner = owner;
            return this;
        }

        /**
         * Builds a new {@link ParticipationStats} object using the set fields.
         * @return {@link ParticipationStats}
         */
        public ParticipationStats build() {
            return new ParticipationStats(all, owner);
        }
    }
}
