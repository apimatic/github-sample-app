/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Identifier type.
 */
public class Identifier {
    private Type1Enum type;
    private String value;

    /**
     * Default constructor.
     */
    public Identifier() {
    }

    /**
     * Initialization constructor.
     * @param  type  Type1Enum value for type.
     * @param  value  String value for value.
     */
    public Identifier(
            Type1Enum type,
            String value) {
        this.type = type;
        this.value = value;
    }

    /**
     * Getter for Type.
     * @return Returns the Type1Enum
     */
    @JsonGetter("type")
    public Type1Enum getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for Type1Enum
     */
    @JsonSetter("type")
    public void setType(Type1Enum type) {
        this.type = type;
    }

    /**
     * Getter for Value.
     * The value of the advisory identifer.
     * @return Returns the String
     */
    @JsonGetter("value")
    public String getValue() {
        return value;
    }

    /**
     * Setter for Value.
     * The value of the advisory identifer.
     * @param value Value for String
     */
    @JsonSetter("value")
    public void setValue(String value) {
        this.value = value;
    }

    /**
     * Converts this Identifier into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Identifier [" + "type=" + type + ", value=" + value + "]";
    }

    /**
     * Builds a new {@link Identifier.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Identifier.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(type, value);
        return builder;
    }

    /**
     * Class to build instances of {@link Identifier}.
     */
    public static class Builder {
        private Type1Enum type;
        private String value;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  type  Type1Enum value for type.
         * @param  value  String value for value.
         */
        public Builder(Type1Enum type, String value) {
            this.type = type;
            this.value = value;
        }

        /**
         * Setter for type.
         * @param  type  Type1Enum value for type.
         * @return Builder
         */
        public Builder type(Type1Enum type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for value.
         * @param  value  String value for value.
         * @return Builder
         */
        public Builder value(String value) {
            this.value = value;
            return this;
        }

        /**
         * Builds a new {@link Identifier} object using the set fields.
         * @return {@link Identifier}
         */
        public Identifier build() {
            return new Identifier(type, value);
        }
    }
}
