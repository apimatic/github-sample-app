/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for IssueEventRename type.
 */
public class IssueEventRename {
    private String from;
    private String to;

    /**
     * Default constructor.
     */
    public IssueEventRename() {
    }

    /**
     * Initialization constructor.
     * @param  from  String value for from.
     * @param  to  String value for to.
     */
    public IssueEventRename(
            String from,
            String to) {
        this.from = from;
        this.to = to;
    }

    /**
     * Getter for From.
     * @return Returns the String
     */
    @JsonGetter("from")
    public String getFrom() {
        return from;
    }

    /**
     * Setter for From.
     * @param from Value for String
     */
    @JsonSetter("from")
    public void setFrom(String from) {
        this.from = from;
    }

    /**
     * Getter for To.
     * @return Returns the String
     */
    @JsonGetter("to")
    public String getTo() {
        return to;
    }

    /**
     * Setter for To.
     * @param to Value for String
     */
    @JsonSetter("to")
    public void setTo(String to) {
        this.to = to;
    }

    /**
     * Converts this IssueEventRename into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "IssueEventRename [" + "from=" + from + ", to=" + to + "]";
    }

    /**
     * Builds a new {@link IssueEventRename.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link IssueEventRename.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(from, to);
        return builder;
    }

    /**
     * Class to build instances of {@link IssueEventRename}.
     */
    public static class Builder {
        private String from;
        private String to;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  from  String value for from.
         * @param  to  String value for to.
         */
        public Builder(String from, String to) {
            this.from = from;
            this.to = to;
        }

        /**
         * Setter for from.
         * @param  from  String value for from.
         * @return Builder
         */
        public Builder from(String from) {
            this.from = from;
            return this;
        }

        /**
         * Setter for to.
         * @param  to  String value for to.
         * @return Builder
         */
        public Builder to(String to) {
            this.to = to;
            return this;
        }

        /**
         * Builds a new {@link IssueEventRename} object using the set fields.
         * @return {@link IssueEventRename}
         */
        public IssueEventRename build() {
            return new IssueEventRename(from, to);
        }
    }
}
