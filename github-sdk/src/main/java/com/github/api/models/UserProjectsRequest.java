/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for UserProjectsRequest type.
 */
public class UserProjectsRequest {
    private String name;
    private OptionalNullable<String> body;

    /**
     * Default constructor.
     */
    public UserProjectsRequest() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  body  String value for body.
     */
    public UserProjectsRequest(
            String name,
            String body) {
        this.name = name;
        this.body = OptionalNullable.of(body);
    }

    /**
     * Internal initialization constructor.
     */
    protected UserProjectsRequest(String name, OptionalNullable<String> body) {
        this.name = name;
        this.body = body;
    }

    /**
     * Getter for Name.
     * Name of the project
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Name of the project
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Internal Getter for Body.
     * Body of the project
     * @return Returns the Internal String
     */
    @JsonGetter("body")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetBody() {
        return this.body;
    }

    /**
     * Getter for Body.
     * Body of the project
     * @return Returns the String
     */
    public String getBody() {
        return OptionalNullable.getFrom(body);
    }

    /**
     * Setter for Body.
     * Body of the project
     * @param body Value for String
     */
    @JsonSetter("body")
    public void setBody(String body) {
        this.body = OptionalNullable.of(body);
    }

    /**
     * UnSetter for Body.
     * Body of the project
     */
    public void unsetBody() {
        body = null;
    }

    /**
     * Converts this UserProjectsRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UserProjectsRequest [" + "name=" + name + ", body=" + body + "]";
    }

    /**
     * Builds a new {@link UserProjectsRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UserProjectsRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name);
        builder.body = internalGetBody();
        return builder;
    }

    /**
     * Class to build instances of {@link UserProjectsRequest}.
     */
    public static class Builder {
        private String name;
        private OptionalNullable<String> body;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         */
        public Builder(String name) {
            this.name = name;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for body.
         * @param  body  String value for body.
         * @return Builder
         */
        public Builder body(String body) {
            this.body = OptionalNullable.of(body);
            return this;
        }

        /**
         * UnSetter for body.
         * @return Builder
         */
        public Builder unsetBody() {
            body = null;
            return this;
        }

        /**
         * Builds a new {@link UserProjectsRequest} object using the set fields.
         * @return {@link UserProjectsRequest}
         */
        public UserProjectsRequest build() {
            return new UserProjectsRequest(name, body);
        }
    }
}
