/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for RunnerApplication type.
 */
public class RunnerApplication {
    private String os;
    private String architecture;
    private String downloadUrl;
    private String filename;
    private String tempDownloadToken;
    private String sha256Checksum;

    /**
     * Default constructor.
     */
    public RunnerApplication() {
    }

    /**
     * Initialization constructor.
     * @param  os  String value for os.
     * @param  architecture  String value for architecture.
     * @param  downloadUrl  String value for downloadUrl.
     * @param  filename  String value for filename.
     * @param  tempDownloadToken  String value for tempDownloadToken.
     * @param  sha256Checksum  String value for sha256Checksum.
     */
    public RunnerApplication(
            String os,
            String architecture,
            String downloadUrl,
            String filename,
            String tempDownloadToken,
            String sha256Checksum) {
        this.os = os;
        this.architecture = architecture;
        this.downloadUrl = downloadUrl;
        this.filename = filename;
        this.tempDownloadToken = tempDownloadToken;
        this.sha256Checksum = sha256Checksum;
    }

    /**
     * Getter for Os.
     * @return Returns the String
     */
    @JsonGetter("os")
    public String getOs() {
        return os;
    }

    /**
     * Setter for Os.
     * @param os Value for String
     */
    @JsonSetter("os")
    public void setOs(String os) {
        this.os = os;
    }

    /**
     * Getter for Architecture.
     * @return Returns the String
     */
    @JsonGetter("architecture")
    public String getArchitecture() {
        return architecture;
    }

    /**
     * Setter for Architecture.
     * @param architecture Value for String
     */
    @JsonSetter("architecture")
    public void setArchitecture(String architecture) {
        this.architecture = architecture;
    }

    /**
     * Getter for DownloadUrl.
     * @return Returns the String
     */
    @JsonGetter("download_url")
    public String getDownloadUrl() {
        return downloadUrl;
    }

    /**
     * Setter for DownloadUrl.
     * @param downloadUrl Value for String
     */
    @JsonSetter("download_url")
    public void setDownloadUrl(String downloadUrl) {
        this.downloadUrl = downloadUrl;
    }

    /**
     * Getter for Filename.
     * @return Returns the String
     */
    @JsonGetter("filename")
    public String getFilename() {
        return filename;
    }

    /**
     * Setter for Filename.
     * @param filename Value for String
     */
    @JsonSetter("filename")
    public void setFilename(String filename) {
        this.filename = filename;
    }

    /**
     * Getter for TempDownloadToken.
     * A short lived bearer token used to download the runner, if needed.
     * @return Returns the String
     */
    @JsonGetter("temp_download_token")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTempDownloadToken() {
        return tempDownloadToken;
    }

    /**
     * Setter for TempDownloadToken.
     * A short lived bearer token used to download the runner, if needed.
     * @param tempDownloadToken Value for String
     */
    @JsonSetter("temp_download_token")
    public void setTempDownloadToken(String tempDownloadToken) {
        this.tempDownloadToken = tempDownloadToken;
    }

    /**
     * Getter for Sha256Checksum.
     * @return Returns the String
     */
    @JsonGetter("sha256_checksum")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSha256Checksum() {
        return sha256Checksum;
    }

    /**
     * Setter for Sha256Checksum.
     * @param sha256Checksum Value for String
     */
    @JsonSetter("sha256_checksum")
    public void setSha256Checksum(String sha256Checksum) {
        this.sha256Checksum = sha256Checksum;
    }

    /**
     * Converts this RunnerApplication into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "RunnerApplication [" + "os=" + os + ", architecture=" + architecture
                + ", downloadUrl=" + downloadUrl + ", filename=" + filename + ", tempDownloadToken="
                + tempDownloadToken + ", sha256Checksum=" + sha256Checksum + "]";
    }

    /**
     * Builds a new {@link RunnerApplication.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link RunnerApplication.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(os, architecture, downloadUrl, filename)
                .tempDownloadToken(getTempDownloadToken())
                .sha256Checksum(getSha256Checksum());
        return builder;
    }

    /**
     * Class to build instances of {@link RunnerApplication}.
     */
    public static class Builder {
        private String os;
        private String architecture;
        private String downloadUrl;
        private String filename;
        private String tempDownloadToken;
        private String sha256Checksum;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  os  String value for os.
         * @param  architecture  String value for architecture.
         * @param  downloadUrl  String value for downloadUrl.
         * @param  filename  String value for filename.
         */
        public Builder(String os, String architecture, String downloadUrl, String filename) {
            this.os = os;
            this.architecture = architecture;
            this.downloadUrl = downloadUrl;
            this.filename = filename;
        }

        /**
         * Setter for os.
         * @param  os  String value for os.
         * @return Builder
         */
        public Builder os(String os) {
            this.os = os;
            return this;
        }

        /**
         * Setter for architecture.
         * @param  architecture  String value for architecture.
         * @return Builder
         */
        public Builder architecture(String architecture) {
            this.architecture = architecture;
            return this;
        }

        /**
         * Setter for downloadUrl.
         * @param  downloadUrl  String value for downloadUrl.
         * @return Builder
         */
        public Builder downloadUrl(String downloadUrl) {
            this.downloadUrl = downloadUrl;
            return this;
        }

        /**
         * Setter for filename.
         * @param  filename  String value for filename.
         * @return Builder
         */
        public Builder filename(String filename) {
            this.filename = filename;
            return this;
        }

        /**
         * Setter for tempDownloadToken.
         * @param  tempDownloadToken  String value for tempDownloadToken.
         * @return Builder
         */
        public Builder tempDownloadToken(String tempDownloadToken) {
            this.tempDownloadToken = tempDownloadToken;
            return this;
        }

        /**
         * Setter for sha256Checksum.
         * @param  sha256Checksum  String value for sha256Checksum.
         * @return Builder
         */
        public Builder sha256Checksum(String sha256Checksum) {
            this.sha256Checksum = sha256Checksum;
            return this;
        }

        /**
         * Builds a new {@link RunnerApplication} object using the set fields.
         * @return {@link RunnerApplication}
         */
        public RunnerApplication build() {
            return new RunnerApplication(os, architecture, downloadUrl, filename, tempDownloadToken,
                    sha256Checksum);
        }
    }
}
