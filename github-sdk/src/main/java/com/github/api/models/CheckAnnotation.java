/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for CheckAnnotation type.
 */
public class CheckAnnotation {
    private String path;
    private int startLine;
    private int endLine;
    private Integer startColumn;
    private Integer endColumn;
    private String annotationLevel;
    private String title;
    private String message;
    private String rawDetails;
    private String blobHref;

    /**
     * Default constructor.
     */
    public CheckAnnotation() {
    }

    /**
     * Initialization constructor.
     * @param  path  String value for path.
     * @param  startLine  int value for startLine.
     * @param  endLine  int value for endLine.
     * @param  startColumn  Integer value for startColumn.
     * @param  endColumn  Integer value for endColumn.
     * @param  annotationLevel  String value for annotationLevel.
     * @param  title  String value for title.
     * @param  message  String value for message.
     * @param  rawDetails  String value for rawDetails.
     * @param  blobHref  String value for blobHref.
     */
    public CheckAnnotation(
            String path,
            int startLine,
            int endLine,
            Integer startColumn,
            Integer endColumn,
            String annotationLevel,
            String title,
            String message,
            String rawDetails,
            String blobHref) {
        this.path = path;
        this.startLine = startLine;
        this.endLine = endLine;
        this.startColumn = startColumn;
        this.endColumn = endColumn;
        this.annotationLevel = annotationLevel;
        this.title = title;
        this.message = message;
        this.rawDetails = rawDetails;
        this.blobHref = blobHref;
    }

    /**
     * Getter for Path.
     * @return Returns the String
     */
    @JsonGetter("path")
    public String getPath() {
        return path;
    }

    /**
     * Setter for Path.
     * @param path Value for String
     */
    @JsonSetter("path")
    public void setPath(String path) {
        this.path = path;
    }

    /**
     * Getter for StartLine.
     * @return Returns the int
     */
    @JsonGetter("start_line")
    public int getStartLine() {
        return startLine;
    }

    /**
     * Setter for StartLine.
     * @param startLine Value for int
     */
    @JsonSetter("start_line")
    public void setStartLine(int startLine) {
        this.startLine = startLine;
    }

    /**
     * Getter for EndLine.
     * @return Returns the int
     */
    @JsonGetter("end_line")
    public int getEndLine() {
        return endLine;
    }

    /**
     * Setter for EndLine.
     * @param endLine Value for int
     */
    @JsonSetter("end_line")
    public void setEndLine(int endLine) {
        this.endLine = endLine;
    }

    /**
     * Getter for StartColumn.
     * @return Returns the Integer
     */
    @JsonGetter("start_column")
    public Integer getStartColumn() {
        return startColumn;
    }

    /**
     * Setter for StartColumn.
     * @param startColumn Value for Integer
     */
    @JsonSetter("start_column")
    public void setStartColumn(Integer startColumn) {
        this.startColumn = startColumn;
    }

    /**
     * Getter for EndColumn.
     * @return Returns the Integer
     */
    @JsonGetter("end_column")
    public Integer getEndColumn() {
        return endColumn;
    }

    /**
     * Setter for EndColumn.
     * @param endColumn Value for Integer
     */
    @JsonSetter("end_column")
    public void setEndColumn(Integer endColumn) {
        this.endColumn = endColumn;
    }

    /**
     * Getter for AnnotationLevel.
     * @return Returns the String
     */
    @JsonGetter("annotation_level")
    public String getAnnotationLevel() {
        return annotationLevel;
    }

    /**
     * Setter for AnnotationLevel.
     * @param annotationLevel Value for String
     */
    @JsonSetter("annotation_level")
    public void setAnnotationLevel(String annotationLevel) {
        this.annotationLevel = annotationLevel;
    }

    /**
     * Getter for Title.
     * @return Returns the String
     */
    @JsonGetter("title")
    public String getTitle() {
        return title;
    }

    /**
     * Setter for Title.
     * @param title Value for String
     */
    @JsonSetter("title")
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for Message.
     * @return Returns the String
     */
    @JsonGetter("message")
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for RawDetails.
     * @return Returns the String
     */
    @JsonGetter("raw_details")
    public String getRawDetails() {
        return rawDetails;
    }

    /**
     * Setter for RawDetails.
     * @param rawDetails Value for String
     */
    @JsonSetter("raw_details")
    public void setRawDetails(String rawDetails) {
        this.rawDetails = rawDetails;
    }

    /**
     * Getter for BlobHref.
     * @return Returns the String
     */
    @JsonGetter("blob_href")
    public String getBlobHref() {
        return blobHref;
    }

    /**
     * Setter for BlobHref.
     * @param blobHref Value for String
     */
    @JsonSetter("blob_href")
    public void setBlobHref(String blobHref) {
        this.blobHref = blobHref;
    }

    /**
     * Converts this CheckAnnotation into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CheckAnnotation [" + "path=" + path + ", startLine=" + startLine + ", endLine="
                + endLine + ", startColumn=" + startColumn + ", endColumn=" + endColumn
                + ", annotationLevel=" + annotationLevel + ", title=" + title + ", message="
                + message + ", rawDetails=" + rawDetails + ", blobHref=" + blobHref + "]";
    }

    /**
     * Builds a new {@link CheckAnnotation.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CheckAnnotation.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(path, startLine, endLine, startColumn, endColumn,
                annotationLevel, title, message, rawDetails, blobHref);
        return builder;
    }

    /**
     * Class to build instances of {@link CheckAnnotation}.
     */
    public static class Builder {
        private String path;
        private int startLine;
        private int endLine;
        private Integer startColumn;
        private Integer endColumn;
        private String annotationLevel;
        private String title;
        private String message;
        private String rawDetails;
        private String blobHref;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  path  String value for path.
         * @param  startLine  int value for startLine.
         * @param  endLine  int value for endLine.
         * @param  startColumn  Integer value for startColumn.
         * @param  endColumn  Integer value for endColumn.
         * @param  annotationLevel  String value for annotationLevel.
         * @param  title  String value for title.
         * @param  message  String value for message.
         * @param  rawDetails  String value for rawDetails.
         * @param  blobHref  String value for blobHref.
         */
        public Builder(String path, int startLine, int endLine, Integer startColumn,
                Integer endColumn, String annotationLevel, String title, String message,
                String rawDetails, String blobHref) {
            this.path = path;
            this.startLine = startLine;
            this.endLine = endLine;
            this.startColumn = startColumn;
            this.endColumn = endColumn;
            this.annotationLevel = annotationLevel;
            this.title = title;
            this.message = message;
            this.rawDetails = rawDetails;
            this.blobHref = blobHref;
        }

        /**
         * Setter for path.
         * @param  path  String value for path.
         * @return Builder
         */
        public Builder path(String path) {
            this.path = path;
            return this;
        }

        /**
         * Setter for startLine.
         * @param  startLine  int value for startLine.
         * @return Builder
         */
        public Builder startLine(int startLine) {
            this.startLine = startLine;
            return this;
        }

        /**
         * Setter for endLine.
         * @param  endLine  int value for endLine.
         * @return Builder
         */
        public Builder endLine(int endLine) {
            this.endLine = endLine;
            return this;
        }

        /**
         * Setter for startColumn.
         * @param  startColumn  Integer value for startColumn.
         * @return Builder
         */
        public Builder startColumn(Integer startColumn) {
            this.startColumn = startColumn;
            return this;
        }

        /**
         * Setter for endColumn.
         * @param  endColumn  Integer value for endColumn.
         * @return Builder
         */
        public Builder endColumn(Integer endColumn) {
            this.endColumn = endColumn;
            return this;
        }

        /**
         * Setter for annotationLevel.
         * @param  annotationLevel  String value for annotationLevel.
         * @return Builder
         */
        public Builder annotationLevel(String annotationLevel) {
            this.annotationLevel = annotationLevel;
            return this;
        }

        /**
         * Setter for title.
         * @param  title  String value for title.
         * @return Builder
         */
        public Builder title(String title) {
            this.title = title;
            return this;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for rawDetails.
         * @param  rawDetails  String value for rawDetails.
         * @return Builder
         */
        public Builder rawDetails(String rawDetails) {
            this.rawDetails = rawDetails;
            return this;
        }

        /**
         * Setter for blobHref.
         * @param  blobHref  String value for blobHref.
         * @return Builder
         */
        public Builder blobHref(String blobHref) {
            this.blobHref = blobHref;
            return this;
        }

        /**
         * Builds a new {@link CheckAnnotation} object using the set fields.
         * @return {@link CheckAnnotation}
         */
        public CheckAnnotation build() {
            return new CheckAnnotation(path, startLine, endLine, startColumn, endColumn,
                    annotationLevel, title, message, rawDetails, blobHref);
        }
    }
}
