/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;

/**
 * This is a model class for ReposPullsPullNumberReviewsReviewIdDismissalsResponse type.
 */
public class ReposPullsPullNumberReviewsReviewIdDismissalsResponse {
    private int id;
    private String nodeId;
    private Object user;
    private String body;
    private String state;
    private String htmlUrl;
    private String pullRequestUrl;
    private Links10 links;
    private LocalDateTime submittedAt;
    private String commitId;
    private String bodyHtml;
    private String bodyText;
    private AuthorAssociationEnum authorAssociation;

    /**
     * Default constructor.
     */
    public ReposPullsPullNumberReviewsReviewIdDismissalsResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  int value for id.
     * @param  nodeId  String value for nodeId.
     * @param  user  Object value for user.
     * @param  body  String value for body.
     * @param  state  String value for state.
     * @param  htmlUrl  String value for htmlUrl.
     * @param  pullRequestUrl  String value for pullRequestUrl.
     * @param  links  Links10 value for links.
     * @param  commitId  String value for commitId.
     * @param  authorAssociation  AuthorAssociationEnum value for authorAssociation.
     * @param  submittedAt  LocalDateTime value for submittedAt.
     * @param  bodyHtml  String value for bodyHtml.
     * @param  bodyText  String value for bodyText.
     */
    public ReposPullsPullNumberReviewsReviewIdDismissalsResponse(
            int id,
            String nodeId,
            Object user,
            String body,
            String state,
            String htmlUrl,
            String pullRequestUrl,
            Links10 links,
            String commitId,
            AuthorAssociationEnum authorAssociation,
            LocalDateTime submittedAt,
            String bodyHtml,
            String bodyText) {
        this.id = id;
        this.nodeId = nodeId;
        this.user = user;
        this.body = body;
        this.state = state;
        this.htmlUrl = htmlUrl;
        this.pullRequestUrl = pullRequestUrl;
        this.links = links;
        this.submittedAt = submittedAt;
        this.commitId = commitId;
        this.bodyHtml = bodyHtml;
        this.bodyText = bodyText;
        this.authorAssociation = authorAssociation;
    }

    /**
     * Getter for Id.
     * Unique identifier of the review
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Unique identifier of the review
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for User.
     * @return Returns the Object
     */
    @JsonGetter("user")
    public Object getUser() {
        return user;
    }

    /**
     * Setter for User.
     * @param user Value for Object
     */
    @JsonSetter("user")
    public void setUser(Object user) {
        this.user = user;
    }

    /**
     * Getter for Body.
     * The text of the review.
     * @return Returns the String
     */
    @JsonGetter("body")
    public String getBody() {
        return body;
    }

    /**
     * Setter for Body.
     * The text of the review.
     * @param body Value for String
     */
    @JsonSetter("body")
    public void setBody(String body) {
        this.body = body;
    }

    /**
     * Getter for State.
     * @return Returns the String
     */
    @JsonGetter("state")
    public String getState() {
        return state;
    }

    /**
     * Setter for State.
     * @param state Value for String
     */
    @JsonSetter("state")
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for HtmlUrl.
     * @return Returns the String
     */
    @JsonGetter("html_url")
    public String getHtmlUrl() {
        return htmlUrl;
    }

    /**
     * Setter for HtmlUrl.
     * @param htmlUrl Value for String
     */
    @JsonSetter("html_url")
    public void setHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
    }

    /**
     * Getter for PullRequestUrl.
     * @return Returns the String
     */
    @JsonGetter("pull_request_url")
    public String getPullRequestUrl() {
        return pullRequestUrl;
    }

    /**
     * Setter for PullRequestUrl.
     * @param pullRequestUrl Value for String
     */
    @JsonSetter("pull_request_url")
    public void setPullRequestUrl(String pullRequestUrl) {
        this.pullRequestUrl = pullRequestUrl;
    }

    /**
     * Getter for Links.
     * @return Returns the Links10
     */
    @JsonGetter("_links")
    public Links10 getLinks() {
        return links;
    }

    /**
     * Setter for Links.
     * @param links Value for Links10
     */
    @JsonSetter("_links")
    public void setLinks(Links10 links) {
        this.links = links;
    }

    /**
     * Getter for SubmittedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("submitted_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getSubmittedAt() {
        return submittedAt;
    }

    /**
     * Setter for SubmittedAt.
     * @param submittedAt Value for LocalDateTime
     */
    @JsonSetter("submitted_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setSubmittedAt(LocalDateTime submittedAt) {
        this.submittedAt = submittedAt;
    }

    /**
     * Getter for CommitId.
     * A commit SHA for the review. If the commit object was garbage collected or forcibly deleted,
     * then it no longer exists in Git and this value will be `null`.
     * @return Returns the String
     */
    @JsonGetter("commit_id")
    public String getCommitId() {
        return commitId;
    }

    /**
     * Setter for CommitId.
     * A commit SHA for the review. If the commit object was garbage collected or forcibly deleted,
     * then it no longer exists in Git and this value will be `null`.
     * @param commitId Value for String
     */
    @JsonSetter("commit_id")
    public void setCommitId(String commitId) {
        this.commitId = commitId;
    }

    /**
     * Getter for BodyHtml.
     * @return Returns the String
     */
    @JsonGetter("body_html")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBodyHtml() {
        return bodyHtml;
    }

    /**
     * Setter for BodyHtml.
     * @param bodyHtml Value for String
     */
    @JsonSetter("body_html")
    public void setBodyHtml(String bodyHtml) {
        this.bodyHtml = bodyHtml;
    }

    /**
     * Getter for BodyText.
     * @return Returns the String
     */
    @JsonGetter("body_text")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBodyText() {
        return bodyText;
    }

    /**
     * Setter for BodyText.
     * @param bodyText Value for String
     */
    @JsonSetter("body_text")
    public void setBodyText(String bodyText) {
        this.bodyText = bodyText;
    }

    /**
     * Getter for AuthorAssociation.
     * @return Returns the AuthorAssociationEnum
     */
    @JsonGetter("author_association")
    public AuthorAssociationEnum getAuthorAssociation() {
        return authorAssociation;
    }

    /**
     * Setter for AuthorAssociation.
     * @param authorAssociation Value for AuthorAssociationEnum
     */
    @JsonSetter("author_association")
    public void setAuthorAssociation(AuthorAssociationEnum authorAssociation) {
        this.authorAssociation = authorAssociation;
    }

    /**
     * Converts this ReposPullsPullNumberReviewsReviewIdDismissalsResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposPullsPullNumberReviewsReviewIdDismissalsResponse [" + "id=" + id + ", nodeId="
                + nodeId + ", user=" + user + ", body=" + body + ", state=" + state + ", htmlUrl="
                + htmlUrl + ", pullRequestUrl=" + pullRequestUrl + ", links=" + links
                + ", commitId=" + commitId + ", authorAssociation=" + authorAssociation
                + ", submittedAt=" + submittedAt + ", bodyHtml=" + bodyHtml + ", bodyText="
                + bodyText + "]";
    }

    /**
     * Builds a new {@link ReposPullsPullNumberReviewsReviewIdDismissalsResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposPullsPullNumberReviewsReviewIdDismissalsResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, nodeId, user, body, state, htmlUrl, pullRequestUrl, links,
                commitId, authorAssociation)
                .submittedAt(getSubmittedAt())
                .bodyHtml(getBodyHtml())
                .bodyText(getBodyText());
        return builder;
    }

    /**
     * Class to build instances of {@link ReposPullsPullNumberReviewsReviewIdDismissalsResponse}.
     */
    public static class Builder {
        private int id;
        private String nodeId;
        private Object user;
        private String body;
        private String state;
        private String htmlUrl;
        private String pullRequestUrl;
        private Links10 links;
        private String commitId;
        private AuthorAssociationEnum authorAssociation;
        private LocalDateTime submittedAt;
        private String bodyHtml;
        private String bodyText;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  int value for id.
         * @param  nodeId  String value for nodeId.
         * @param  user  Object value for user.
         * @param  body  String value for body.
         * @param  state  String value for state.
         * @param  htmlUrl  String value for htmlUrl.
         * @param  pullRequestUrl  String value for pullRequestUrl.
         * @param  links  Links10 value for links.
         * @param  commitId  String value for commitId.
         * @param  authorAssociation  AuthorAssociationEnum value for authorAssociation.
         */
        public Builder(int id, String nodeId, Object user, String body, String state,
                String htmlUrl, String pullRequestUrl, Links10 links, String commitId,
                AuthorAssociationEnum authorAssociation) {
            this.id = id;
            this.nodeId = nodeId;
            this.user = user;
            this.body = body;
            this.state = state;
            this.htmlUrl = htmlUrl;
            this.pullRequestUrl = pullRequestUrl;
            this.links = links;
            this.commitId = commitId;
            this.authorAssociation = authorAssociation;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for user.
         * @param  user  Object value for user.
         * @return Builder
         */
        public Builder user(Object user) {
            this.user = user;
            return this;
        }

        /**
         * Setter for body.
         * @param  body  String value for body.
         * @return Builder
         */
        public Builder body(String body) {
            this.body = body;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  String value for state.
         * @return Builder
         */
        public Builder state(String state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for htmlUrl.
         * @param  htmlUrl  String value for htmlUrl.
         * @return Builder
         */
        public Builder htmlUrl(String htmlUrl) {
            this.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * Setter for pullRequestUrl.
         * @param  pullRequestUrl  String value for pullRequestUrl.
         * @return Builder
         */
        public Builder pullRequestUrl(String pullRequestUrl) {
            this.pullRequestUrl = pullRequestUrl;
            return this;
        }

        /**
         * Setter for links.
         * @param  links  Links10 value for links.
         * @return Builder
         */
        public Builder links(Links10 links) {
            this.links = links;
            return this;
        }

        /**
         * Setter for commitId.
         * @param  commitId  String value for commitId.
         * @return Builder
         */
        public Builder commitId(String commitId) {
            this.commitId = commitId;
            return this;
        }

        /**
         * Setter for authorAssociation.
         * @param  authorAssociation  AuthorAssociationEnum value for authorAssociation.
         * @return Builder
         */
        public Builder authorAssociation(AuthorAssociationEnum authorAssociation) {
            this.authorAssociation = authorAssociation;
            return this;
        }

        /**
         * Setter for submittedAt.
         * @param  submittedAt  LocalDateTime value for submittedAt.
         * @return Builder
         */
        public Builder submittedAt(LocalDateTime submittedAt) {
            this.submittedAt = submittedAt;
            return this;
        }

        /**
         * Setter for bodyHtml.
         * @param  bodyHtml  String value for bodyHtml.
         * @return Builder
         */
        public Builder bodyHtml(String bodyHtml) {
            this.bodyHtml = bodyHtml;
            return this;
        }

        /**
         * Setter for bodyText.
         * @param  bodyText  String value for bodyText.
         * @return Builder
         */
        public Builder bodyText(String bodyText) {
            this.bodyText = bodyText;
            return this;
        }

        /**
         * Builds a new {@link ReposPullsPullNumberReviewsReviewIdDismissalsResponse} object using
         * the set fields.
         * @return {@link ReposPullsPullNumberReviewsReviewIdDismissalsResponse}
         */
        public ReposPullsPullNumberReviewsReviewIdDismissalsResponse build() {
            return new ReposPullsPullNumberReviewsReviewIdDismissalsResponse(id, nodeId, user, body,
                    state, htmlUrl, pullRequestUrl, links, commitId, authorAssociation, submittedAt,
                    bodyHtml, bodyText);
        }
    }
}
