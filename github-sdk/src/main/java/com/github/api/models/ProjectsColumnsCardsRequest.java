/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for ProjectsColumnsCardsRequest type.
 */
public class ProjectsColumnsCardsRequest {
    private OptionalNullable<String> note;
    private Boolean archived;

    /**
     * Default constructor.
     */
    public ProjectsColumnsCardsRequest() {
    }

    /**
     * Initialization constructor.
     * @param  note  String value for note.
     * @param  archived  Boolean value for archived.
     */
    public ProjectsColumnsCardsRequest(
            String note,
            Boolean archived) {
        this.note = OptionalNullable.of(note);
        this.archived = archived;
    }

    /**
     * Internal initialization constructor.
     */
    protected ProjectsColumnsCardsRequest(OptionalNullable<String> note, Boolean archived) {
        this.note = note;
        this.archived = archived;
    }

    /**
     * Internal Getter for Note.
     * The project card's note
     * @return Returns the Internal String
     */
    @JsonGetter("note")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetNote() {
        return this.note;
    }

    /**
     * Getter for Note.
     * The project card's note
     * @return Returns the String
     */
    public String getNote() {
        return OptionalNullable.getFrom(note);
    }

    /**
     * Setter for Note.
     * The project card's note
     * @param note Value for String
     */
    @JsonSetter("note")
    public void setNote(String note) {
        this.note = OptionalNullable.of(note);
    }

    /**
     * UnSetter for Note.
     * The project card's note
     */
    public void unsetNote() {
        note = null;
    }

    /**
     * Getter for Archived.
     * Whether or not the card is archived
     * @return Returns the Boolean
     */
    @JsonGetter("archived")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getArchived() {
        return archived;
    }

    /**
     * Setter for Archived.
     * Whether or not the card is archived
     * @param archived Value for Boolean
     */
    @JsonSetter("archived")
    public void setArchived(Boolean archived) {
        this.archived = archived;
    }

    /**
     * Converts this ProjectsColumnsCardsRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ProjectsColumnsCardsRequest [" + "note=" + note + ", archived=" + archived + "]";
    }

    /**
     * Builds a new {@link ProjectsColumnsCardsRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ProjectsColumnsCardsRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .archived(getArchived());
        builder.note = internalGetNote();
        return builder;
    }

    /**
     * Class to build instances of {@link ProjectsColumnsCardsRequest}.
     */
    public static class Builder {
        private OptionalNullable<String> note;
        private Boolean archived;



        /**
         * Setter for note.
         * @param  note  String value for note.
         * @return Builder
         */
        public Builder note(String note) {
            this.note = OptionalNullable.of(note);
            return this;
        }

        /**
         * UnSetter for note.
         * @return Builder
         */
        public Builder unsetNote() {
            note = null;
            return this;
        }

        /**
         * Setter for archived.
         * @param  archived  Boolean value for archived.
         * @return Builder
         */
        public Builder archived(Boolean archived) {
            this.archived = archived;
            return this;
        }

        /**
         * Builds a new {@link ProjectsColumnsCardsRequest} object using the set fields.
         * @return {@link ProjectsColumnsCardsRequest}
         */
        public ProjectsColumnsCardsRequest build() {
            return new ProjectsColumnsCardsRequest(note, archived);
        }
    }
}
