/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for UserCodespacesRequest1 type.
 */
public class UserCodespacesRequest1 {
    private PullRequest58 pullRequest;
    private String location;
    private String machine;
    private String devcontainerPath;
    private String workingDirectory;
    private Integer idleTimeoutMinutes;

    /**
     * Default constructor.
     */
    public UserCodespacesRequest1() {
    }

    /**
     * Initialization constructor.
     * @param  pullRequest  PullRequest58 value for pullRequest.
     * @param  location  String value for location.
     * @param  machine  String value for machine.
     * @param  devcontainerPath  String value for devcontainerPath.
     * @param  workingDirectory  String value for workingDirectory.
     * @param  idleTimeoutMinutes  Integer value for idleTimeoutMinutes.
     */
    public UserCodespacesRequest1(
            PullRequest58 pullRequest,
            String location,
            String machine,
            String devcontainerPath,
            String workingDirectory,
            Integer idleTimeoutMinutes) {
        this.pullRequest = pullRequest;
        this.location = location;
        this.machine = machine;
        this.devcontainerPath = devcontainerPath;
        this.workingDirectory = workingDirectory;
        this.idleTimeoutMinutes = idleTimeoutMinutes;
    }

    /**
     * Initialization constructor.
     * @param  pullRequest  PullRequest58 value for pullRequest.
     */
    @JsonCreator
    private UserCodespacesRequest1(
            @JsonProperty("pull_request") PullRequest58 pullRequest) {
        this.pullRequest = pullRequest;
    }

    /**
     * Getter for PullRequest.
     * @return Returns the PullRequest58
     */
    @JsonGetter("pull_request")
    public PullRequest58 getPullRequest() {
        return pullRequest;
    }

    /**
     * Setter for PullRequest.
     * @param pullRequest Value for PullRequest58
     */
    @JsonSetter("pull_request")
    public void setPullRequest(PullRequest58 pullRequest) {
        this.pullRequest = pullRequest;
    }

    /**
     * Getter for Location.
     * Location for this codespace. Assigned by IP if not provided
     * @return Returns the String
     */
    @JsonGetter("location")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLocation() {
        return location;
    }

    /**
     * Setter for Location.
     * Location for this codespace. Assigned by IP if not provided
     * @param location Value for String
     */
    @JsonSetter("location")
    public void setLocation(String location) {
        this.location = location;
    }

    /**
     * Getter for Machine.
     * Machine type to use for this codespace
     * @return Returns the String
     */
    @JsonGetter("machine")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMachine() {
        return machine;
    }

    /**
     * Setter for Machine.
     * Machine type to use for this codespace
     * @param machine Value for String
     */
    @JsonSetter("machine")
    public void setMachine(String machine) {
        this.machine = machine;
    }

    /**
     * Getter for DevcontainerPath.
     * Path to devcontainer.json config to use for this codespace
     * @return Returns the String
     */
    @JsonGetter("devcontainer_path")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDevcontainerPath() {
        return devcontainerPath;
    }

    /**
     * Setter for DevcontainerPath.
     * Path to devcontainer.json config to use for this codespace
     * @param devcontainerPath Value for String
     */
    @JsonSetter("devcontainer_path")
    public void setDevcontainerPath(String devcontainerPath) {
        this.devcontainerPath = devcontainerPath;
    }

    /**
     * Getter for WorkingDirectory.
     * Working directory for this codespace
     * @return Returns the String
     */
    @JsonGetter("working_directory")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getWorkingDirectory() {
        return workingDirectory;
    }

    /**
     * Setter for WorkingDirectory.
     * Working directory for this codespace
     * @param workingDirectory Value for String
     */
    @JsonSetter("working_directory")
    public void setWorkingDirectory(String workingDirectory) {
        this.workingDirectory = workingDirectory;
    }

    /**
     * Getter for IdleTimeoutMinutes.
     * Time in minutes before codespace stops from inactivity
     * @return Returns the Integer
     */
    @JsonGetter("idle_timeout_minutes")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getIdleTimeoutMinutes() {
        return idleTimeoutMinutes;
    }

    /**
     * Setter for IdleTimeoutMinutes.
     * Time in minutes before codespace stops from inactivity
     * @param idleTimeoutMinutes Value for Integer
     */
    @JsonSetter("idle_timeout_minutes")
    public void setIdleTimeoutMinutes(Integer idleTimeoutMinutes) {
        this.idleTimeoutMinutes = idleTimeoutMinutes;
    }

    /**
     * Converts this UserCodespacesRequest1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UserCodespacesRequest1 [" + "pullRequest=" + pullRequest + ", location=" + location
                + ", machine=" + machine + ", devcontainerPath=" + devcontainerPath
                + ", workingDirectory=" + workingDirectory + ", idleTimeoutMinutes="
                + idleTimeoutMinutes + "]";
    }

    /**
     * Builds a new {@link UserCodespacesRequest1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UserCodespacesRequest1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(pullRequest)
                .location(getLocation())
                .machine(getMachine())
                .devcontainerPath(getDevcontainerPath())
                .workingDirectory(getWorkingDirectory())
                .idleTimeoutMinutes(getIdleTimeoutMinutes());
        return builder;
    }

    /**
     * Class to build instances of {@link UserCodespacesRequest1}.
     */
    public static class Builder {
        private PullRequest58 pullRequest;
        private String location;
        private String machine;
        private String devcontainerPath;
        private String workingDirectory;
        private Integer idleTimeoutMinutes;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  pullRequest  PullRequest58 value for pullRequest.
         */
        public Builder(PullRequest58 pullRequest) {
            this.pullRequest = pullRequest;
        }

        /**
         * Setter for pullRequest.
         * @param  pullRequest  PullRequest58 value for pullRequest.
         * @return Builder
         */
        public Builder pullRequest(PullRequest58 pullRequest) {
            this.pullRequest = pullRequest;
            return this;
        }

        /**
         * Setter for location.
         * @param  location  String value for location.
         * @return Builder
         */
        public Builder location(String location) {
            this.location = location;
            return this;
        }

        /**
         * Setter for machine.
         * @param  machine  String value for machine.
         * @return Builder
         */
        public Builder machine(String machine) {
            this.machine = machine;
            return this;
        }

        /**
         * Setter for devcontainerPath.
         * @param  devcontainerPath  String value for devcontainerPath.
         * @return Builder
         */
        public Builder devcontainerPath(String devcontainerPath) {
            this.devcontainerPath = devcontainerPath;
            return this;
        }

        /**
         * Setter for workingDirectory.
         * @param  workingDirectory  String value for workingDirectory.
         * @return Builder
         */
        public Builder workingDirectory(String workingDirectory) {
            this.workingDirectory = workingDirectory;
            return this;
        }

        /**
         * Setter for idleTimeoutMinutes.
         * @param  idleTimeoutMinutes  Integer value for idleTimeoutMinutes.
         * @return Builder
         */
        public Builder idleTimeoutMinutes(Integer idleTimeoutMinutes) {
            this.idleTimeoutMinutes = idleTimeoutMinutes;
            return this;
        }

        /**
         * Builds a new {@link UserCodespacesRequest1} object using the set fields.
         * @return {@link UserCodespacesRequest1}
         */
        public UserCodespacesRequest1 build() {
            return new UserCodespacesRequest1(pullRequest, location, machine, devcontainerPath,
                    workingDirectory, idleTimeoutMinutes);
        }
    }
}
