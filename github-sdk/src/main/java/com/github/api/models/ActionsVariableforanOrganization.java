/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;

/**
 * This is a model class for ActionsVariableforanOrganization type.
 */
public class ActionsVariableforanOrganization {
    private String name;
    private String value;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private Visibility1Enum visibility;
    private String selectedRepositoriesUrl;

    /**
     * Default constructor.
     */
    public ActionsVariableforanOrganization() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  value  String value for value.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  visibility  Visibility1Enum value for visibility.
     * @param  selectedRepositoriesUrl  String value for selectedRepositoriesUrl.
     */
    public ActionsVariableforanOrganization(
            String name,
            String value,
            LocalDateTime createdAt,
            LocalDateTime updatedAt,
            Visibility1Enum visibility,
            String selectedRepositoriesUrl) {
        this.name = name;
        this.value = value;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.visibility = visibility;
        this.selectedRepositoriesUrl = selectedRepositoriesUrl;
    }

    /**
     * Getter for Name.
     * The name of the variable.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the variable.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Value.
     * The value of the variable.
     * @return Returns the String
     */
    @JsonGetter("value")
    public String getValue() {
        return value;
    }

    /**
     * Setter for Value.
     * The value of the variable.
     * @param value Value for String
     */
    @JsonSetter("value")
    public void setValue(String value) {
        this.value = value;
    }

    /**
     * Getter for CreatedAt.
     * The date and time at which the variable was created, in ISO 8601 format':'
     * YYYY-MM-DDTHH:MM:SSZ.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * The date and time at which the variable was created, in ISO 8601 format':'
     * YYYY-MM-DDTHH:MM:SSZ.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * The date and time at which the variable was last updated, in ISO 8601 format':'
     * YYYY-MM-DDTHH:MM:SSZ.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * The date and time at which the variable was last updated, in ISO 8601 format':'
     * YYYY-MM-DDTHH:MM:SSZ.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Visibility.
     * @return Returns the Visibility1Enum
     */
    @JsonGetter("visibility")
    public Visibility1Enum getVisibility() {
        return visibility;
    }

    /**
     * Setter for Visibility.
     * @param visibility Value for Visibility1Enum
     */
    @JsonSetter("visibility")
    public void setVisibility(Visibility1Enum visibility) {
        this.visibility = visibility;
    }

    /**
     * Getter for SelectedRepositoriesUrl.
     * @return Returns the String
     */
    @JsonGetter("selected_repositories_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSelectedRepositoriesUrl() {
        return selectedRepositoriesUrl;
    }

    /**
     * Setter for SelectedRepositoriesUrl.
     * @param selectedRepositoriesUrl Value for String
     */
    @JsonSetter("selected_repositories_url")
    public void setSelectedRepositoriesUrl(String selectedRepositoriesUrl) {
        this.selectedRepositoriesUrl = selectedRepositoriesUrl;
    }

    /**
     * Converts this ActionsVariableforanOrganization into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ActionsVariableforanOrganization [" + "name=" + name + ", value=" + value
                + ", createdAt=" + createdAt + ", updatedAt=" + updatedAt + ", visibility="
                + visibility + ", selectedRepositoriesUrl=" + selectedRepositoriesUrl + "]";
    }

    /**
     * Builds a new {@link ActionsVariableforanOrganization.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ActionsVariableforanOrganization.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, value, createdAt, updatedAt, visibility)
                .selectedRepositoriesUrl(getSelectedRepositoriesUrl());
        return builder;
    }

    /**
     * Class to build instances of {@link ActionsVariableforanOrganization}.
     */
    public static class Builder {
        private String name;
        private String value;
        private LocalDateTime createdAt;
        private LocalDateTime updatedAt;
        private Visibility1Enum visibility;
        private String selectedRepositoriesUrl;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  value  String value for value.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @param  visibility  Visibility1Enum value for visibility.
         */
        public Builder(String name, String value, LocalDateTime createdAt, LocalDateTime updatedAt,
                Visibility1Enum visibility) {
            this.name = name;
            this.value = value;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
            this.visibility = visibility;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for value.
         * @param  value  String value for value.
         * @return Builder
         */
        public Builder value(String value) {
            this.value = value;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for visibility.
         * @param  visibility  Visibility1Enum value for visibility.
         * @return Builder
         */
        public Builder visibility(Visibility1Enum visibility) {
            this.visibility = visibility;
            return this;
        }

        /**
         * Setter for selectedRepositoriesUrl.
         * @param  selectedRepositoriesUrl  String value for selectedRepositoriesUrl.
         * @return Builder
         */
        public Builder selectedRepositoriesUrl(String selectedRepositoriesUrl) {
            this.selectedRepositoriesUrl = selectedRepositoriesUrl;
            return this;
        }

        /**
         * Builds a new {@link ActionsVariableforanOrganization} object using the set fields.
         * @return {@link ActionsVariableforanOrganization}
         */
        public ActionsVariableforanOrganization build() {
            return new ActionsVariableforanOrganization(name, value, createdAt, updatedAt,
                    visibility, selectedRepositoriesUrl);
        }
    }
}
