/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Account2 type.
 */
public class Account2 {
    private int id;
    private String login;
    private String nodeId;
    private String organizationBillingEmail;
    private String type;

    /**
     * Default constructor.
     */
    public Account2() {
    }

    /**
     * Initialization constructor.
     * @param  id  int value for id.
     * @param  login  String value for login.
     * @param  nodeId  String value for nodeId.
     * @param  organizationBillingEmail  String value for organizationBillingEmail.
     * @param  type  String value for type.
     */
    public Account2(
            int id,
            String login,
            String nodeId,
            String organizationBillingEmail,
            String type) {
        this.id = id;
        this.login = login;
        this.nodeId = nodeId;
        this.organizationBillingEmail = organizationBillingEmail;
        this.type = type;
    }

    /**
     * Getter for Id.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for Login.
     * @return Returns the String
     */
    @JsonGetter("login")
    public String getLogin() {
        return login;
    }

    /**
     * Setter for Login.
     * @param login Value for String
     */
    @JsonSetter("login")
    public void setLogin(String login) {
        this.login = login;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for OrganizationBillingEmail.
     * @return Returns the String
     */
    @JsonGetter("organization_billing_email")
    public String getOrganizationBillingEmail() {
        return organizationBillingEmail;
    }

    /**
     * Setter for OrganizationBillingEmail.
     * @param organizationBillingEmail Value for String
     */
    @JsonSetter("organization_billing_email")
    public void setOrganizationBillingEmail(String organizationBillingEmail) {
        this.organizationBillingEmail = organizationBillingEmail;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Converts this Account2 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Account2 [" + "id=" + id + ", login=" + login + ", nodeId=" + nodeId
                + ", organizationBillingEmail=" + organizationBillingEmail + ", type=" + type + "]";
    }

    /**
     * Builds a new {@link Account2.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Account2.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, login, nodeId, organizationBillingEmail, type);
        return builder;
    }

    /**
     * Class to build instances of {@link Account2}.
     */
    public static class Builder {
        private int id;
        private String login;
        private String nodeId;
        private String organizationBillingEmail;
        private String type;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  int value for id.
         * @param  login  String value for login.
         * @param  nodeId  String value for nodeId.
         * @param  organizationBillingEmail  String value for organizationBillingEmail.
         * @param  type  String value for type.
         */
        public Builder(int id, String login, String nodeId, String organizationBillingEmail,
                String type) {
            this.id = id;
            this.login = login;
            this.nodeId = nodeId;
            this.organizationBillingEmail = organizationBillingEmail;
            this.type = type;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for login.
         * @param  login  String value for login.
         * @return Builder
         */
        public Builder login(String login) {
            this.login = login;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for organizationBillingEmail.
         * @param  organizationBillingEmail  String value for organizationBillingEmail.
         * @return Builder
         */
        public Builder organizationBillingEmail(String organizationBillingEmail) {
            this.organizationBillingEmail = organizationBillingEmail;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Builds a new {@link Account2} object using the set fields.
         * @return {@link Account2}
         */
        public Account2 build() {
            return new Account2(id, login, nodeId, organizationBillingEmail, type);
        }
    }
}
