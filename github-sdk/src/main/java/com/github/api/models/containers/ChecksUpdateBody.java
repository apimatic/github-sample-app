/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.github.api.ApiHelper;
import com.github.api.models.ReposCheckRunsCheckRunIdRequest;
import com.github.api.models.ReposCheckRunsCheckRunIdRequest1;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = ChecksUpdateBody.ChecksUpdateBodyDeserializer.class)
public abstract class ChecksUpdateBody {
    
    /**
     * Any-of type initialization method.
     * @param reposCheckRunsCheckRunIdRequest ReposCheckRunsCheckRunIdRequest value for reposCheckRunsCheckRunIdRequest.
     * @return The ReposCheckRunsCheckRunIdRequestCase object.
     */
    public static ChecksUpdateBody fromReposCheckRunsCheckRunIdRequest(
            ReposCheckRunsCheckRunIdRequest reposCheckRunsCheckRunIdRequest) {
        return reposCheckRunsCheckRunIdRequest == null ? null : new ReposCheckRunsCheckRunIdRequestCase(reposCheckRunsCheckRunIdRequest);
    }

    /**
     * Any-of type initialization method.
     * @param reposCheckRunsCheckRunIdRequest1 ReposCheckRunsCheckRunIdRequest1 value for reposCheckRunsCheckRunIdRequest1.
     * @return The ReposCheckRunsCheckRunIdRequest1Case object.
     */
    public static ChecksUpdateBody fromReposCheckRunsCheckRunIdRequest1(
            ReposCheckRunsCheckRunIdRequest1 reposCheckRunsCheckRunIdRequest1) {
        return reposCheckRunsCheckRunIdRequest1 == null ? null : new ReposCheckRunsCheckRunIdRequest1Case(reposCheckRunsCheckRunIdRequest1);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R reposCheckRunsCheckRunIdRequest(ReposCheckRunsCheckRunIdRequest reposCheckRunsCheckRunIdRequest);

        R reposCheckRunsCheckRunIdRequest1(ReposCheckRunsCheckRunIdRequest1 reposCheckRunsCheckRunIdRequest1);
    }

    /**
     * This is a implementation class for ReposCheckRunsCheckRunIdRequestCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase
    private static class ReposCheckRunsCheckRunIdRequestCase extends ChecksUpdateBody {

        @JsonValue
        private ReposCheckRunsCheckRunIdRequest reposCheckRunsCheckRunIdRequest;

        ReposCheckRunsCheckRunIdRequestCase(ReposCheckRunsCheckRunIdRequest reposCheckRunsCheckRunIdRequest) {
            this.reposCheckRunsCheckRunIdRequest = reposCheckRunsCheckRunIdRequest;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.reposCheckRunsCheckRunIdRequest(this.reposCheckRunsCheckRunIdRequest);
        }

        @JsonCreator
        private ReposCheckRunsCheckRunIdRequestCase(JsonNode jsonNode) throws IOException {
            this.reposCheckRunsCheckRunIdRequest = ApiHelper.deserialize(jsonNode,
                ReposCheckRunsCheckRunIdRequest.class);
        }

        @Override
        public String toString() {
            return reposCheckRunsCheckRunIdRequest.toString();
        }
    }

    /**
     * This is a implementation class for ReposCheckRunsCheckRunIdRequest1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase
    private static class ReposCheckRunsCheckRunIdRequest1Case extends ChecksUpdateBody {

        @JsonValue
        private ReposCheckRunsCheckRunIdRequest1 reposCheckRunsCheckRunIdRequest1;

        ReposCheckRunsCheckRunIdRequest1Case(ReposCheckRunsCheckRunIdRequest1 reposCheckRunsCheckRunIdRequest1) {
            this.reposCheckRunsCheckRunIdRequest1 = reposCheckRunsCheckRunIdRequest1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.reposCheckRunsCheckRunIdRequest1(this.reposCheckRunsCheckRunIdRequest1);
        }

        @JsonCreator
        private ReposCheckRunsCheckRunIdRequest1Case(JsonNode jsonNode) throws IOException {
            this.reposCheckRunsCheckRunIdRequest1 = ApiHelper.deserialize(jsonNode,
                ReposCheckRunsCheckRunIdRequest1.class);
        }

        @Override
        public String toString() {
            return reposCheckRunsCheckRunIdRequest1.toString();
        }
    }

    /**
     * This is a custom deserializer class for ChecksUpdateBody.
     */
    protected static class ChecksUpdateBodyDeserializer
            extends JsonDeserializer<ChecksUpdateBody> {

        @Override
        public ChecksUpdateBody deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(
                    ReposCheckRunsCheckRunIdRequestCase.class,
                    ReposCheckRunsCheckRunIdRequest1Case.class), false);
        }
    }

}
