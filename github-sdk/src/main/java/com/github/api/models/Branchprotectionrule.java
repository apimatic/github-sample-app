/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for Branchprotectionrule type.
 */
public class Branchprotectionrule {
    private boolean adminEnforced;
    private AllowDeletionsEnforcementLevelEnum allowDeletionsEnforcementLevel;
    private AllowDeletionsEnforcementLevelEnum allowForcePushesEnforcementLevel;
    private List<String> authorizedActorNames;
    private boolean authorizedActorsOnly;
    private boolean authorizedDismissalActorsOnly;
    private Boolean createProtected;
    private LocalDateTime createdAt;
    private boolean dismissStaleReviewsOnPush;
    private int id;
    private boolean ignoreApprovalsFromContributors;
    private AllowDeletionsEnforcementLevelEnum linearHistoryRequirementEnforcementLevel;
    private AllowDeletionsEnforcementLevelEnum mergeQueueEnforcementLevel;
    private String name;
    private AllowDeletionsEnforcementLevelEnum pullRequestReviewsEnforcementLevel;
    private int repositoryId;
    private boolean requireCodeOwnerReview;
    private int requiredApprovingReviewCount;
    private AllowDeletionsEnforcementLevelEnum requiredConversationResolutionLevel;
    private AllowDeletionsEnforcementLevelEnum requiredDeploymentsEnforcementLevel;
    private List<String> requiredStatusChecks;
    private AllowDeletionsEnforcementLevelEnum requiredStatusChecksEnforcementLevel;
    private AllowDeletionsEnforcementLevelEnum signatureRequirementEnforcementLevel;
    private boolean strictRequiredStatusChecksPolicy;
    private LocalDateTime updatedAt;

    /**
     * Default constructor.
     */
    public Branchprotectionrule() {
    }

    /**
     * Initialization constructor.
     * @param  adminEnforced  boolean value for adminEnforced.
     * @param  allowDeletionsEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
     *         allowDeletionsEnforcementLevel.
     * @param  allowForcePushesEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
     *         allowForcePushesEnforcementLevel.
     * @param  authorizedActorNames  List of String value for authorizedActorNames.
     * @param  authorizedActorsOnly  boolean value for authorizedActorsOnly.
     * @param  authorizedDismissalActorsOnly  boolean value for authorizedDismissalActorsOnly.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  dismissStaleReviewsOnPush  boolean value for dismissStaleReviewsOnPush.
     * @param  id  int value for id.
     * @param  ignoreApprovalsFromContributors  boolean value for ignoreApprovalsFromContributors.
     * @param  linearHistoryRequirementEnforcementLevel  AllowDeletionsEnforcementLevelEnum value
     *         for linearHistoryRequirementEnforcementLevel.
     * @param  mergeQueueEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
     *         mergeQueueEnforcementLevel.
     * @param  name  String value for name.
     * @param  pullRequestReviewsEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
     *         pullRequestReviewsEnforcementLevel.
     * @param  repositoryId  int value for repositoryId.
     * @param  requireCodeOwnerReview  boolean value for requireCodeOwnerReview.
     * @param  requiredApprovingReviewCount  int value for requiredApprovingReviewCount.
     * @param  requiredConversationResolutionLevel  AllowDeletionsEnforcementLevelEnum value for
     *         requiredConversationResolutionLevel.
     * @param  requiredDeploymentsEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
     *         requiredDeploymentsEnforcementLevel.
     * @param  requiredStatusChecks  List of String value for requiredStatusChecks.
     * @param  requiredStatusChecksEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
     *         requiredStatusChecksEnforcementLevel.
     * @param  signatureRequirementEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
     *         signatureRequirementEnforcementLevel.
     * @param  strictRequiredStatusChecksPolicy  boolean value for strictRequiredStatusChecksPolicy.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  createProtected  Boolean value for createProtected.
     */
    public Branchprotectionrule(
            boolean adminEnforced,
            AllowDeletionsEnforcementLevelEnum allowDeletionsEnforcementLevel,
            AllowDeletionsEnforcementLevelEnum allowForcePushesEnforcementLevel,
            List<String> authorizedActorNames,
            boolean authorizedActorsOnly,
            boolean authorizedDismissalActorsOnly,
            LocalDateTime createdAt,
            boolean dismissStaleReviewsOnPush,
            int id,
            boolean ignoreApprovalsFromContributors,
            AllowDeletionsEnforcementLevelEnum linearHistoryRequirementEnforcementLevel,
            AllowDeletionsEnforcementLevelEnum mergeQueueEnforcementLevel,
            String name,
            AllowDeletionsEnforcementLevelEnum pullRequestReviewsEnforcementLevel,
            int repositoryId,
            boolean requireCodeOwnerReview,
            int requiredApprovingReviewCount,
            AllowDeletionsEnforcementLevelEnum requiredConversationResolutionLevel,
            AllowDeletionsEnforcementLevelEnum requiredDeploymentsEnforcementLevel,
            List<String> requiredStatusChecks,
            AllowDeletionsEnforcementLevelEnum requiredStatusChecksEnforcementLevel,
            AllowDeletionsEnforcementLevelEnum signatureRequirementEnforcementLevel,
            boolean strictRequiredStatusChecksPolicy,
            LocalDateTime updatedAt,
            Boolean createProtected) {
        this.adminEnforced = adminEnforced;
        this.allowDeletionsEnforcementLevel = allowDeletionsEnforcementLevel;
        this.allowForcePushesEnforcementLevel = allowForcePushesEnforcementLevel;
        this.authorizedActorNames = authorizedActorNames;
        this.authorizedActorsOnly = authorizedActorsOnly;
        this.authorizedDismissalActorsOnly = authorizedDismissalActorsOnly;
        this.createProtected = createProtected;
        this.createdAt = createdAt;
        this.dismissStaleReviewsOnPush = dismissStaleReviewsOnPush;
        this.id = id;
        this.ignoreApprovalsFromContributors = ignoreApprovalsFromContributors;
        this.linearHistoryRequirementEnforcementLevel = linearHistoryRequirementEnforcementLevel;
        this.mergeQueueEnforcementLevel = mergeQueueEnforcementLevel;
        this.name = name;
        this.pullRequestReviewsEnforcementLevel = pullRequestReviewsEnforcementLevel;
        this.repositoryId = repositoryId;
        this.requireCodeOwnerReview = requireCodeOwnerReview;
        this.requiredApprovingReviewCount = requiredApprovingReviewCount;
        this.requiredConversationResolutionLevel = requiredConversationResolutionLevel;
        this.requiredDeploymentsEnforcementLevel = requiredDeploymentsEnforcementLevel;
        this.requiredStatusChecks = requiredStatusChecks;
        this.requiredStatusChecksEnforcementLevel = requiredStatusChecksEnforcementLevel;
        this.signatureRequirementEnforcementLevel = signatureRequirementEnforcementLevel;
        this.strictRequiredStatusChecksPolicy = strictRequiredStatusChecksPolicy;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for AdminEnforced.
     * @return Returns the boolean
     */
    @JsonGetter("admin_enforced")
    public boolean getAdminEnforced() {
        return adminEnforced;
    }

    /**
     * Setter for AdminEnforced.
     * @param adminEnforced Value for boolean
     */
    @JsonSetter("admin_enforced")
    public void setAdminEnforced(boolean adminEnforced) {
        this.adminEnforced = adminEnforced;
    }

    /**
     * Getter for AllowDeletionsEnforcementLevel.
     * @return Returns the AllowDeletionsEnforcementLevelEnum
     */
    @JsonGetter("allow_deletions_enforcement_level")
    public AllowDeletionsEnforcementLevelEnum getAllowDeletionsEnforcementLevel() {
        return allowDeletionsEnforcementLevel;
    }

    /**
     * Setter for AllowDeletionsEnforcementLevel.
     * @param allowDeletionsEnforcementLevel Value for AllowDeletionsEnforcementLevelEnum
     */
    @JsonSetter("allow_deletions_enforcement_level")
    public void setAllowDeletionsEnforcementLevel(AllowDeletionsEnforcementLevelEnum allowDeletionsEnforcementLevel) {
        this.allowDeletionsEnforcementLevel = allowDeletionsEnforcementLevel;
    }

    /**
     * Getter for AllowForcePushesEnforcementLevel.
     * @return Returns the AllowDeletionsEnforcementLevelEnum
     */
    @JsonGetter("allow_force_pushes_enforcement_level")
    public AllowDeletionsEnforcementLevelEnum getAllowForcePushesEnforcementLevel() {
        return allowForcePushesEnforcementLevel;
    }

    /**
     * Setter for AllowForcePushesEnforcementLevel.
     * @param allowForcePushesEnforcementLevel Value for AllowDeletionsEnforcementLevelEnum
     */
    @JsonSetter("allow_force_pushes_enforcement_level")
    public void setAllowForcePushesEnforcementLevel(AllowDeletionsEnforcementLevelEnum allowForcePushesEnforcementLevel) {
        this.allowForcePushesEnforcementLevel = allowForcePushesEnforcementLevel;
    }

    /**
     * Getter for AuthorizedActorNames.
     * @return Returns the List of String
     */
    @JsonGetter("authorized_actor_names")
    public List<String> getAuthorizedActorNames() {
        return authorizedActorNames;
    }

    /**
     * Setter for AuthorizedActorNames.
     * @param authorizedActorNames Value for List of String
     */
    @JsonSetter("authorized_actor_names")
    public void setAuthorizedActorNames(List<String> authorizedActorNames) {
        this.authorizedActorNames = authorizedActorNames;
    }

    /**
     * Getter for AuthorizedActorsOnly.
     * @return Returns the boolean
     */
    @JsonGetter("authorized_actors_only")
    public boolean getAuthorizedActorsOnly() {
        return authorizedActorsOnly;
    }

    /**
     * Setter for AuthorizedActorsOnly.
     * @param authorizedActorsOnly Value for boolean
     */
    @JsonSetter("authorized_actors_only")
    public void setAuthorizedActorsOnly(boolean authorizedActorsOnly) {
        this.authorizedActorsOnly = authorizedActorsOnly;
    }

    /**
     * Getter for AuthorizedDismissalActorsOnly.
     * @return Returns the boolean
     */
    @JsonGetter("authorized_dismissal_actors_only")
    public boolean getAuthorizedDismissalActorsOnly() {
        return authorizedDismissalActorsOnly;
    }

    /**
     * Setter for AuthorizedDismissalActorsOnly.
     * @param authorizedDismissalActorsOnly Value for boolean
     */
    @JsonSetter("authorized_dismissal_actors_only")
    public void setAuthorizedDismissalActorsOnly(boolean authorizedDismissalActorsOnly) {
        this.authorizedDismissalActorsOnly = authorizedDismissalActorsOnly;
    }

    /**
     * Getter for CreateProtected.
     * @return Returns the Boolean
     */
    @JsonGetter("create_protected")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getCreateProtected() {
        return createProtected;
    }

    /**
     * Setter for CreateProtected.
     * @param createProtected Value for Boolean
     */
    @JsonSetter("create_protected")
    public void setCreateProtected(Boolean createProtected) {
        this.createProtected = createProtected;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for DismissStaleReviewsOnPush.
     * @return Returns the boolean
     */
    @JsonGetter("dismiss_stale_reviews_on_push")
    public boolean getDismissStaleReviewsOnPush() {
        return dismissStaleReviewsOnPush;
    }

    /**
     * Setter for DismissStaleReviewsOnPush.
     * @param dismissStaleReviewsOnPush Value for boolean
     */
    @JsonSetter("dismiss_stale_reviews_on_push")
    public void setDismissStaleReviewsOnPush(boolean dismissStaleReviewsOnPush) {
        this.dismissStaleReviewsOnPush = dismissStaleReviewsOnPush;
    }

    /**
     * Getter for Id.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for IgnoreApprovalsFromContributors.
     * @return Returns the boolean
     */
    @JsonGetter("ignore_approvals_from_contributors")
    public boolean getIgnoreApprovalsFromContributors() {
        return ignoreApprovalsFromContributors;
    }

    /**
     * Setter for IgnoreApprovalsFromContributors.
     * @param ignoreApprovalsFromContributors Value for boolean
     */
    @JsonSetter("ignore_approvals_from_contributors")
    public void setIgnoreApprovalsFromContributors(boolean ignoreApprovalsFromContributors) {
        this.ignoreApprovalsFromContributors = ignoreApprovalsFromContributors;
    }

    /**
     * Getter for LinearHistoryRequirementEnforcementLevel.
     * @return Returns the AllowDeletionsEnforcementLevelEnum
     */
    @JsonGetter("linear_history_requirement_enforcement_level")
    public AllowDeletionsEnforcementLevelEnum getLinearHistoryRequirementEnforcementLevel() {
        return linearHistoryRequirementEnforcementLevel;
    }

    /**
     * Setter for LinearHistoryRequirementEnforcementLevel.
     * @param linearHistoryRequirementEnforcementLevel Value for AllowDeletionsEnforcementLevelEnum
     */
    @JsonSetter("linear_history_requirement_enforcement_level")
    public void setLinearHistoryRequirementEnforcementLevel(AllowDeletionsEnforcementLevelEnum linearHistoryRequirementEnforcementLevel) {
        this.linearHistoryRequirementEnforcementLevel = linearHistoryRequirementEnforcementLevel;
    }

    /**
     * Getter for MergeQueueEnforcementLevel.
     * @return Returns the AllowDeletionsEnforcementLevelEnum
     */
    @JsonGetter("merge_queue_enforcement_level")
    public AllowDeletionsEnforcementLevelEnum getMergeQueueEnforcementLevel() {
        return mergeQueueEnforcementLevel;
    }

    /**
     * Setter for MergeQueueEnforcementLevel.
     * @param mergeQueueEnforcementLevel Value for AllowDeletionsEnforcementLevelEnum
     */
    @JsonSetter("merge_queue_enforcement_level")
    public void setMergeQueueEnforcementLevel(AllowDeletionsEnforcementLevelEnum mergeQueueEnforcementLevel) {
        this.mergeQueueEnforcementLevel = mergeQueueEnforcementLevel;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for PullRequestReviewsEnforcementLevel.
     * @return Returns the AllowDeletionsEnforcementLevelEnum
     */
    @JsonGetter("pull_request_reviews_enforcement_level")
    public AllowDeletionsEnforcementLevelEnum getPullRequestReviewsEnforcementLevel() {
        return pullRequestReviewsEnforcementLevel;
    }

    /**
     * Setter for PullRequestReviewsEnforcementLevel.
     * @param pullRequestReviewsEnforcementLevel Value for AllowDeletionsEnforcementLevelEnum
     */
    @JsonSetter("pull_request_reviews_enforcement_level")
    public void setPullRequestReviewsEnforcementLevel(AllowDeletionsEnforcementLevelEnum pullRequestReviewsEnforcementLevel) {
        this.pullRequestReviewsEnforcementLevel = pullRequestReviewsEnforcementLevel;
    }

    /**
     * Getter for RepositoryId.
     * @return Returns the int
     */
    @JsonGetter("repository_id")
    public int getRepositoryId() {
        return repositoryId;
    }

    /**
     * Setter for RepositoryId.
     * @param repositoryId Value for int
     */
    @JsonSetter("repository_id")
    public void setRepositoryId(int repositoryId) {
        this.repositoryId = repositoryId;
    }

    /**
     * Getter for RequireCodeOwnerReview.
     * @return Returns the boolean
     */
    @JsonGetter("require_code_owner_review")
    public boolean getRequireCodeOwnerReview() {
        return requireCodeOwnerReview;
    }

    /**
     * Setter for RequireCodeOwnerReview.
     * @param requireCodeOwnerReview Value for boolean
     */
    @JsonSetter("require_code_owner_review")
    public void setRequireCodeOwnerReview(boolean requireCodeOwnerReview) {
        this.requireCodeOwnerReview = requireCodeOwnerReview;
    }

    /**
     * Getter for RequiredApprovingReviewCount.
     * @return Returns the int
     */
    @JsonGetter("required_approving_review_count")
    public int getRequiredApprovingReviewCount() {
        return requiredApprovingReviewCount;
    }

    /**
     * Setter for RequiredApprovingReviewCount.
     * @param requiredApprovingReviewCount Value for int
     */
    @JsonSetter("required_approving_review_count")
    public void setRequiredApprovingReviewCount(int requiredApprovingReviewCount) {
        this.requiredApprovingReviewCount = requiredApprovingReviewCount;
    }

    /**
     * Getter for RequiredConversationResolutionLevel.
     * @return Returns the AllowDeletionsEnforcementLevelEnum
     */
    @JsonGetter("required_conversation_resolution_level")
    public AllowDeletionsEnforcementLevelEnum getRequiredConversationResolutionLevel() {
        return requiredConversationResolutionLevel;
    }

    /**
     * Setter for RequiredConversationResolutionLevel.
     * @param requiredConversationResolutionLevel Value for AllowDeletionsEnforcementLevelEnum
     */
    @JsonSetter("required_conversation_resolution_level")
    public void setRequiredConversationResolutionLevel(AllowDeletionsEnforcementLevelEnum requiredConversationResolutionLevel) {
        this.requiredConversationResolutionLevel = requiredConversationResolutionLevel;
    }

    /**
     * Getter for RequiredDeploymentsEnforcementLevel.
     * @return Returns the AllowDeletionsEnforcementLevelEnum
     */
    @JsonGetter("required_deployments_enforcement_level")
    public AllowDeletionsEnforcementLevelEnum getRequiredDeploymentsEnforcementLevel() {
        return requiredDeploymentsEnforcementLevel;
    }

    /**
     * Setter for RequiredDeploymentsEnforcementLevel.
     * @param requiredDeploymentsEnforcementLevel Value for AllowDeletionsEnforcementLevelEnum
     */
    @JsonSetter("required_deployments_enforcement_level")
    public void setRequiredDeploymentsEnforcementLevel(AllowDeletionsEnforcementLevelEnum requiredDeploymentsEnforcementLevel) {
        this.requiredDeploymentsEnforcementLevel = requiredDeploymentsEnforcementLevel;
    }

    /**
     * Getter for RequiredStatusChecks.
     * @return Returns the List of String
     */
    @JsonGetter("required_status_checks")
    public List<String> getRequiredStatusChecks() {
        return requiredStatusChecks;
    }

    /**
     * Setter for RequiredStatusChecks.
     * @param requiredStatusChecks Value for List of String
     */
    @JsonSetter("required_status_checks")
    public void setRequiredStatusChecks(List<String> requiredStatusChecks) {
        this.requiredStatusChecks = requiredStatusChecks;
    }

    /**
     * Getter for RequiredStatusChecksEnforcementLevel.
     * @return Returns the AllowDeletionsEnforcementLevelEnum
     */
    @JsonGetter("required_status_checks_enforcement_level")
    public AllowDeletionsEnforcementLevelEnum getRequiredStatusChecksEnforcementLevel() {
        return requiredStatusChecksEnforcementLevel;
    }

    /**
     * Setter for RequiredStatusChecksEnforcementLevel.
     * @param requiredStatusChecksEnforcementLevel Value for AllowDeletionsEnforcementLevelEnum
     */
    @JsonSetter("required_status_checks_enforcement_level")
    public void setRequiredStatusChecksEnforcementLevel(AllowDeletionsEnforcementLevelEnum requiredStatusChecksEnforcementLevel) {
        this.requiredStatusChecksEnforcementLevel = requiredStatusChecksEnforcementLevel;
    }

    /**
     * Getter for SignatureRequirementEnforcementLevel.
     * @return Returns the AllowDeletionsEnforcementLevelEnum
     */
    @JsonGetter("signature_requirement_enforcement_level")
    public AllowDeletionsEnforcementLevelEnum getSignatureRequirementEnforcementLevel() {
        return signatureRequirementEnforcementLevel;
    }

    /**
     * Setter for SignatureRequirementEnforcementLevel.
     * @param signatureRequirementEnforcementLevel Value for AllowDeletionsEnforcementLevelEnum
     */
    @JsonSetter("signature_requirement_enforcement_level")
    public void setSignatureRequirementEnforcementLevel(AllowDeletionsEnforcementLevelEnum signatureRequirementEnforcementLevel) {
        this.signatureRequirementEnforcementLevel = signatureRequirementEnforcementLevel;
    }

    /**
     * Getter for StrictRequiredStatusChecksPolicy.
     * @return Returns the boolean
     */
    @JsonGetter("strict_required_status_checks_policy")
    public boolean getStrictRequiredStatusChecksPolicy() {
        return strictRequiredStatusChecksPolicy;
    }

    /**
     * Setter for StrictRequiredStatusChecksPolicy.
     * @param strictRequiredStatusChecksPolicy Value for boolean
     */
    @JsonSetter("strict_required_status_checks_policy")
    public void setStrictRequiredStatusChecksPolicy(boolean strictRequiredStatusChecksPolicy) {
        this.strictRequiredStatusChecksPolicy = strictRequiredStatusChecksPolicy;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Converts this Branchprotectionrule into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Branchprotectionrule [" + "adminEnforced=" + adminEnforced
                + ", allowDeletionsEnforcementLevel=" + allowDeletionsEnforcementLevel
                + ", allowForcePushesEnforcementLevel=" + allowForcePushesEnforcementLevel
                + ", authorizedActorNames=" + authorizedActorNames + ", authorizedActorsOnly="
                + authorizedActorsOnly + ", authorizedDismissalActorsOnly="
                + authorizedDismissalActorsOnly + ", createdAt=" + createdAt
                + ", dismissStaleReviewsOnPush=" + dismissStaleReviewsOnPush + ", id=" + id
                + ", ignoreApprovalsFromContributors=" + ignoreApprovalsFromContributors
                + ", linearHistoryRequirementEnforcementLevel="
                + linearHistoryRequirementEnforcementLevel + ", mergeQueueEnforcementLevel="
                + mergeQueueEnforcementLevel + ", name=" + name
                + ", pullRequestReviewsEnforcementLevel=" + pullRequestReviewsEnforcementLevel
                + ", repositoryId=" + repositoryId + ", requireCodeOwnerReview="
                + requireCodeOwnerReview + ", requiredApprovingReviewCount="
                + requiredApprovingReviewCount + ", requiredConversationResolutionLevel="
                + requiredConversationResolutionLevel + ", requiredDeploymentsEnforcementLevel="
                + requiredDeploymentsEnforcementLevel + ", requiredStatusChecks="
                + requiredStatusChecks + ", requiredStatusChecksEnforcementLevel="
                + requiredStatusChecksEnforcementLevel + ", signatureRequirementEnforcementLevel="
                + signatureRequirementEnforcementLevel + ", strictRequiredStatusChecksPolicy="
                + strictRequiredStatusChecksPolicy + ", updatedAt=" + updatedAt
                + ", createProtected=" + createProtected + "]";
    }

    /**
     * Builds a new {@link Branchprotectionrule.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Branchprotectionrule.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(adminEnforced, allowDeletionsEnforcementLevel,
                allowForcePushesEnforcementLevel, authorizedActorNames, authorizedActorsOnly,
                authorizedDismissalActorsOnly, createdAt, dismissStaleReviewsOnPush, id,
                ignoreApprovalsFromContributors, linearHistoryRequirementEnforcementLevel,
                mergeQueueEnforcementLevel, name, pullRequestReviewsEnforcementLevel, repositoryId,
                requireCodeOwnerReview, requiredApprovingReviewCount,
                requiredConversationResolutionLevel, requiredDeploymentsEnforcementLevel,
                requiredStatusChecks, requiredStatusChecksEnforcementLevel,
                signatureRequirementEnforcementLevel, strictRequiredStatusChecksPolicy, updatedAt)
                .createProtected(getCreateProtected());
        return builder;
    }

    /**
     * Class to build instances of {@link Branchprotectionrule}.
     */
    public static class Builder {
        private boolean adminEnforced;
        private AllowDeletionsEnforcementLevelEnum allowDeletionsEnforcementLevel;
        private AllowDeletionsEnforcementLevelEnum allowForcePushesEnforcementLevel;
        private List<String> authorizedActorNames;
        private boolean authorizedActorsOnly;
        private boolean authorizedDismissalActorsOnly;
        private LocalDateTime createdAt;
        private boolean dismissStaleReviewsOnPush;
        private int id;
        private boolean ignoreApprovalsFromContributors;
        private AllowDeletionsEnforcementLevelEnum linearHistoryRequirementEnforcementLevel;
        private AllowDeletionsEnforcementLevelEnum mergeQueueEnforcementLevel;
        private String name;
        private AllowDeletionsEnforcementLevelEnum pullRequestReviewsEnforcementLevel;
        private int repositoryId;
        private boolean requireCodeOwnerReview;
        private int requiredApprovingReviewCount;
        private AllowDeletionsEnforcementLevelEnum requiredConversationResolutionLevel;
        private AllowDeletionsEnforcementLevelEnum requiredDeploymentsEnforcementLevel;
        private List<String> requiredStatusChecks;
        private AllowDeletionsEnforcementLevelEnum requiredStatusChecksEnforcementLevel;
        private AllowDeletionsEnforcementLevelEnum signatureRequirementEnforcementLevel;
        private boolean strictRequiredStatusChecksPolicy;
        private LocalDateTime updatedAt;
        private Boolean createProtected;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  adminEnforced  boolean value for adminEnforced.
         * @param  allowDeletionsEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
         *         allowDeletionsEnforcementLevel.
         * @param  allowForcePushesEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
         *         allowForcePushesEnforcementLevel.
         * @param  authorizedActorNames  List of String value for authorizedActorNames.
         * @param  authorizedActorsOnly  boolean value for authorizedActorsOnly.
         * @param  authorizedDismissalActorsOnly  boolean value for authorizedDismissalActorsOnly.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  dismissStaleReviewsOnPush  boolean value for dismissStaleReviewsOnPush.
         * @param  id  int value for id.
         * @param  ignoreApprovalsFromContributors  boolean value for
         *         ignoreApprovalsFromContributors.
         * @param  linearHistoryRequirementEnforcementLevel  AllowDeletionsEnforcementLevelEnum
         *         value for linearHistoryRequirementEnforcementLevel.
         * @param  mergeQueueEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
         *         mergeQueueEnforcementLevel.
         * @param  name  String value for name.
         * @param  pullRequestReviewsEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
         *         pullRequestReviewsEnforcementLevel.
         * @param  repositoryId  int value for repositoryId.
         * @param  requireCodeOwnerReview  boolean value for requireCodeOwnerReview.
         * @param  requiredApprovingReviewCount  int value for requiredApprovingReviewCount.
         * @param  requiredConversationResolutionLevel  AllowDeletionsEnforcementLevelEnum value for
         *         requiredConversationResolutionLevel.
         * @param  requiredDeploymentsEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
         *         requiredDeploymentsEnforcementLevel.
         * @param  requiredStatusChecks  List of String value for requiredStatusChecks.
         * @param  requiredStatusChecksEnforcementLevel  AllowDeletionsEnforcementLevelEnum value
         *         for requiredStatusChecksEnforcementLevel.
         * @param  signatureRequirementEnforcementLevel  AllowDeletionsEnforcementLevelEnum value
         *         for signatureRequirementEnforcementLevel.
         * @param  strictRequiredStatusChecksPolicy  boolean value for
         *         strictRequiredStatusChecksPolicy.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         */
        public Builder(boolean adminEnforced,
                AllowDeletionsEnforcementLevelEnum allowDeletionsEnforcementLevel,
                AllowDeletionsEnforcementLevelEnum allowForcePushesEnforcementLevel,
                List<String> authorizedActorNames, boolean authorizedActorsOnly,
                boolean authorizedDismissalActorsOnly, LocalDateTime createdAt,
                boolean dismissStaleReviewsOnPush, int id, boolean ignoreApprovalsFromContributors,
                AllowDeletionsEnforcementLevelEnum linearHistoryRequirementEnforcementLevel,
                AllowDeletionsEnforcementLevelEnum mergeQueueEnforcementLevel, String name,
                AllowDeletionsEnforcementLevelEnum pullRequestReviewsEnforcementLevel,
                int repositoryId, boolean requireCodeOwnerReview, int requiredApprovingReviewCount,
                AllowDeletionsEnforcementLevelEnum requiredConversationResolutionLevel,
                AllowDeletionsEnforcementLevelEnum requiredDeploymentsEnforcementLevel,
                List<String> requiredStatusChecks,
                AllowDeletionsEnforcementLevelEnum requiredStatusChecksEnforcementLevel,
                AllowDeletionsEnforcementLevelEnum signatureRequirementEnforcementLevel,
                boolean strictRequiredStatusChecksPolicy, LocalDateTime updatedAt) {
            this.adminEnforced = adminEnforced;
            this.allowDeletionsEnforcementLevel = allowDeletionsEnforcementLevel;
            this.allowForcePushesEnforcementLevel = allowForcePushesEnforcementLevel;
            this.authorizedActorNames = authorizedActorNames;
            this.authorizedActorsOnly = authorizedActorsOnly;
            this.authorizedDismissalActorsOnly = authorizedDismissalActorsOnly;
            this.createdAt = createdAt;
            this.dismissStaleReviewsOnPush = dismissStaleReviewsOnPush;
            this.id = id;
            this.ignoreApprovalsFromContributors = ignoreApprovalsFromContributors;
            this.linearHistoryRequirementEnforcementLevel =
                    linearHistoryRequirementEnforcementLevel;
            this.mergeQueueEnforcementLevel = mergeQueueEnforcementLevel;
            this.name = name;
            this.pullRequestReviewsEnforcementLevel = pullRequestReviewsEnforcementLevel;
            this.repositoryId = repositoryId;
            this.requireCodeOwnerReview = requireCodeOwnerReview;
            this.requiredApprovingReviewCount = requiredApprovingReviewCount;
            this.requiredConversationResolutionLevel = requiredConversationResolutionLevel;
            this.requiredDeploymentsEnforcementLevel = requiredDeploymentsEnforcementLevel;
            this.requiredStatusChecks = requiredStatusChecks;
            this.requiredStatusChecksEnforcementLevel = requiredStatusChecksEnforcementLevel;
            this.signatureRequirementEnforcementLevel = signatureRequirementEnforcementLevel;
            this.strictRequiredStatusChecksPolicy = strictRequiredStatusChecksPolicy;
            this.updatedAt = updatedAt;
        }

        /**
         * Setter for adminEnforced.
         * @param  adminEnforced  boolean value for adminEnforced.
         * @return Builder
         */
        public Builder adminEnforced(boolean adminEnforced) {
            this.adminEnforced = adminEnforced;
            return this;
        }

        /**
         * Setter for allowDeletionsEnforcementLevel.
         * @param  allowDeletionsEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
         *         allowDeletionsEnforcementLevel.
         * @return Builder
         */
        public Builder allowDeletionsEnforcementLevel(
                AllowDeletionsEnforcementLevelEnum allowDeletionsEnforcementLevel) {
            this.allowDeletionsEnforcementLevel = allowDeletionsEnforcementLevel;
            return this;
        }

        /**
         * Setter for allowForcePushesEnforcementLevel.
         * @param  allowForcePushesEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
         *         allowForcePushesEnforcementLevel.
         * @return Builder
         */
        public Builder allowForcePushesEnforcementLevel(
                AllowDeletionsEnforcementLevelEnum allowForcePushesEnforcementLevel) {
            this.allowForcePushesEnforcementLevel = allowForcePushesEnforcementLevel;
            return this;
        }

        /**
         * Setter for authorizedActorNames.
         * @param  authorizedActorNames  List of String value for authorizedActorNames.
         * @return Builder
         */
        public Builder authorizedActorNames(List<String> authorizedActorNames) {
            this.authorizedActorNames = authorizedActorNames;
            return this;
        }

        /**
         * Setter for authorizedActorsOnly.
         * @param  authorizedActorsOnly  boolean value for authorizedActorsOnly.
         * @return Builder
         */
        public Builder authorizedActorsOnly(boolean authorizedActorsOnly) {
            this.authorizedActorsOnly = authorizedActorsOnly;
            return this;
        }

        /**
         * Setter for authorizedDismissalActorsOnly.
         * @param  authorizedDismissalActorsOnly  boolean value for authorizedDismissalActorsOnly.
         * @return Builder
         */
        public Builder authorizedDismissalActorsOnly(boolean authorizedDismissalActorsOnly) {
            this.authorizedDismissalActorsOnly = authorizedDismissalActorsOnly;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for dismissStaleReviewsOnPush.
         * @param  dismissStaleReviewsOnPush  boolean value for dismissStaleReviewsOnPush.
         * @return Builder
         */
        public Builder dismissStaleReviewsOnPush(boolean dismissStaleReviewsOnPush) {
            this.dismissStaleReviewsOnPush = dismissStaleReviewsOnPush;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for ignoreApprovalsFromContributors.
         * @param  ignoreApprovalsFromContributors  boolean value for
         *         ignoreApprovalsFromContributors.
         * @return Builder
         */
        public Builder ignoreApprovalsFromContributors(boolean ignoreApprovalsFromContributors) {
            this.ignoreApprovalsFromContributors = ignoreApprovalsFromContributors;
            return this;
        }

        /**
         * Setter for linearHistoryRequirementEnforcementLevel.
         * @param  linearHistoryRequirementEnforcementLevel  AllowDeletionsEnforcementLevelEnum
         *         value for linearHistoryRequirementEnforcementLevel.
         * @return Builder
         */
        public Builder linearHistoryRequirementEnforcementLevel(
                AllowDeletionsEnforcementLevelEnum linearHistoryRequirementEnforcementLevel) {
            this.linearHistoryRequirementEnforcementLevel =
                    linearHistoryRequirementEnforcementLevel;
            return this;
        }

        /**
         * Setter for mergeQueueEnforcementLevel.
         * @param  mergeQueueEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
         *         mergeQueueEnforcementLevel.
         * @return Builder
         */
        public Builder mergeQueueEnforcementLevel(
                AllowDeletionsEnforcementLevelEnum mergeQueueEnforcementLevel) {
            this.mergeQueueEnforcementLevel = mergeQueueEnforcementLevel;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for pullRequestReviewsEnforcementLevel.
         * @param  pullRequestReviewsEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
         *         pullRequestReviewsEnforcementLevel.
         * @return Builder
         */
        public Builder pullRequestReviewsEnforcementLevel(
                AllowDeletionsEnforcementLevelEnum pullRequestReviewsEnforcementLevel) {
            this.pullRequestReviewsEnforcementLevel = pullRequestReviewsEnforcementLevel;
            return this;
        }

        /**
         * Setter for repositoryId.
         * @param  repositoryId  int value for repositoryId.
         * @return Builder
         */
        public Builder repositoryId(int repositoryId) {
            this.repositoryId = repositoryId;
            return this;
        }

        /**
         * Setter for requireCodeOwnerReview.
         * @param  requireCodeOwnerReview  boolean value for requireCodeOwnerReview.
         * @return Builder
         */
        public Builder requireCodeOwnerReview(boolean requireCodeOwnerReview) {
            this.requireCodeOwnerReview = requireCodeOwnerReview;
            return this;
        }

        /**
         * Setter for requiredApprovingReviewCount.
         * @param  requiredApprovingReviewCount  int value for requiredApprovingReviewCount.
         * @return Builder
         */
        public Builder requiredApprovingReviewCount(int requiredApprovingReviewCount) {
            this.requiredApprovingReviewCount = requiredApprovingReviewCount;
            return this;
        }

        /**
         * Setter for requiredConversationResolutionLevel.
         * @param  requiredConversationResolutionLevel  AllowDeletionsEnforcementLevelEnum value for
         *         requiredConversationResolutionLevel.
         * @return Builder
         */
        public Builder requiredConversationResolutionLevel(
                AllowDeletionsEnforcementLevelEnum requiredConversationResolutionLevel) {
            this.requiredConversationResolutionLevel = requiredConversationResolutionLevel;
            return this;
        }

        /**
         * Setter for requiredDeploymentsEnforcementLevel.
         * @param  requiredDeploymentsEnforcementLevel  AllowDeletionsEnforcementLevelEnum value for
         *         requiredDeploymentsEnforcementLevel.
         * @return Builder
         */
        public Builder requiredDeploymentsEnforcementLevel(
                AllowDeletionsEnforcementLevelEnum requiredDeploymentsEnforcementLevel) {
            this.requiredDeploymentsEnforcementLevel = requiredDeploymentsEnforcementLevel;
            return this;
        }

        /**
         * Setter for requiredStatusChecks.
         * @param  requiredStatusChecks  List of String value for requiredStatusChecks.
         * @return Builder
         */
        public Builder requiredStatusChecks(List<String> requiredStatusChecks) {
            this.requiredStatusChecks = requiredStatusChecks;
            return this;
        }

        /**
         * Setter for requiredStatusChecksEnforcementLevel.
         * @param  requiredStatusChecksEnforcementLevel  AllowDeletionsEnforcementLevelEnum value
         *         for requiredStatusChecksEnforcementLevel.
         * @return Builder
         */
        public Builder requiredStatusChecksEnforcementLevel(
                AllowDeletionsEnforcementLevelEnum requiredStatusChecksEnforcementLevel) {
            this.requiredStatusChecksEnforcementLevel = requiredStatusChecksEnforcementLevel;
            return this;
        }

        /**
         * Setter for signatureRequirementEnforcementLevel.
         * @param  signatureRequirementEnforcementLevel  AllowDeletionsEnforcementLevelEnum value
         *         for signatureRequirementEnforcementLevel.
         * @return Builder
         */
        public Builder signatureRequirementEnforcementLevel(
                AllowDeletionsEnforcementLevelEnum signatureRequirementEnforcementLevel) {
            this.signatureRequirementEnforcementLevel = signatureRequirementEnforcementLevel;
            return this;
        }

        /**
         * Setter for strictRequiredStatusChecksPolicy.
         * @param  strictRequiredStatusChecksPolicy  boolean value for
         *         strictRequiredStatusChecksPolicy.
         * @return Builder
         */
        public Builder strictRequiredStatusChecksPolicy(
                boolean strictRequiredStatusChecksPolicy) {
            this.strictRequiredStatusChecksPolicy = strictRequiredStatusChecksPolicy;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for createProtected.
         * @param  createProtected  Boolean value for createProtected.
         * @return Builder
         */
        public Builder createProtected(Boolean createProtected) {
            this.createProtected = createProtected;
            return this;
        }

        /**
         * Builds a new {@link Branchprotectionrule} object using the set fields.
         * @return {@link Branchprotectionrule}
         */
        public Branchprotectionrule build() {
            return new Branchprotectionrule(adminEnforced, allowDeletionsEnforcementLevel,
                    allowForcePushesEnforcementLevel, authorizedActorNames, authorizedActorsOnly,
                    authorizedDismissalActorsOnly, createdAt, dismissStaleReviewsOnPush, id,
                    ignoreApprovalsFromContributors, linearHistoryRequirementEnforcementLevel,
                    mergeQueueEnforcementLevel, name, pullRequestReviewsEnforcementLevel,
                    repositoryId, requireCodeOwnerReview, requiredApprovingReviewCount,
                    requiredConversationResolutionLevel, requiredDeploymentsEnforcementLevel,
                    requiredStatusChecks, requiredStatusChecksEnforcementLevel,
                    signatureRequirementEnforcementLevel, strictRequiredStatusChecksPolicy,
                    updatedAt, createProtected);
        }
    }
}
