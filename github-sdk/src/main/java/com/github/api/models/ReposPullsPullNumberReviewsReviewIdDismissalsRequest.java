/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for ReposPullsPullNumberReviewsReviewIdDismissalsRequest type.
 */
public class ReposPullsPullNumberReviewsReviewIdDismissalsRequest {
    private String message;
    private Event30Enum event;

    /**
     * Default constructor.
     */
    public ReposPullsPullNumberReviewsReviewIdDismissalsRequest() {
    }

    /**
     * Initialization constructor.
     * @param  message  String value for message.
     * @param  event  Event30Enum value for event.
     */
    public ReposPullsPullNumberReviewsReviewIdDismissalsRequest(
            String message,
            Event30Enum event) {
        this.message = message;
        this.event = event;
    }

    /**
     * Getter for Message.
     * The message for the pull request review dismissal
     * @return Returns the String
     */
    @JsonGetter("message")
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * The message for the pull request review dismissal
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for Event.
     * @return Returns the Event30Enum
     */
    @JsonGetter("event")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Event30Enum getEvent() {
        return event;
    }

    /**
     * Setter for Event.
     * @param event Value for Event30Enum
     */
    @JsonSetter("event")
    public void setEvent(Event30Enum event) {
        this.event = event;
    }

    /**
     * Converts this ReposPullsPullNumberReviewsReviewIdDismissalsRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposPullsPullNumberReviewsReviewIdDismissalsRequest [" + "message=" + message
                + ", event=" + event + "]";
    }

    /**
     * Builds a new {@link ReposPullsPullNumberReviewsReviewIdDismissalsRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposPullsPullNumberReviewsReviewIdDismissalsRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(message)
                .event(getEvent());
        return builder;
    }

    /**
     * Class to build instances of {@link ReposPullsPullNumberReviewsReviewIdDismissalsRequest}.
     */
    public static class Builder {
        private String message;
        private Event30Enum event;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  message  String value for message.
         */
        public Builder(String message) {
            this.message = message;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for event.
         * @param  event  Event30Enum value for event.
         * @return Builder
         */
        public Builder event(Event30Enum event) {
            this.event = event;
            return this;
        }

        /**
         * Builds a new {@link ReposPullsPullNumberReviewsReviewIdDismissalsRequest} object using
         * the set fields.
         * @return {@link ReposPullsPullNumberReviewsReviewIdDismissalsRequest}
         */
        public ReposPullsPullNumberReviewsReviewIdDismissalsRequest build() {
            return new ReposPullsPullNumberReviewsReviewIdDismissalsRequest(message, event);
        }
    }
}
