/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.github.api.ApiHelper;
import com.github.api.models.SimpleUser;
import com.github.api.models.Stargazer;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = ActivityListStargazersForRepoResponse.ActivityListStargazersForRepoResponseDeserializer.class)
public abstract class ActivityListStargazersForRepoResponse {
    
    /**
     * Any-of type initialization method.
     * @param simpleUser List of SimpleUser value for simpleUser.
     * @return The SimpleUserCase object.
     */
    public static ActivityListStargazersForRepoResponse fromSimpleUser(
            List<SimpleUser> simpleUser) {
        return simpleUser == null ? null : new SimpleUserCase(simpleUser);
    }

    /**
     * Any-of type initialization method.
     * @param stargazer List of Stargazer value for stargazer.
     * @return The StargazerCase object.
     */
    public static ActivityListStargazersForRepoResponse fromStargazer(List<Stargazer> stargazer) {
        return stargazer == null ? null : new StargazerCase(stargazer);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R simpleUser(List<SimpleUser> simpleUser);

        R stargazer(List<Stargazer> stargazer);
    }

    /**
     * This is a implementation class for SimpleUserCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase
    private static class SimpleUserCase extends ActivityListStargazersForRepoResponse {

        @JsonValue
        private List<SimpleUser> simpleUser;

        SimpleUserCase(List<SimpleUser> simpleUser) {
            this.simpleUser = simpleUser;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.simpleUser(this.simpleUser);
        }

        @JsonCreator
        private SimpleUserCase(JsonNode jsonNode) throws IOException {
            this.simpleUser = ApiHelper.deserializeArray(jsonNode,
                SimpleUser[].class);
        }

        @Override
        public String toString() {
            return simpleUser.toString();
        }
    }

    /**
     * This is a implementation class for StargazerCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase
    private static class StargazerCase extends ActivityListStargazersForRepoResponse {

        @JsonValue
        private List<Stargazer> stargazer;

        StargazerCase(List<Stargazer> stargazer) {
            this.stargazer = stargazer;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.stargazer(this.stargazer);
        }

        @JsonCreator
        private StargazerCase(JsonNode jsonNode) throws IOException {
            this.stargazer = ApiHelper.deserializeArray(jsonNode,
                Stargazer[].class);
        }

        @Override
        public String toString() {
            return stargazer.toString();
        }
    }

    /**
     * This is a custom deserializer class for ActivityListStargazersForRepoResponse.
     */
    protected static class ActivityListStargazersForRepoResponseDeserializer
            extends JsonDeserializer<ActivityListStargazersForRepoResponse> {

        @Override
        public ActivityListStargazersForRepoResponse deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(SimpleUserCase.class,
                    StargazerCase.class), false);
        }
    }

}
