/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for CommitSearchResultItem type.
 */
public class CommitSearchResultItem {
    private String url;
    private String sha;
    private String htmlUrl;
    private String commentsUrl;
    private Commit6 commit;
    private Object author;
    private Object committer;
    private List<Parent1> parents;
    private Repository7 repository;
    private double score;
    private String nodeId;
    private List<SearchResultTextMatch> textMatches;

    /**
     * Default constructor.
     */
    public CommitSearchResultItem() {
    }

    /**
     * Initialization constructor.
     * @param  url  String value for url.
     * @param  sha  String value for sha.
     * @param  htmlUrl  String value for htmlUrl.
     * @param  commentsUrl  String value for commentsUrl.
     * @param  commit  Commit6 value for commit.
     * @param  author  Object value for author.
     * @param  committer  Object value for committer.
     * @param  parents  List of Parent1 value for parents.
     * @param  repository  Repository7 value for repository.
     * @param  score  double value for score.
     * @param  nodeId  String value for nodeId.
     * @param  textMatches  List of SearchResultTextMatch value for textMatches.
     */
    public CommitSearchResultItem(
            String url,
            String sha,
            String htmlUrl,
            String commentsUrl,
            Commit6 commit,
            Object author,
            Object committer,
            List<Parent1> parents,
            Repository7 repository,
            double score,
            String nodeId,
            List<SearchResultTextMatch> textMatches) {
        this.url = url;
        this.sha = sha;
        this.htmlUrl = htmlUrl;
        this.commentsUrl = commentsUrl;
        this.commit = commit;
        this.author = author;
        this.committer = committer;
        this.parents = parents;
        this.repository = repository;
        this.score = score;
        this.nodeId = nodeId;
        this.textMatches = textMatches;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for Sha.
     * @return Returns the String
     */
    @JsonGetter("sha")
    public String getSha() {
        return sha;
    }

    /**
     * Setter for Sha.
     * @param sha Value for String
     */
    @JsonSetter("sha")
    public void setSha(String sha) {
        this.sha = sha;
    }

    /**
     * Getter for HtmlUrl.
     * @return Returns the String
     */
    @JsonGetter("html_url")
    public String getHtmlUrl() {
        return htmlUrl;
    }

    /**
     * Setter for HtmlUrl.
     * @param htmlUrl Value for String
     */
    @JsonSetter("html_url")
    public void setHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
    }

    /**
     * Getter for CommentsUrl.
     * @return Returns the String
     */
    @JsonGetter("comments_url")
    public String getCommentsUrl() {
        return commentsUrl;
    }

    /**
     * Setter for CommentsUrl.
     * @param commentsUrl Value for String
     */
    @JsonSetter("comments_url")
    public void setCommentsUrl(String commentsUrl) {
        this.commentsUrl = commentsUrl;
    }

    /**
     * Getter for Commit.
     * @return Returns the Commit6
     */
    @JsonGetter("commit")
    public Commit6 getCommit() {
        return commit;
    }

    /**
     * Setter for Commit.
     * @param commit Value for Commit6
     */
    @JsonSetter("commit")
    public void setCommit(Commit6 commit) {
        this.commit = commit;
    }

    /**
     * Getter for Author.
     * @return Returns the Object
     */
    @JsonGetter("author")
    public Object getAuthor() {
        return author;
    }

    /**
     * Setter for Author.
     * @param author Value for Object
     */
    @JsonSetter("author")
    public void setAuthor(Object author) {
        this.author = author;
    }

    /**
     * Getter for Committer.
     * @return Returns the Object
     */
    @JsonGetter("committer")
    public Object getCommitter() {
        return committer;
    }

    /**
     * Setter for Committer.
     * @param committer Value for Object
     */
    @JsonSetter("committer")
    public void setCommitter(Object committer) {
        this.committer = committer;
    }

    /**
     * Getter for Parents.
     * @return Returns the List of Parent1
     */
    @JsonGetter("parents")
    public List<Parent1> getParents() {
        return parents;
    }

    /**
     * Setter for Parents.
     * @param parents Value for List of Parent1
     */
    @JsonSetter("parents")
    public void setParents(List<Parent1> parents) {
        this.parents = parents;
    }

    /**
     * Getter for Repository.
     * @return Returns the Repository7
     */
    @JsonGetter("repository")
    public Repository7 getRepository() {
        return repository;
    }

    /**
     * Setter for Repository.
     * @param repository Value for Repository7
     */
    @JsonSetter("repository")
    public void setRepository(Repository7 repository) {
        this.repository = repository;
    }

    /**
     * Getter for Score.
     * @return Returns the double
     */
    @JsonGetter("score")
    public double getScore() {
        return score;
    }

    /**
     * Setter for Score.
     * @param score Value for double
     */
    @JsonSetter("score")
    public void setScore(double score) {
        this.score = score;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for TextMatches.
     * @return Returns the List of SearchResultTextMatch
     */
    @JsonGetter("text_matches")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<SearchResultTextMatch> getTextMatches() {
        return textMatches;
    }

    /**
     * Setter for TextMatches.
     * @param textMatches Value for List of SearchResultTextMatch
     */
    @JsonSetter("text_matches")
    public void setTextMatches(List<SearchResultTextMatch> textMatches) {
        this.textMatches = textMatches;
    }

    /**
     * Converts this CommitSearchResultItem into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CommitSearchResultItem [" + "url=" + url + ", sha=" + sha + ", htmlUrl=" + htmlUrl
                + ", commentsUrl=" + commentsUrl + ", commit=" + commit + ", author=" + author
                + ", committer=" + committer + ", parents=" + parents + ", repository=" + repository
                + ", score=" + score + ", nodeId=" + nodeId + ", textMatches=" + textMatches + "]";
    }

    /**
     * Builds a new {@link CommitSearchResultItem.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CommitSearchResultItem.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(url, sha, htmlUrl, commentsUrl, commit, author, committer,
                parents, repository, score, nodeId)
                .textMatches(getTextMatches());
        return builder;
    }

    /**
     * Class to build instances of {@link CommitSearchResultItem}.
     */
    public static class Builder {
        private String url;
        private String sha;
        private String htmlUrl;
        private String commentsUrl;
        private Commit6 commit;
        private Object author;
        private Object committer;
        private List<Parent1> parents;
        private Repository7 repository;
        private double score;
        private String nodeId;
        private List<SearchResultTextMatch> textMatches;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  url  String value for url.
         * @param  sha  String value for sha.
         * @param  htmlUrl  String value for htmlUrl.
         * @param  commentsUrl  String value for commentsUrl.
         * @param  commit  Commit6 value for commit.
         * @param  author  Object value for author.
         * @param  committer  Object value for committer.
         * @param  parents  List of Parent1 value for parents.
         * @param  repository  Repository7 value for repository.
         * @param  score  double value for score.
         * @param  nodeId  String value for nodeId.
         */
        public Builder(String url, String sha, String htmlUrl, String commentsUrl, Commit6 commit,
                Object author, Object committer, List<Parent1> parents, Repository7 repository,
                double score, String nodeId) {
            this.url = url;
            this.sha = sha;
            this.htmlUrl = htmlUrl;
            this.commentsUrl = commentsUrl;
            this.commit = commit;
            this.author = author;
            this.committer = committer;
            this.parents = parents;
            this.repository = repository;
            this.score = score;
            this.nodeId = nodeId;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for sha.
         * @param  sha  String value for sha.
         * @return Builder
         */
        public Builder sha(String sha) {
            this.sha = sha;
            return this;
        }

        /**
         * Setter for htmlUrl.
         * @param  htmlUrl  String value for htmlUrl.
         * @return Builder
         */
        public Builder htmlUrl(String htmlUrl) {
            this.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * Setter for commentsUrl.
         * @param  commentsUrl  String value for commentsUrl.
         * @return Builder
         */
        public Builder commentsUrl(String commentsUrl) {
            this.commentsUrl = commentsUrl;
            return this;
        }

        /**
         * Setter for commit.
         * @param  commit  Commit6 value for commit.
         * @return Builder
         */
        public Builder commit(Commit6 commit) {
            this.commit = commit;
            return this;
        }

        /**
         * Setter for author.
         * @param  author  Object value for author.
         * @return Builder
         */
        public Builder author(Object author) {
            this.author = author;
            return this;
        }

        /**
         * Setter for committer.
         * @param  committer  Object value for committer.
         * @return Builder
         */
        public Builder committer(Object committer) {
            this.committer = committer;
            return this;
        }

        /**
         * Setter for parents.
         * @param  parents  List of Parent1 value for parents.
         * @return Builder
         */
        public Builder parents(List<Parent1> parents) {
            this.parents = parents;
            return this;
        }

        /**
         * Setter for repository.
         * @param  repository  Repository7 value for repository.
         * @return Builder
         */
        public Builder repository(Repository7 repository) {
            this.repository = repository;
            return this;
        }

        /**
         * Setter for score.
         * @param  score  double value for score.
         * @return Builder
         */
        public Builder score(double score) {
            this.score = score;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for textMatches.
         * @param  textMatches  List of SearchResultTextMatch value for textMatches.
         * @return Builder
         */
        public Builder textMatches(List<SearchResultTextMatch> textMatches) {
            this.textMatches = textMatches;
            return this;
        }

        /**
         * Builds a new {@link CommitSearchResultItem} object using the set fields.
         * @return {@link CommitSearchResultItem}
         */
        public CommitSearchResultItem build() {
            return new CommitSearchResultItem(url, sha, htmlUrl, commentsUrl, commit, author,
                    committer, parents, repository, score, nodeId, textMatches);
        }
    }
}
