/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;

/**
 * This is a model class for Projectsv2Item type.
 */
public class Projectsv2Item {
    private double id;
    private String nodeId;
    private String projectNodeId;
    private String contentNodeId;
    private Projectsv2ItemContentTypeEnum contentType;
    private Creator creator;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private LocalDateTime archivedAt;

    /**
     * Default constructor.
     */
    public Projectsv2Item() {
    }

    /**
     * Initialization constructor.
     * @param  id  double value for id.
     * @param  contentNodeId  String value for contentNodeId.
     * @param  contentType  Projectsv2ItemContentTypeEnum value for contentType.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  archivedAt  LocalDateTime value for archivedAt.
     * @param  nodeId  String value for nodeId.
     * @param  projectNodeId  String value for projectNodeId.
     * @param  creator  Creator value for creator.
     */
    public Projectsv2Item(
            double id,
            String contentNodeId,
            Projectsv2ItemContentTypeEnum contentType,
            LocalDateTime createdAt,
            LocalDateTime updatedAt,
            LocalDateTime archivedAt,
            String nodeId,
            String projectNodeId,
            Creator creator) {
        this.id = id;
        this.nodeId = nodeId;
        this.projectNodeId = projectNodeId;
        this.contentNodeId = contentNodeId;
        this.contentType = contentType;
        this.creator = creator;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.archivedAt = archivedAt;
    }

    /**
     * Getter for Id.
     * @return Returns the double
     */
    @JsonGetter("id")
    public double getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for double
     */
    @JsonSetter("id")
    public void setId(double id) {
        this.id = id;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for ProjectNodeId.
     * @return Returns the String
     */
    @JsonGetter("project_node_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getProjectNodeId() {
        return projectNodeId;
    }

    /**
     * Setter for ProjectNodeId.
     * @param projectNodeId Value for String
     */
    @JsonSetter("project_node_id")
    public void setProjectNodeId(String projectNodeId) {
        this.projectNodeId = projectNodeId;
    }

    /**
     * Getter for ContentNodeId.
     * @return Returns the String
     */
    @JsonGetter("content_node_id")
    public String getContentNodeId() {
        return contentNodeId;
    }

    /**
     * Setter for ContentNodeId.
     * @param contentNodeId Value for String
     */
    @JsonSetter("content_node_id")
    public void setContentNodeId(String contentNodeId) {
        this.contentNodeId = contentNodeId;
    }

    /**
     * Getter for ContentType.
     * @return Returns the Projectsv2ItemContentTypeEnum
     */
    @JsonGetter("content_type")
    public Projectsv2ItemContentTypeEnum getContentType() {
        return contentType;
    }

    /**
     * Setter for ContentType.
     * @param contentType Value for Projectsv2ItemContentTypeEnum
     */
    @JsonSetter("content_type")
    public void setContentType(Projectsv2ItemContentTypeEnum contentType) {
        this.contentType = contentType;
    }

    /**
     * Getter for Creator.
     * @return Returns the Creator
     */
    @JsonGetter("creator")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Creator getCreator() {
        return creator;
    }

    /**
     * Setter for Creator.
     * @param creator Value for Creator
     */
    @JsonSetter("creator")
    public void setCreator(Creator creator) {
        this.creator = creator;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for ArchivedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("archived_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getArchivedAt() {
        return archivedAt;
    }

    /**
     * Setter for ArchivedAt.
     * @param archivedAt Value for LocalDateTime
     */
    @JsonSetter("archived_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setArchivedAt(LocalDateTime archivedAt) {
        this.archivedAt = archivedAt;
    }

    /**
     * Converts this Projectsv2Item into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Projectsv2Item [" + "id=" + id + ", contentNodeId=" + contentNodeId
                + ", contentType=" + contentType + ", createdAt=" + createdAt + ", updatedAt="
                + updatedAt + ", archivedAt=" + archivedAt + ", nodeId=" + nodeId
                + ", projectNodeId=" + projectNodeId + ", creator=" + creator + "]";
    }

    /**
     * Builds a new {@link Projectsv2Item.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Projectsv2Item.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, contentNodeId, contentType, createdAt, updatedAt,
                archivedAt)
                .nodeId(getNodeId())
                .projectNodeId(getProjectNodeId())
                .creator(getCreator());
        return builder;
    }

    /**
     * Class to build instances of {@link Projectsv2Item}.
     */
    public static class Builder {
        private double id;
        private String contentNodeId;
        private Projectsv2ItemContentTypeEnum contentType;
        private LocalDateTime createdAt;
        private LocalDateTime updatedAt;
        private LocalDateTime archivedAt;
        private String nodeId;
        private String projectNodeId;
        private Creator creator;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  double value for id.
         * @param  contentNodeId  String value for contentNodeId.
         * @param  contentType  Projectsv2ItemContentTypeEnum value for contentType.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @param  archivedAt  LocalDateTime value for archivedAt.
         */
        public Builder(double id, String contentNodeId, Projectsv2ItemContentTypeEnum contentType,
                LocalDateTime createdAt, LocalDateTime updatedAt, LocalDateTime archivedAt) {
            this.id = id;
            this.contentNodeId = contentNodeId;
            this.contentType = contentType;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
            this.archivedAt = archivedAt;
        }

        /**
         * Setter for id.
         * @param  id  double value for id.
         * @return Builder
         */
        public Builder id(double id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for contentNodeId.
         * @param  contentNodeId  String value for contentNodeId.
         * @return Builder
         */
        public Builder contentNodeId(String contentNodeId) {
            this.contentNodeId = contentNodeId;
            return this;
        }

        /**
         * Setter for contentType.
         * @param  contentType  Projectsv2ItemContentTypeEnum value for contentType.
         * @return Builder
         */
        public Builder contentType(Projectsv2ItemContentTypeEnum contentType) {
            this.contentType = contentType;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for archivedAt.
         * @param  archivedAt  LocalDateTime value for archivedAt.
         * @return Builder
         */
        public Builder archivedAt(LocalDateTime archivedAt) {
            this.archivedAt = archivedAt;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for projectNodeId.
         * @param  projectNodeId  String value for projectNodeId.
         * @return Builder
         */
        public Builder projectNodeId(String projectNodeId) {
            this.projectNodeId = projectNodeId;
            return this;
        }

        /**
         * Setter for creator.
         * @param  creator  Creator value for creator.
         * @return Builder
         */
        public Builder creator(Creator creator) {
            this.creator = creator;
            return this;
        }

        /**
         * Builds a new {@link Projectsv2Item} object using the set fields.
         * @return {@link Projectsv2Item}
         */
        public Projectsv2Item build() {
            return new Projectsv2Item(id, contentNodeId, contentType, createdAt, updatedAt,
                    archivedAt, nodeId, projectNodeId, creator);
        }
    }
}
