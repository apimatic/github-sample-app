/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Changes29 type.
 */
public class Changes29 {
    private Body defaultBranch;
    private Description2 description;
    private Description2 homepage;
    private Topics topics;

    /**
     * Default constructor.
     */
    public Changes29() {
    }

    /**
     * Initialization constructor.
     * @param  defaultBranch  Body value for defaultBranch.
     * @param  description  Description2 value for description.
     * @param  homepage  Description2 value for homepage.
     * @param  topics  Topics value for topics.
     */
    public Changes29(
            Body defaultBranch,
            Description2 description,
            Description2 homepage,
            Topics topics) {
        this.defaultBranch = defaultBranch;
        this.description = description;
        this.homepage = homepage;
        this.topics = topics;
    }

    /**
     * Getter for DefaultBranch.
     * @return Returns the Body
     */
    @JsonGetter("default_branch")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Body getDefaultBranch() {
        return defaultBranch;
    }

    /**
     * Setter for DefaultBranch.
     * @param defaultBranch Value for Body
     */
    @JsonSetter("default_branch")
    public void setDefaultBranch(Body defaultBranch) {
        this.defaultBranch = defaultBranch;
    }

    /**
     * Getter for Description.
     * @return Returns the Description2
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Description2 getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for Description2
     */
    @JsonSetter("description")
    public void setDescription(Description2 description) {
        this.description = description;
    }

    /**
     * Getter for Homepage.
     * @return Returns the Description2
     */
    @JsonGetter("homepage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Description2 getHomepage() {
        return homepage;
    }

    /**
     * Setter for Homepage.
     * @param homepage Value for Description2
     */
    @JsonSetter("homepage")
    public void setHomepage(Description2 homepage) {
        this.homepage = homepage;
    }

    /**
     * Getter for Topics.
     * @return Returns the Topics
     */
    @JsonGetter("topics")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Topics getTopics() {
        return topics;
    }

    /**
     * Setter for Topics.
     * @param topics Value for Topics
     */
    @JsonSetter("topics")
    public void setTopics(Topics topics) {
        this.topics = topics;
    }

    /**
     * Converts this Changes29 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Changes29 [" + "defaultBranch=" + defaultBranch + ", description=" + description
                + ", homepage=" + homepage + ", topics=" + topics + "]";
    }

    /**
     * Builds a new {@link Changes29.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Changes29.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .defaultBranch(getDefaultBranch())
                .description(getDescription())
                .homepage(getHomepage())
                .topics(getTopics());
        return builder;
    }

    /**
     * Class to build instances of {@link Changes29}.
     */
    public static class Builder {
        private Body defaultBranch;
        private Description2 description;
        private Description2 homepage;
        private Topics topics;



        /**
         * Setter for defaultBranch.
         * @param  defaultBranch  Body value for defaultBranch.
         * @return Builder
         */
        public Builder defaultBranch(Body defaultBranch) {
            this.defaultBranch = defaultBranch;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  Description2 value for description.
         * @return Builder
         */
        public Builder description(Description2 description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for homepage.
         * @param  homepage  Description2 value for homepage.
         * @return Builder
         */
        public Builder homepage(Description2 homepage) {
            this.homepage = homepage;
            return this;
        }

        /**
         * Setter for topics.
         * @param  topics  Topics value for topics.
         * @return Builder
         */
        public Builder topics(Topics topics) {
            this.topics = topics;
            return this;
        }

        /**
         * Builds a new {@link Changes29} object using the set fields.
         * @return {@link Changes29}
         */
        public Changes29 build() {
            return new Changes29(defaultBranch, description, homepage, topics);
        }
    }
}
