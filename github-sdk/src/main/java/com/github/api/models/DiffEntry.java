/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for DiffEntry type.
 */
public class DiffEntry {
    private String sha;
    private String filename;
    private Status5Enum status;
    private int additions;
    private int deletions;
    private int changes;
    private String blobUrl;
    private String rawUrl;
    private String contentsUrl;
    private String patch;
    private String previousFilename;

    /**
     * Default constructor.
     */
    public DiffEntry() {
    }

    /**
     * Initialization constructor.
     * @param  sha  String value for sha.
     * @param  filename  String value for filename.
     * @param  status  Status5Enum value for status.
     * @param  additions  int value for additions.
     * @param  deletions  int value for deletions.
     * @param  changes  int value for changes.
     * @param  blobUrl  String value for blobUrl.
     * @param  rawUrl  String value for rawUrl.
     * @param  contentsUrl  String value for contentsUrl.
     * @param  patch  String value for patch.
     * @param  previousFilename  String value for previousFilename.
     */
    public DiffEntry(
            String sha,
            String filename,
            Status5Enum status,
            int additions,
            int deletions,
            int changes,
            String blobUrl,
            String rawUrl,
            String contentsUrl,
            String patch,
            String previousFilename) {
        this.sha = sha;
        this.filename = filename;
        this.status = status;
        this.additions = additions;
        this.deletions = deletions;
        this.changes = changes;
        this.blobUrl = blobUrl;
        this.rawUrl = rawUrl;
        this.contentsUrl = contentsUrl;
        this.patch = patch;
        this.previousFilename = previousFilename;
    }

    /**
     * Getter for Sha.
     * @return Returns the String
     */
    @JsonGetter("sha")
    public String getSha() {
        return sha;
    }

    /**
     * Setter for Sha.
     * @param sha Value for String
     */
    @JsonSetter("sha")
    public void setSha(String sha) {
        this.sha = sha;
    }

    /**
     * Getter for Filename.
     * @return Returns the String
     */
    @JsonGetter("filename")
    public String getFilename() {
        return filename;
    }

    /**
     * Setter for Filename.
     * @param filename Value for String
     */
    @JsonSetter("filename")
    public void setFilename(String filename) {
        this.filename = filename;
    }

    /**
     * Getter for Status.
     * @return Returns the Status5Enum
     */
    @JsonGetter("status")
    public Status5Enum getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * @param status Value for Status5Enum
     */
    @JsonSetter("status")
    public void setStatus(Status5Enum status) {
        this.status = status;
    }

    /**
     * Getter for Additions.
     * @return Returns the int
     */
    @JsonGetter("additions")
    public int getAdditions() {
        return additions;
    }

    /**
     * Setter for Additions.
     * @param additions Value for int
     */
    @JsonSetter("additions")
    public void setAdditions(int additions) {
        this.additions = additions;
    }

    /**
     * Getter for Deletions.
     * @return Returns the int
     */
    @JsonGetter("deletions")
    public int getDeletions() {
        return deletions;
    }

    /**
     * Setter for Deletions.
     * @param deletions Value for int
     */
    @JsonSetter("deletions")
    public void setDeletions(int deletions) {
        this.deletions = deletions;
    }

    /**
     * Getter for Changes.
     * @return Returns the int
     */
    @JsonGetter("changes")
    public int getChanges() {
        return changes;
    }

    /**
     * Setter for Changes.
     * @param changes Value for int
     */
    @JsonSetter("changes")
    public void setChanges(int changes) {
        this.changes = changes;
    }

    /**
     * Getter for BlobUrl.
     * @return Returns the String
     */
    @JsonGetter("blob_url")
    public String getBlobUrl() {
        return blobUrl;
    }

    /**
     * Setter for BlobUrl.
     * @param blobUrl Value for String
     */
    @JsonSetter("blob_url")
    public void setBlobUrl(String blobUrl) {
        this.blobUrl = blobUrl;
    }

    /**
     * Getter for RawUrl.
     * @return Returns the String
     */
    @JsonGetter("raw_url")
    public String getRawUrl() {
        return rawUrl;
    }

    /**
     * Setter for RawUrl.
     * @param rawUrl Value for String
     */
    @JsonSetter("raw_url")
    public void setRawUrl(String rawUrl) {
        this.rawUrl = rawUrl;
    }

    /**
     * Getter for ContentsUrl.
     * @return Returns the String
     */
    @JsonGetter("contents_url")
    public String getContentsUrl() {
        return contentsUrl;
    }

    /**
     * Setter for ContentsUrl.
     * @param contentsUrl Value for String
     */
    @JsonSetter("contents_url")
    public void setContentsUrl(String contentsUrl) {
        this.contentsUrl = contentsUrl;
    }

    /**
     * Getter for Patch.
     * @return Returns the String
     */
    @JsonGetter("patch")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPatch() {
        return patch;
    }

    /**
     * Setter for Patch.
     * @param patch Value for String
     */
    @JsonSetter("patch")
    public void setPatch(String patch) {
        this.patch = patch;
    }

    /**
     * Getter for PreviousFilename.
     * @return Returns the String
     */
    @JsonGetter("previous_filename")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPreviousFilename() {
        return previousFilename;
    }

    /**
     * Setter for PreviousFilename.
     * @param previousFilename Value for String
     */
    @JsonSetter("previous_filename")
    public void setPreviousFilename(String previousFilename) {
        this.previousFilename = previousFilename;
    }

    /**
     * Converts this DiffEntry into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DiffEntry [" + "sha=" + sha + ", filename=" + filename + ", status=" + status
                + ", additions=" + additions + ", deletions=" + deletions + ", changes=" + changes
                + ", blobUrl=" + blobUrl + ", rawUrl=" + rawUrl + ", contentsUrl=" + contentsUrl
                + ", patch=" + patch + ", previousFilename=" + previousFilename + "]";
    }

    /**
     * Builds a new {@link DiffEntry.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DiffEntry.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(sha, filename, status, additions, deletions, changes, blobUrl,
                rawUrl, contentsUrl)
                .patch(getPatch())
                .previousFilename(getPreviousFilename());
        return builder;
    }

    /**
     * Class to build instances of {@link DiffEntry}.
     */
    public static class Builder {
        private String sha;
        private String filename;
        private Status5Enum status;
        private int additions;
        private int deletions;
        private int changes;
        private String blobUrl;
        private String rawUrl;
        private String contentsUrl;
        private String patch;
        private String previousFilename;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  sha  String value for sha.
         * @param  filename  String value for filename.
         * @param  status  Status5Enum value for status.
         * @param  additions  int value for additions.
         * @param  deletions  int value for deletions.
         * @param  changes  int value for changes.
         * @param  blobUrl  String value for blobUrl.
         * @param  rawUrl  String value for rawUrl.
         * @param  contentsUrl  String value for contentsUrl.
         */
        public Builder(String sha, String filename, Status5Enum status, int additions,
                int deletions, int changes, String blobUrl, String rawUrl, String contentsUrl) {
            this.sha = sha;
            this.filename = filename;
            this.status = status;
            this.additions = additions;
            this.deletions = deletions;
            this.changes = changes;
            this.blobUrl = blobUrl;
            this.rawUrl = rawUrl;
            this.contentsUrl = contentsUrl;
        }

        /**
         * Setter for sha.
         * @param  sha  String value for sha.
         * @return Builder
         */
        public Builder sha(String sha) {
            this.sha = sha;
            return this;
        }

        /**
         * Setter for filename.
         * @param  filename  String value for filename.
         * @return Builder
         */
        public Builder filename(String filename) {
            this.filename = filename;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  Status5Enum value for status.
         * @return Builder
         */
        public Builder status(Status5Enum status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for additions.
         * @param  additions  int value for additions.
         * @return Builder
         */
        public Builder additions(int additions) {
            this.additions = additions;
            return this;
        }

        /**
         * Setter for deletions.
         * @param  deletions  int value for deletions.
         * @return Builder
         */
        public Builder deletions(int deletions) {
            this.deletions = deletions;
            return this;
        }

        /**
         * Setter for changes.
         * @param  changes  int value for changes.
         * @return Builder
         */
        public Builder changes(int changes) {
            this.changes = changes;
            return this;
        }

        /**
         * Setter for blobUrl.
         * @param  blobUrl  String value for blobUrl.
         * @return Builder
         */
        public Builder blobUrl(String blobUrl) {
            this.blobUrl = blobUrl;
            return this;
        }

        /**
         * Setter for rawUrl.
         * @param  rawUrl  String value for rawUrl.
         * @return Builder
         */
        public Builder rawUrl(String rawUrl) {
            this.rawUrl = rawUrl;
            return this;
        }

        /**
         * Setter for contentsUrl.
         * @param  contentsUrl  String value for contentsUrl.
         * @return Builder
         */
        public Builder contentsUrl(String contentsUrl) {
            this.contentsUrl = contentsUrl;
            return this;
        }

        /**
         * Setter for patch.
         * @param  patch  String value for patch.
         * @return Builder
         */
        public Builder patch(String patch) {
            this.patch = patch;
            return this;
        }

        /**
         * Setter for previousFilename.
         * @param  previousFilename  String value for previousFilename.
         * @return Builder
         */
        public Builder previousFilename(String previousFilename) {
            this.previousFilename = previousFilename;
            return this;
        }

        /**
         * Builds a new {@link DiffEntry} object using the set fields.
         * @return {@link DiffEntry}
         */
        public DiffEntry build() {
            return new DiffEntry(sha, filename, status, additions, deletions, changes, blobUrl,
                    rawUrl, contentsUrl, patch, previousFilename);
        }
    }
}
