/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for ReposCheckSuitesCheckSuiteIdCheckRunsResponse type.
 */
public class ReposCheckSuitesCheckSuiteIdCheckRunsResponse {
    private int totalCount;
    private List<CheckRun> checkRuns;

    /**
     * Default constructor.
     */
    public ReposCheckSuitesCheckSuiteIdCheckRunsResponse() {
    }

    /**
     * Initialization constructor.
     * @param  totalCount  int value for totalCount.
     * @param  checkRuns  List of CheckRun value for checkRuns.
     */
    public ReposCheckSuitesCheckSuiteIdCheckRunsResponse(
            int totalCount,
            List<CheckRun> checkRuns) {
        this.totalCount = totalCount;
        this.checkRuns = checkRuns;
    }

    /**
     * Getter for TotalCount.
     * @return Returns the int
     */
    @JsonGetter("total_count")
    public int getTotalCount() {
        return totalCount;
    }

    /**
     * Setter for TotalCount.
     * @param totalCount Value for int
     */
    @JsonSetter("total_count")
    public void setTotalCount(int totalCount) {
        this.totalCount = totalCount;
    }

    /**
     * Getter for CheckRuns.
     * @return Returns the List of CheckRun
     */
    @JsonGetter("check_runs")
    public List<CheckRun> getCheckRuns() {
        return checkRuns;
    }

    /**
     * Setter for CheckRuns.
     * @param checkRuns Value for List of CheckRun
     */
    @JsonSetter("check_runs")
    public void setCheckRuns(List<CheckRun> checkRuns) {
        this.checkRuns = checkRuns;
    }

    /**
     * Converts this ReposCheckSuitesCheckSuiteIdCheckRunsResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposCheckSuitesCheckSuiteIdCheckRunsResponse [" + "totalCount=" + totalCount
                + ", checkRuns=" + checkRuns + "]";
    }

    /**
     * Builds a new {@link ReposCheckSuitesCheckSuiteIdCheckRunsResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposCheckSuitesCheckSuiteIdCheckRunsResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(totalCount, checkRuns);
        return builder;
    }

    /**
     * Class to build instances of {@link ReposCheckSuitesCheckSuiteIdCheckRunsResponse}.
     */
    public static class Builder {
        private int totalCount;
        private List<CheckRun> checkRuns;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  totalCount  int value for totalCount.
         * @param  checkRuns  List of CheckRun value for checkRuns.
         */
        public Builder(int totalCount, List<CheckRun> checkRuns) {
            this.totalCount = totalCount;
            this.checkRuns = checkRuns;
        }

        /**
         * Setter for totalCount.
         * @param  totalCount  int value for totalCount.
         * @return Builder
         */
        public Builder totalCount(int totalCount) {
            this.totalCount = totalCount;
            return this;
        }

        /**
         * Setter for checkRuns.
         * @param  checkRuns  List of CheckRun value for checkRuns.
         * @return Builder
         */
        public Builder checkRuns(List<CheckRun> checkRuns) {
            this.checkRuns = checkRuns;
            return this;
        }

        /**
         * Builds a new {@link ReposCheckSuitesCheckSuiteIdCheckRunsResponse} object using the set
         * fields.
         * @return {@link ReposCheckSuitesCheckSuiteIdCheckRunsResponse}
         */
        public ReposCheckSuitesCheckSuiteIdCheckRunsResponse build() {
            return new ReposCheckSuitesCheckSuiteIdCheckRunsResponse(totalCount, checkRuns);
        }
    }
}
