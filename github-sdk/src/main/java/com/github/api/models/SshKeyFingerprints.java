/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for SshKeyFingerprints type.
 */
public class SshKeyFingerprints {
    private String sHA256RSA;
    private String sHA256DSA;
    private String sHA256ECDSA;
    private String sHA256ED25519;

    /**
     * Default constructor.
     */
    public SshKeyFingerprints() {
    }

    /**
     * Initialization constructor.
     * @param  sHA256RSA  String value for sHA256RSA.
     * @param  sHA256DSA  String value for sHA256DSA.
     * @param  sHA256ECDSA  String value for sHA256ECDSA.
     * @param  sHA256ED25519  String value for sHA256ED25519.
     */
    public SshKeyFingerprints(
            String sHA256RSA,
            String sHA256DSA,
            String sHA256ECDSA,
            String sHA256ED25519) {
        this.sHA256RSA = sHA256RSA;
        this.sHA256DSA = sHA256DSA;
        this.sHA256ECDSA = sHA256ECDSA;
        this.sHA256ED25519 = sHA256ED25519;
    }

    /**
     * Getter for SHA256RSA.
     * @return Returns the String
     */
    @JsonGetter("SHA256_RSA")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSHA256RSA() {
        return sHA256RSA;
    }

    /**
     * Setter for SHA256RSA.
     * @param sHA256RSA Value for String
     */
    @JsonSetter("SHA256_RSA")
    public void setSHA256RSA(String sHA256RSA) {
        this.sHA256RSA = sHA256RSA;
    }

    /**
     * Getter for SHA256DSA.
     * @return Returns the String
     */
    @JsonGetter("SHA256_DSA")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSHA256DSA() {
        return sHA256DSA;
    }

    /**
     * Setter for SHA256DSA.
     * @param sHA256DSA Value for String
     */
    @JsonSetter("SHA256_DSA")
    public void setSHA256DSA(String sHA256DSA) {
        this.sHA256DSA = sHA256DSA;
    }

    /**
     * Getter for SHA256ECDSA.
     * @return Returns the String
     */
    @JsonGetter("SHA256_ECDSA")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSHA256ECDSA() {
        return sHA256ECDSA;
    }

    /**
     * Setter for SHA256ECDSA.
     * @param sHA256ECDSA Value for String
     */
    @JsonSetter("SHA256_ECDSA")
    public void setSHA256ECDSA(String sHA256ECDSA) {
        this.sHA256ECDSA = sHA256ECDSA;
    }

    /**
     * Getter for SHA256ED25519.
     * @return Returns the String
     */
    @JsonGetter("SHA256_ED25519")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSHA256ED25519() {
        return sHA256ED25519;
    }

    /**
     * Setter for SHA256ED25519.
     * @param sHA256ED25519 Value for String
     */
    @JsonSetter("SHA256_ED25519")
    public void setSHA256ED25519(String sHA256ED25519) {
        this.sHA256ED25519 = sHA256ED25519;
    }

    /**
     * Converts this SshKeyFingerprints into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SshKeyFingerprints [" + "sHA256RSA=" + sHA256RSA + ", sHA256DSA=" + sHA256DSA
                + ", sHA256ECDSA=" + sHA256ECDSA + ", sHA256ED25519=" + sHA256ED25519 + "]";
    }

    /**
     * Builds a new {@link SshKeyFingerprints.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SshKeyFingerprints.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .sHA256RSA(getSHA256RSA())
                .sHA256DSA(getSHA256DSA())
                .sHA256ECDSA(getSHA256ECDSA())
                .sHA256ED25519(getSHA256ED25519());
        return builder;
    }

    /**
     * Class to build instances of {@link SshKeyFingerprints}.
     */
    public static class Builder {
        private String sHA256RSA;
        private String sHA256DSA;
        private String sHA256ECDSA;
        private String sHA256ED25519;



        /**
         * Setter for sHA256RSA.
         * @param  sHA256RSA  String value for sHA256RSA.
         * @return Builder
         */
        public Builder sHA256RSA(String sHA256RSA) {
            this.sHA256RSA = sHA256RSA;
            return this;
        }

        /**
         * Setter for sHA256DSA.
         * @param  sHA256DSA  String value for sHA256DSA.
         * @return Builder
         */
        public Builder sHA256DSA(String sHA256DSA) {
            this.sHA256DSA = sHA256DSA;
            return this;
        }

        /**
         * Setter for sHA256ECDSA.
         * @param  sHA256ECDSA  String value for sHA256ECDSA.
         * @return Builder
         */
        public Builder sHA256ECDSA(String sHA256ECDSA) {
            this.sHA256ECDSA = sHA256ECDSA;
            return this;
        }

        /**
         * Setter for sHA256ED25519.
         * @param  sHA256ED25519  String value for sHA256ED25519.
         * @return Builder
         */
        public Builder sHA256ED25519(String sHA256ED25519) {
            this.sHA256ED25519 = sHA256ED25519;
            return this;
        }

        /**
         * Builds a new {@link SshKeyFingerprints} object using the set fields.
         * @return {@link SshKeyFingerprints}
         */
        public SshKeyFingerprints build() {
            return new SshKeyFingerprints(sHA256RSA, sHA256DSA, sHA256ECDSA, sHA256ED25519);
        }
    }
}
