/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;

/**
 * This is a model class for ReposCodeScanningCodeqlDatabasesLanguageResponse type.
 */
public class ReposCodeScanningCodeqlDatabasesLanguageResponse {
    private int id;
    private String name;
    private String language;
    private Uploader uploader;
    private String contentType;
    private int size;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private String url;

    /**
     * Default constructor.
     */
    public ReposCodeScanningCodeqlDatabasesLanguageResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  int value for id.
     * @param  name  String value for name.
     * @param  language  String value for language.
     * @param  uploader  Uploader value for uploader.
     * @param  contentType  String value for contentType.
     * @param  size  int value for size.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  url  String value for url.
     */
    public ReposCodeScanningCodeqlDatabasesLanguageResponse(
            int id,
            String name,
            String language,
            Uploader uploader,
            String contentType,
            int size,
            LocalDateTime createdAt,
            LocalDateTime updatedAt,
            String url) {
        this.id = id;
        this.name = name;
        this.language = language;
        this.uploader = uploader;
        this.contentType = contentType;
        this.size = size;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.url = url;
    }

    /**
     * Getter for Id.
     * The ID of the CodeQL database.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * The ID of the CodeQL database.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for Name.
     * The name of the CodeQL database.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the CodeQL database.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Language.
     * The language of the CodeQL database.
     * @return Returns the String
     */
    @JsonGetter("language")
    public String getLanguage() {
        return language;
    }

    /**
     * Setter for Language.
     * The language of the CodeQL database.
     * @param language Value for String
     */
    @JsonSetter("language")
    public void setLanguage(String language) {
        this.language = language;
    }

    /**
     * Getter for Uploader.
     * @return Returns the Uploader
     */
    @JsonGetter("uploader")
    public Uploader getUploader() {
        return uploader;
    }

    /**
     * Setter for Uploader.
     * @param uploader Value for Uploader
     */
    @JsonSetter("uploader")
    public void setUploader(Uploader uploader) {
        this.uploader = uploader;
    }

    /**
     * Getter for ContentType.
     * The MIME type of the CodeQL database file.
     * @return Returns the String
     */
    @JsonGetter("content_type")
    public String getContentType() {
        return contentType;
    }

    /**
     * Setter for ContentType.
     * The MIME type of the CodeQL database file.
     * @param contentType Value for String
     */
    @JsonSetter("content_type")
    public void setContentType(String contentType) {
        this.contentType = contentType;
    }

    /**
     * Getter for Size.
     * The size of the CodeQL database file in bytes.
     * @return Returns the int
     */
    @JsonGetter("size")
    public int getSize() {
        return size;
    }

    /**
     * Setter for Size.
     * The size of the CodeQL database file in bytes.
     * @param size Value for int
     */
    @JsonSetter("size")
    public void setSize(int size) {
        this.size = size;
    }

    /**
     * Getter for CreatedAt.
     * The date and time at which the CodeQL database was created, in ISO 8601 format':'
     * YYYY-MM-DDTHH:MM:SSZ.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * The date and time at which the CodeQL database was created, in ISO 8601 format':'
     * YYYY-MM-DDTHH:MM:SSZ.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * The date and time at which the CodeQL database was last updated, in ISO 8601 format':'
     * YYYY-MM-DDTHH:MM:SSZ.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * The date and time at which the CodeQL database was last updated, in ISO 8601 format':'
     * YYYY-MM-DDTHH:MM:SSZ.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Url.
     * The URL at which to download the CodeQL database. The `Accept` header must be set to the
     * value of the `content_type` property.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * The URL at which to download the CodeQL database. The `Accept` header must be set to the
     * value of the `content_type` property.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Converts this ReposCodeScanningCodeqlDatabasesLanguageResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposCodeScanningCodeqlDatabasesLanguageResponse [" + "id=" + id + ", name=" + name
                + ", language=" + language + ", uploader=" + uploader + ", contentType="
                + contentType + ", size=" + size + ", createdAt=" + createdAt + ", updatedAt="
                + updatedAt + ", url=" + url + "]";
    }

    /**
     * Builds a new {@link ReposCodeScanningCodeqlDatabasesLanguageResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposCodeScanningCodeqlDatabasesLanguageResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, name, language, uploader, contentType, size, createdAt,
                updatedAt, url);
        return builder;
    }

    /**
     * Class to build instances of {@link ReposCodeScanningCodeqlDatabasesLanguageResponse}.
     */
    public static class Builder {
        private int id;
        private String name;
        private String language;
        private Uploader uploader;
        private String contentType;
        private int size;
        private LocalDateTime createdAt;
        private LocalDateTime updatedAt;
        private String url;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  int value for id.
         * @param  name  String value for name.
         * @param  language  String value for language.
         * @param  uploader  Uploader value for uploader.
         * @param  contentType  String value for contentType.
         * @param  size  int value for size.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @param  url  String value for url.
         */
        public Builder(int id, String name, String language, Uploader uploader, String contentType,
                int size, LocalDateTime createdAt, LocalDateTime updatedAt, String url) {
            this.id = id;
            this.name = name;
            this.language = language;
            this.uploader = uploader;
            this.contentType = contentType;
            this.size = size;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
            this.url = url;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for language.
         * @param  language  String value for language.
         * @return Builder
         */
        public Builder language(String language) {
            this.language = language;
            return this;
        }

        /**
         * Setter for uploader.
         * @param  uploader  Uploader value for uploader.
         * @return Builder
         */
        public Builder uploader(Uploader uploader) {
            this.uploader = uploader;
            return this;
        }

        /**
         * Setter for contentType.
         * @param  contentType  String value for contentType.
         * @return Builder
         */
        public Builder contentType(String contentType) {
            this.contentType = contentType;
            return this;
        }

        /**
         * Setter for size.
         * @param  size  int value for size.
         * @return Builder
         */
        public Builder size(int size) {
            this.size = size;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Builds a new {@link ReposCodeScanningCodeqlDatabasesLanguageResponse} object using the
         * set fields.
         * @return {@link ReposCodeScanningCodeqlDatabasesLanguageResponse}
         */
        public ReposCodeScanningCodeqlDatabasesLanguageResponse build() {
            return new ReposCodeScanningCodeqlDatabasesLanguageResponse(id, name, language,
                    uploader, contentType, size, createdAt, updatedAt, url);
        }
    }
}
