/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for ReposTransferRequest type.
 */
public class ReposTransferRequest {
    private String newOwner;
    private String newName;
    private List<Integer> teamIds;

    /**
     * Default constructor.
     */
    public ReposTransferRequest() {
    }

    /**
     * Initialization constructor.
     * @param  newOwner  String value for newOwner.
     * @param  newName  String value for newName.
     * @param  teamIds  List of Integer value for teamIds.
     */
    public ReposTransferRequest(
            String newOwner,
            String newName,
            List<Integer> teamIds) {
        this.newOwner = newOwner;
        this.newName = newName;
        this.teamIds = teamIds;
    }

    /**
     * Getter for NewOwner.
     * The username or organization name the repository will be transferred to.
     * @return Returns the String
     */
    @JsonGetter("new_owner")
    public String getNewOwner() {
        return newOwner;
    }

    /**
     * Setter for NewOwner.
     * The username or organization name the repository will be transferred to.
     * @param newOwner Value for String
     */
    @JsonSetter("new_owner")
    public void setNewOwner(String newOwner) {
        this.newOwner = newOwner;
    }

    /**
     * Getter for NewName.
     * The new name to be given to the repository.
     * @return Returns the String
     */
    @JsonGetter("new_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNewName() {
        return newName;
    }

    /**
     * Setter for NewName.
     * The new name to be given to the repository.
     * @param newName Value for String
     */
    @JsonSetter("new_name")
    public void setNewName(String newName) {
        this.newName = newName;
    }

    /**
     * Getter for TeamIds.
     * ID of the team or teams to add to the repository. Teams can only be added to
     * organization-owned repositories.
     * @return Returns the List of Integer
     */
    @JsonGetter("team_ids")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Integer> getTeamIds() {
        return teamIds;
    }

    /**
     * Setter for TeamIds.
     * ID of the team or teams to add to the repository. Teams can only be added to
     * organization-owned repositories.
     * @param teamIds Value for List of Integer
     */
    @JsonSetter("team_ids")
    public void setTeamIds(List<Integer> teamIds) {
        this.teamIds = teamIds;
    }

    /**
     * Converts this ReposTransferRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ReposTransferRequest [" + "newOwner=" + newOwner + ", newName=" + newName
                + ", teamIds=" + teamIds + "]";
    }

    /**
     * Builds a new {@link ReposTransferRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ReposTransferRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(newOwner)
                .newName(getNewName())
                .teamIds(getTeamIds());
        return builder;
    }

    /**
     * Class to build instances of {@link ReposTransferRequest}.
     */
    public static class Builder {
        private String newOwner;
        private String newName;
        private List<Integer> teamIds;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  newOwner  String value for newOwner.
         */
        public Builder(String newOwner) {
            this.newOwner = newOwner;
        }

        /**
         * Setter for newOwner.
         * @param  newOwner  String value for newOwner.
         * @return Builder
         */
        public Builder newOwner(String newOwner) {
            this.newOwner = newOwner;
            return this;
        }

        /**
         * Setter for newName.
         * @param  newName  String value for newName.
         * @return Builder
         */
        public Builder newName(String newName) {
            this.newName = newName;
            return this;
        }

        /**
         * Setter for teamIds.
         * @param  teamIds  List of Integer value for teamIds.
         * @return Builder
         */
        public Builder teamIds(List<Integer> teamIds) {
            this.teamIds = teamIds;
            return this;
        }

        /**
         * Builds a new {@link ReposTransferRequest} object using the set fields.
         * @return {@link ReposTransferRequest}
         */
        public ReposTransferRequest build() {
            return new ReposTransferRequest(newOwner, newName, teamIds);
        }
    }
}
