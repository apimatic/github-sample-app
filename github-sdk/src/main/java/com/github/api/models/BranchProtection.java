/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for BranchProtection type.
 */
public class BranchProtection {
    private String url;
    private Boolean enabled;
    private RequiredStatusChecks4 requiredStatusChecks;
    private EnforceAdmins enforceAdmins;
    private RequiredPullRequestReviews3 requiredPullRequestReviews;
    private Restrictions1 restrictions;
    private AllowDeletions requiredLinearHistory;
    private AllowDeletions allowForcePushes;
    private AllowDeletions allowDeletions;
    private AllowDeletions blockCreations;
    private AllowDeletions requiredConversationResolution;
    private String name;
    private String protectionUrl;
    private EnforceAdmins requiredSignatures;
    private AllowDeletions lockBranch;
    private AllowDeletions allowForkSyncing;

    /**
     * Default constructor.
     */
    public BranchProtection() {
    }

    /**
     * Initialization constructor.
     * @param  url  String value for url.
     * @param  enabled  Boolean value for enabled.
     * @param  requiredStatusChecks  RequiredStatusChecks4 value for requiredStatusChecks.
     * @param  enforceAdmins  EnforceAdmins value for enforceAdmins.
     * @param  requiredPullRequestReviews  RequiredPullRequestReviews3 value for
     *         requiredPullRequestReviews.
     * @param  restrictions  Restrictions1 value for restrictions.
     * @param  requiredLinearHistory  AllowDeletions value for requiredLinearHistory.
     * @param  allowForcePushes  AllowDeletions value for allowForcePushes.
     * @param  allowDeletions  AllowDeletions value for allowDeletions.
     * @param  blockCreations  AllowDeletions value for blockCreations.
     * @param  requiredConversationResolution  AllowDeletions value for
     *         requiredConversationResolution.
     * @param  name  String value for name.
     * @param  protectionUrl  String value for protectionUrl.
     * @param  requiredSignatures  EnforceAdmins value for requiredSignatures.
     * @param  lockBranch  AllowDeletions value for lockBranch.
     * @param  allowForkSyncing  AllowDeletions value for allowForkSyncing.
     */
    public BranchProtection(
            String url,
            Boolean enabled,
            RequiredStatusChecks4 requiredStatusChecks,
            EnforceAdmins enforceAdmins,
            RequiredPullRequestReviews3 requiredPullRequestReviews,
            Restrictions1 restrictions,
            AllowDeletions requiredLinearHistory,
            AllowDeletions allowForcePushes,
            AllowDeletions allowDeletions,
            AllowDeletions blockCreations,
            AllowDeletions requiredConversationResolution,
            String name,
            String protectionUrl,
            EnforceAdmins requiredSignatures,
            AllowDeletions lockBranch,
            AllowDeletions allowForkSyncing) {
        this.url = url;
        this.enabled = enabled;
        this.requiredStatusChecks = requiredStatusChecks;
        this.enforceAdmins = enforceAdmins;
        this.requiredPullRequestReviews = requiredPullRequestReviews;
        this.restrictions = restrictions;
        this.requiredLinearHistory = requiredLinearHistory;
        this.allowForcePushes = allowForcePushes;
        this.allowDeletions = allowDeletions;
        this.blockCreations = blockCreations;
        this.requiredConversationResolution = requiredConversationResolution;
        this.name = name;
        this.protectionUrl = protectionUrl;
        this.requiredSignatures = requiredSignatures;
        this.lockBranch = lockBranch;
        this.allowForkSyncing = allowForkSyncing;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for Enabled.
     * @return Returns the Boolean
     */
    @JsonGetter("enabled")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getEnabled() {
        return enabled;
    }

    /**
     * Setter for Enabled.
     * @param enabled Value for Boolean
     */
    @JsonSetter("enabled")
    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    /**
     * Getter for RequiredStatusChecks.
     * @return Returns the RequiredStatusChecks4
     */
    @JsonGetter("required_status_checks")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public RequiredStatusChecks4 getRequiredStatusChecks() {
        return requiredStatusChecks;
    }

    /**
     * Setter for RequiredStatusChecks.
     * @param requiredStatusChecks Value for RequiredStatusChecks4
     */
    @JsonSetter("required_status_checks")
    public void setRequiredStatusChecks(RequiredStatusChecks4 requiredStatusChecks) {
        this.requiredStatusChecks = requiredStatusChecks;
    }

    /**
     * Getter for EnforceAdmins.
     * @return Returns the EnforceAdmins
     */
    @JsonGetter("enforce_admins")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public EnforceAdmins getEnforceAdmins() {
        return enforceAdmins;
    }

    /**
     * Setter for EnforceAdmins.
     * @param enforceAdmins Value for EnforceAdmins
     */
    @JsonSetter("enforce_admins")
    public void setEnforceAdmins(EnforceAdmins enforceAdmins) {
        this.enforceAdmins = enforceAdmins;
    }

    /**
     * Getter for RequiredPullRequestReviews.
     * @return Returns the RequiredPullRequestReviews3
     */
    @JsonGetter("required_pull_request_reviews")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public RequiredPullRequestReviews3 getRequiredPullRequestReviews() {
        return requiredPullRequestReviews;
    }

    /**
     * Setter for RequiredPullRequestReviews.
     * @param requiredPullRequestReviews Value for RequiredPullRequestReviews3
     */
    @JsonSetter("required_pull_request_reviews")
    public void setRequiredPullRequestReviews(RequiredPullRequestReviews3 requiredPullRequestReviews) {
        this.requiredPullRequestReviews = requiredPullRequestReviews;
    }

    /**
     * Getter for Restrictions.
     * @return Returns the Restrictions1
     */
    @JsonGetter("restrictions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Restrictions1 getRestrictions() {
        return restrictions;
    }

    /**
     * Setter for Restrictions.
     * @param restrictions Value for Restrictions1
     */
    @JsonSetter("restrictions")
    public void setRestrictions(Restrictions1 restrictions) {
        this.restrictions = restrictions;
    }

    /**
     * Getter for RequiredLinearHistory.
     * @return Returns the AllowDeletions
     */
    @JsonGetter("required_linear_history")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AllowDeletions getRequiredLinearHistory() {
        return requiredLinearHistory;
    }

    /**
     * Setter for RequiredLinearHistory.
     * @param requiredLinearHistory Value for AllowDeletions
     */
    @JsonSetter("required_linear_history")
    public void setRequiredLinearHistory(AllowDeletions requiredLinearHistory) {
        this.requiredLinearHistory = requiredLinearHistory;
    }

    /**
     * Getter for AllowForcePushes.
     * @return Returns the AllowDeletions
     */
    @JsonGetter("allow_force_pushes")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AllowDeletions getAllowForcePushes() {
        return allowForcePushes;
    }

    /**
     * Setter for AllowForcePushes.
     * @param allowForcePushes Value for AllowDeletions
     */
    @JsonSetter("allow_force_pushes")
    public void setAllowForcePushes(AllowDeletions allowForcePushes) {
        this.allowForcePushes = allowForcePushes;
    }

    /**
     * Getter for AllowDeletions.
     * @return Returns the AllowDeletions
     */
    @JsonGetter("allow_deletions")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AllowDeletions getAllowDeletions() {
        return allowDeletions;
    }

    /**
     * Setter for AllowDeletions.
     * @param allowDeletions Value for AllowDeletions
     */
    @JsonSetter("allow_deletions")
    public void setAllowDeletions(AllowDeletions allowDeletions) {
        this.allowDeletions = allowDeletions;
    }

    /**
     * Getter for BlockCreations.
     * @return Returns the AllowDeletions
     */
    @JsonGetter("block_creations")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AllowDeletions getBlockCreations() {
        return blockCreations;
    }

    /**
     * Setter for BlockCreations.
     * @param blockCreations Value for AllowDeletions
     */
    @JsonSetter("block_creations")
    public void setBlockCreations(AllowDeletions blockCreations) {
        this.blockCreations = blockCreations;
    }

    /**
     * Getter for RequiredConversationResolution.
     * @return Returns the AllowDeletions
     */
    @JsonGetter("required_conversation_resolution")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AllowDeletions getRequiredConversationResolution() {
        return requiredConversationResolution;
    }

    /**
     * Setter for RequiredConversationResolution.
     * @param requiredConversationResolution Value for AllowDeletions
     */
    @JsonSetter("required_conversation_resolution")
    public void setRequiredConversationResolution(AllowDeletions requiredConversationResolution) {
        this.requiredConversationResolution = requiredConversationResolution;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for ProtectionUrl.
     * @return Returns the String
     */
    @JsonGetter("protection_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getProtectionUrl() {
        return protectionUrl;
    }

    /**
     * Setter for ProtectionUrl.
     * @param protectionUrl Value for String
     */
    @JsonSetter("protection_url")
    public void setProtectionUrl(String protectionUrl) {
        this.protectionUrl = protectionUrl;
    }

    /**
     * Getter for RequiredSignatures.
     * @return Returns the EnforceAdmins
     */
    @JsonGetter("required_signatures")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public EnforceAdmins getRequiredSignatures() {
        return requiredSignatures;
    }

    /**
     * Setter for RequiredSignatures.
     * @param requiredSignatures Value for EnforceAdmins
     */
    @JsonSetter("required_signatures")
    public void setRequiredSignatures(EnforceAdmins requiredSignatures) {
        this.requiredSignatures = requiredSignatures;
    }

    /**
     * Getter for LockBranch.
     * @return Returns the AllowDeletions
     */
    @JsonGetter("lock_branch")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AllowDeletions getLockBranch() {
        return lockBranch;
    }

    /**
     * Setter for LockBranch.
     * @param lockBranch Value for AllowDeletions
     */
    @JsonSetter("lock_branch")
    public void setLockBranch(AllowDeletions lockBranch) {
        this.lockBranch = lockBranch;
    }

    /**
     * Getter for AllowForkSyncing.
     * @return Returns the AllowDeletions
     */
    @JsonGetter("allow_fork_syncing")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AllowDeletions getAllowForkSyncing() {
        return allowForkSyncing;
    }

    /**
     * Setter for AllowForkSyncing.
     * @param allowForkSyncing Value for AllowDeletions
     */
    @JsonSetter("allow_fork_syncing")
    public void setAllowForkSyncing(AllowDeletions allowForkSyncing) {
        this.allowForkSyncing = allowForkSyncing;
    }

    /**
     * Converts this BranchProtection into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "BranchProtection [" + "url=" + url + ", enabled=" + enabled
                + ", requiredStatusChecks=" + requiredStatusChecks + ", enforceAdmins="
                + enforceAdmins + ", requiredPullRequestReviews=" + requiredPullRequestReviews
                + ", restrictions=" + restrictions + ", requiredLinearHistory="
                + requiredLinearHistory + ", allowForcePushes=" + allowForcePushes
                + ", allowDeletions=" + allowDeletions + ", blockCreations=" + blockCreations
                + ", requiredConversationResolution=" + requiredConversationResolution + ", name="
                + name + ", protectionUrl=" + protectionUrl + ", requiredSignatures="
                + requiredSignatures + ", lockBranch=" + lockBranch + ", allowForkSyncing="
                + allowForkSyncing + "]";
    }

    /**
     * Builds a new {@link BranchProtection.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link BranchProtection.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .url(getUrl())
                .enabled(getEnabled())
                .requiredStatusChecks(getRequiredStatusChecks())
                .enforceAdmins(getEnforceAdmins())
                .requiredPullRequestReviews(getRequiredPullRequestReviews())
                .restrictions(getRestrictions())
                .requiredLinearHistory(getRequiredLinearHistory())
                .allowForcePushes(getAllowForcePushes())
                .allowDeletions(getAllowDeletions())
                .blockCreations(getBlockCreations())
                .requiredConversationResolution(getRequiredConversationResolution())
                .name(getName())
                .protectionUrl(getProtectionUrl())
                .requiredSignatures(getRequiredSignatures())
                .lockBranch(getLockBranch())
                .allowForkSyncing(getAllowForkSyncing());
        return builder;
    }

    /**
     * Class to build instances of {@link BranchProtection}.
     */
    public static class Builder {
        private String url;
        private Boolean enabled;
        private RequiredStatusChecks4 requiredStatusChecks;
        private EnforceAdmins enforceAdmins;
        private RequiredPullRequestReviews3 requiredPullRequestReviews;
        private Restrictions1 restrictions;
        private AllowDeletions requiredLinearHistory;
        private AllowDeletions allowForcePushes;
        private AllowDeletions allowDeletions;
        private AllowDeletions blockCreations;
        private AllowDeletions requiredConversationResolution;
        private String name;
        private String protectionUrl;
        private EnforceAdmins requiredSignatures;
        private AllowDeletions lockBranch;
        private AllowDeletions allowForkSyncing;



        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for enabled.
         * @param  enabled  Boolean value for enabled.
         * @return Builder
         */
        public Builder enabled(Boolean enabled) {
            this.enabled = enabled;
            return this;
        }

        /**
         * Setter for requiredStatusChecks.
         * @param  requiredStatusChecks  RequiredStatusChecks4 value for requiredStatusChecks.
         * @return Builder
         */
        public Builder requiredStatusChecks(RequiredStatusChecks4 requiredStatusChecks) {
            this.requiredStatusChecks = requiredStatusChecks;
            return this;
        }

        /**
         * Setter for enforceAdmins.
         * @param  enforceAdmins  EnforceAdmins value for enforceAdmins.
         * @return Builder
         */
        public Builder enforceAdmins(EnforceAdmins enforceAdmins) {
            this.enforceAdmins = enforceAdmins;
            return this;
        }

        /**
         * Setter for requiredPullRequestReviews.
         * @param  requiredPullRequestReviews  RequiredPullRequestReviews3 value for
         *         requiredPullRequestReviews.
         * @return Builder
         */
        public Builder requiredPullRequestReviews(
                RequiredPullRequestReviews3 requiredPullRequestReviews) {
            this.requiredPullRequestReviews = requiredPullRequestReviews;
            return this;
        }

        /**
         * Setter for restrictions.
         * @param  restrictions  Restrictions1 value for restrictions.
         * @return Builder
         */
        public Builder restrictions(Restrictions1 restrictions) {
            this.restrictions = restrictions;
            return this;
        }

        /**
         * Setter for requiredLinearHistory.
         * @param  requiredLinearHistory  AllowDeletions value for requiredLinearHistory.
         * @return Builder
         */
        public Builder requiredLinearHistory(AllowDeletions requiredLinearHistory) {
            this.requiredLinearHistory = requiredLinearHistory;
            return this;
        }

        /**
         * Setter for allowForcePushes.
         * @param  allowForcePushes  AllowDeletions value for allowForcePushes.
         * @return Builder
         */
        public Builder allowForcePushes(AllowDeletions allowForcePushes) {
            this.allowForcePushes = allowForcePushes;
            return this;
        }

        /**
         * Setter for allowDeletions.
         * @param  allowDeletions  AllowDeletions value for allowDeletions.
         * @return Builder
         */
        public Builder allowDeletions(AllowDeletions allowDeletions) {
            this.allowDeletions = allowDeletions;
            return this;
        }

        /**
         * Setter for blockCreations.
         * @param  blockCreations  AllowDeletions value for blockCreations.
         * @return Builder
         */
        public Builder blockCreations(AllowDeletions blockCreations) {
            this.blockCreations = blockCreations;
            return this;
        }

        /**
         * Setter for requiredConversationResolution.
         * @param  requiredConversationResolution  AllowDeletions value for
         *         requiredConversationResolution.
         * @return Builder
         */
        public Builder requiredConversationResolution(
                AllowDeletions requiredConversationResolution) {
            this.requiredConversationResolution = requiredConversationResolution;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for protectionUrl.
         * @param  protectionUrl  String value for protectionUrl.
         * @return Builder
         */
        public Builder protectionUrl(String protectionUrl) {
            this.protectionUrl = protectionUrl;
            return this;
        }

        /**
         * Setter for requiredSignatures.
         * @param  requiredSignatures  EnforceAdmins value for requiredSignatures.
         * @return Builder
         */
        public Builder requiredSignatures(EnforceAdmins requiredSignatures) {
            this.requiredSignatures = requiredSignatures;
            return this;
        }

        /**
         * Setter for lockBranch.
         * @param  lockBranch  AllowDeletions value for lockBranch.
         * @return Builder
         */
        public Builder lockBranch(AllowDeletions lockBranch) {
            this.lockBranch = lockBranch;
            return this;
        }

        /**
         * Setter for allowForkSyncing.
         * @param  allowForkSyncing  AllowDeletions value for allowForkSyncing.
         * @return Builder
         */
        public Builder allowForkSyncing(AllowDeletions allowForkSyncing) {
            this.allowForkSyncing = allowForkSyncing;
            return this;
        }

        /**
         * Builds a new {@link BranchProtection} object using the set fields.
         * @return {@link BranchProtection}
         */
        public BranchProtection build() {
            return new BranchProtection(url, enabled, requiredStatusChecks, enforceAdmins,
                    requiredPullRequestReviews, restrictions, requiredLinearHistory,
                    allowForcePushes, allowDeletions, blockCreations,
                    requiredConversationResolution, name, protectionUrl, requiredSignatures,
                    lockBranch, allowForkSyncing);
        }
    }
}
