/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Branch type.
 */
public class Branch {
    private Commit9 commit;
    private String name;
    private boolean mProtected;

    /**
     * Default constructor.
     */
    public Branch() {
    }

    /**
     * Initialization constructor.
     * @param  commit  Commit9 value for commit.
     * @param  name  String value for name.
     * @param  mProtected  boolean value for mProtected.
     */
    public Branch(
            Commit9 commit,
            String name,
            boolean mProtected) {
        this.commit = commit;
        this.name = name;
        this.mProtected = mProtected;
    }

    /**
     * Getter for Commit.
     * @return Returns the Commit9
     */
    @JsonGetter("commit")
    public Commit9 getCommit() {
        return commit;
    }

    /**
     * Setter for Commit.
     * @param commit Value for Commit9
     */
    @JsonSetter("commit")
    public void setCommit(Commit9 commit) {
        this.commit = commit;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Protected.
     * @return Returns the boolean
     */
    @JsonGetter("protected")
    public boolean getProtected() {
        return mProtected;
    }

    /**
     * Setter for Protected.
     * @param mProtected Value for boolean
     */
    @JsonSetter("protected")
    public void setProtected(boolean mProtected) {
        this.mProtected = mProtected;
    }

    /**
     * Converts this Branch into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Branch [" + "commit=" + commit + ", name=" + name + ", mProtected=" + mProtected
                + "]";
    }

    /**
     * Builds a new {@link Branch.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Branch.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(commit, name, mProtected);
        return builder;
    }

    /**
     * Class to build instances of {@link Branch}.
     */
    public static class Builder {
        private Commit9 commit;
        private String name;
        private boolean mProtected;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  commit  Commit9 value for commit.
         * @param  name  String value for name.
         * @param  mProtected  boolean value for mProtected.
         */
        public Builder(Commit9 commit, String name, boolean mProtected) {
            this.commit = commit;
            this.name = name;
            this.mProtected = mProtected;
        }

        /**
         * Setter for commit.
         * @param  commit  Commit9 value for commit.
         * @return Builder
         */
        public Builder commit(Commit9 commit) {
            this.commit = commit;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for mProtected.
         * @param  mProtected  boolean value for mProtected.
         * @return Builder
         */
        public Builder mProtected(boolean mProtected) {
            this.mProtected = mProtected;
            return this;
        }

        /**
         * Builds a new {@link Branch} object using the set fields.
         * @return {@link Branch}
         */
        public Branch build() {
            return new Branch(commit, name, mProtected);
        }
    }
}
