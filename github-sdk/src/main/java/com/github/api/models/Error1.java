/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for Error1 type.
 */
public class Error1 {
    private int line;
    private int column;
    private String source;
    private String kind;
    private OptionalNullable<String> suggestion;
    private String message;
    private String path;

    /**
     * Default constructor.
     */
    public Error1() {
    }

    /**
     * Initialization constructor.
     * @param  line  int value for line.
     * @param  column  int value for column.
     * @param  kind  String value for kind.
     * @param  message  String value for message.
     * @param  path  String value for path.
     * @param  source  String value for source.
     * @param  suggestion  String value for suggestion.
     */
    public Error1(
            int line,
            int column,
            String kind,
            String message,
            String path,
            String source,
            String suggestion) {
        this.line = line;
        this.column = column;
        this.source = source;
        this.kind = kind;
        this.suggestion = OptionalNullable.of(suggestion);
        this.message = message;
        this.path = path;
    }

    /**
     * Internal initialization constructor.
     */
    protected Error1(int line, int column, String kind, String message, String path, String source,
            OptionalNullable<String> suggestion) {
        this.line = line;
        this.column = column;
        this.source = source;
        this.kind = kind;
        this.suggestion = suggestion;
        this.message = message;
        this.path = path;
    }

    /**
     * Getter for Line.
     * The line number where this errors occurs.
     * @return Returns the int
     */
    @JsonGetter("line")
    public int getLine() {
        return line;
    }

    /**
     * Setter for Line.
     * The line number where this errors occurs.
     * @param line Value for int
     */
    @JsonSetter("line")
    public void setLine(int line) {
        this.line = line;
    }

    /**
     * Getter for Column.
     * The column number where this errors occurs.
     * @return Returns the int
     */
    @JsonGetter("column")
    public int getColumn() {
        return column;
    }

    /**
     * Setter for Column.
     * The column number where this errors occurs.
     * @param column Value for int
     */
    @JsonSetter("column")
    public void setColumn(int column) {
        this.column = column;
    }

    /**
     * Getter for Source.
     * The contents of the line where the error occurs.
     * @return Returns the String
     */
    @JsonGetter("source")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSource() {
        return source;
    }

    /**
     * Setter for Source.
     * The contents of the line where the error occurs.
     * @param source Value for String
     */
    @JsonSetter("source")
    public void setSource(String source) {
        this.source = source;
    }

    /**
     * Getter for Kind.
     * The type of error.
     * @return Returns the String
     */
    @JsonGetter("kind")
    public String getKind() {
        return kind;
    }

    /**
     * Setter for Kind.
     * The type of error.
     * @param kind Value for String
     */
    @JsonSetter("kind")
    public void setKind(String kind) {
        this.kind = kind;
    }

    /**
     * Internal Getter for Suggestion.
     * Suggested action to fix the error. This will usually be `null`, but is provided for some
     * common errors.
     * @return Returns the Internal String
     */
    @JsonGetter("suggestion")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSuggestion() {
        return this.suggestion;
    }

    /**
     * Getter for Suggestion.
     * Suggested action to fix the error. This will usually be `null`, but is provided for some
     * common errors.
     * @return Returns the String
     */
    public String getSuggestion() {
        return OptionalNullable.getFrom(suggestion);
    }

    /**
     * Setter for Suggestion.
     * Suggested action to fix the error. This will usually be `null`, but is provided for some
     * common errors.
     * @param suggestion Value for String
     */
    @JsonSetter("suggestion")
    public void setSuggestion(String suggestion) {
        this.suggestion = OptionalNullable.of(suggestion);
    }

    /**
     * UnSetter for Suggestion.
     * Suggested action to fix the error. This will usually be `null`, but is provided for some
     * common errors.
     */
    public void unsetSuggestion() {
        suggestion = null;
    }

    /**
     * Getter for Message.
     * A human-readable description of the error, combining information from multiple fields, laid
     * out for display in a monospaced typeface (for example, a command-line setting).
     * @return Returns the String
     */
    @JsonGetter("message")
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * A human-readable description of the error, combining information from multiple fields, laid
     * out for display in a monospaced typeface (for example, a command-line setting).
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for Path.
     * The path of the file where the error occured.
     * @return Returns the String
     */
    @JsonGetter("path")
    public String getPath() {
        return path;
    }

    /**
     * Setter for Path.
     * The path of the file where the error occured.
     * @param path Value for String
     */
    @JsonSetter("path")
    public void setPath(String path) {
        this.path = path;
    }

    /**
     * Converts this Error1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Error1 [" + "line=" + line + ", column=" + column + ", kind=" + kind + ", message="
                + message + ", path=" + path + ", source=" + source + ", suggestion=" + suggestion
                + "]";
    }

    /**
     * Builds a new {@link Error1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Error1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(line, column, kind, message, path)
                .source(getSource());
        builder.suggestion = internalGetSuggestion();
        return builder;
    }

    /**
     * Class to build instances of {@link Error1}.
     */
    public static class Builder {
        private int line;
        private int column;
        private String kind;
        private String message;
        private String path;
        private String source;
        private OptionalNullable<String> suggestion;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  line  int value for line.
         * @param  column  int value for column.
         * @param  kind  String value for kind.
         * @param  message  String value for message.
         * @param  path  String value for path.
         */
        public Builder(int line, int column, String kind, String message, String path) {
            this.line = line;
            this.column = column;
            this.kind = kind;
            this.message = message;
            this.path = path;
        }

        /**
         * Setter for line.
         * @param  line  int value for line.
         * @return Builder
         */
        public Builder line(int line) {
            this.line = line;
            return this;
        }

        /**
         * Setter for column.
         * @param  column  int value for column.
         * @return Builder
         */
        public Builder column(int column) {
            this.column = column;
            return this;
        }

        /**
         * Setter for kind.
         * @param  kind  String value for kind.
         * @return Builder
         */
        public Builder kind(String kind) {
            this.kind = kind;
            return this;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for path.
         * @param  path  String value for path.
         * @return Builder
         */
        public Builder path(String path) {
            this.path = path;
            return this;
        }

        /**
         * Setter for source.
         * @param  source  String value for source.
         * @return Builder
         */
        public Builder source(String source) {
            this.source = source;
            return this;
        }

        /**
         * Setter for suggestion.
         * @param  suggestion  String value for suggestion.
         * @return Builder
         */
        public Builder suggestion(String suggestion) {
            this.suggestion = OptionalNullable.of(suggestion);
            return this;
        }

        /**
         * UnSetter for suggestion.
         * @return Builder
         */
        public Builder unsetSuggestion() {
            suggestion = null;
            return this;
        }

        /**
         * Builds a new {@link Error1} object using the set fields.
         * @return {@link Error1}
         */
        public Error1 build() {
            return new Error1(line, column, kind, message, path, source, suggestion);
        }
    }
}
