/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.github.api.models.containers.SimplePullRequest1Assignees;
import com.github.api.models.containers.SimplePullRequest1RequestedReviewers;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for SimplePullRequest1 type.
 */
public class SimplePullRequest1 {
    private Links2 links;
    private Object activeLockReason;
    private Object assignee;
    private List<SimplePullRequest1Assignees> assignees;
    private AuthorAssociationEnum authorAssociation;
    private Object autoMerge;
    private Base28 base;
    private String body;
    private String closedAt;
    private String commentsUrl;
    private String commitsUrl;
    private String createdAt;
    private String diffUrl;
    private boolean draft;
    private Head12 head;
    private String htmlUrl;
    private int id;
    private String issueUrl;
    private List<Label10> labels;
    private boolean locked;
    private String mergeCommitSha;
    private String mergedAt;
    private Object milestone;
    private String nodeId;
    private int number;
    private String patchUrl;
    private List<SimplePullRequest1RequestedReviewers> requestedReviewers;
    private List<Team4> requestedTeams;
    private String reviewCommentUrl;
    private String reviewCommentsUrl;
    private State129Enum state;
    private String statusesUrl;
    private String title;
    private String updatedAt;
    private String url;
    private Object user;

    /**
     * Default constructor.
     */
    public SimplePullRequest1() {
    }

    /**
     * Initialization constructor.
     * @param  links  Links2 value for links.
     * @param  activeLockReason  Object value for activeLockReason.
     * @param  assignee  Object value for assignee.
     * @param  assignees  List of SimplePullRequest1Assignees value for assignees.
     * @param  authorAssociation  AuthorAssociationEnum value for authorAssociation.
     * @param  autoMerge  Object value for autoMerge.
     * @param  base  Base28 value for base.
     * @param  body  String value for body.
     * @param  closedAt  String value for closedAt.
     * @param  commentsUrl  String value for commentsUrl.
     * @param  commitsUrl  String value for commitsUrl.
     * @param  createdAt  String value for createdAt.
     * @param  diffUrl  String value for diffUrl.
     * @param  draft  boolean value for draft.
     * @param  head  Head12 value for head.
     * @param  htmlUrl  String value for htmlUrl.
     * @param  id  int value for id.
     * @param  issueUrl  String value for issueUrl.
     * @param  labels  List of Label10 value for labels.
     * @param  locked  boolean value for locked.
     * @param  mergeCommitSha  String value for mergeCommitSha.
     * @param  mergedAt  String value for mergedAt.
     * @param  milestone  Object value for milestone.
     * @param  nodeId  String value for nodeId.
     * @param  number  int value for number.
     * @param  patchUrl  String value for patchUrl.
     * @param  requestedReviewers  List of SimplePullRequest1RequestedReviewers value for
     *         requestedReviewers.
     * @param  requestedTeams  List of Team4 value for requestedTeams.
     * @param  reviewCommentUrl  String value for reviewCommentUrl.
     * @param  reviewCommentsUrl  String value for reviewCommentsUrl.
     * @param  state  State129Enum value for state.
     * @param  statusesUrl  String value for statusesUrl.
     * @param  title  String value for title.
     * @param  updatedAt  String value for updatedAt.
     * @param  url  String value for url.
     * @param  user  Object value for user.
     */
    public SimplePullRequest1(
            Links2 links,
            Object activeLockReason,
            Object assignee,
            List<SimplePullRequest1Assignees> assignees,
            AuthorAssociationEnum authorAssociation,
            Object autoMerge,
            Base28 base,
            String body,
            String closedAt,
            String commentsUrl,
            String commitsUrl,
            String createdAt,
            String diffUrl,
            boolean draft,
            Head12 head,
            String htmlUrl,
            int id,
            String issueUrl,
            List<Label10> labels,
            boolean locked,
            String mergeCommitSha,
            String mergedAt,
            Object milestone,
            String nodeId,
            int number,
            String patchUrl,
            List<SimplePullRequest1RequestedReviewers> requestedReviewers,
            List<Team4> requestedTeams,
            String reviewCommentUrl,
            String reviewCommentsUrl,
            State129Enum state,
            String statusesUrl,
            String title,
            String updatedAt,
            String url,
            Object user) {
        this.links = links;
        this.activeLockReason = activeLockReason;
        this.assignee = assignee;
        this.assignees = assignees;
        this.authorAssociation = authorAssociation;
        this.autoMerge = autoMerge;
        this.base = base;
        this.body = body;
        this.closedAt = closedAt;
        this.commentsUrl = commentsUrl;
        this.commitsUrl = commitsUrl;
        this.createdAt = createdAt;
        this.diffUrl = diffUrl;
        this.draft = draft;
        this.head = head;
        this.htmlUrl = htmlUrl;
        this.id = id;
        this.issueUrl = issueUrl;
        this.labels = labels;
        this.locked = locked;
        this.mergeCommitSha = mergeCommitSha;
        this.mergedAt = mergedAt;
        this.milestone = milestone;
        this.nodeId = nodeId;
        this.number = number;
        this.patchUrl = patchUrl;
        this.requestedReviewers = requestedReviewers;
        this.requestedTeams = requestedTeams;
        this.reviewCommentUrl = reviewCommentUrl;
        this.reviewCommentsUrl = reviewCommentsUrl;
        this.state = state;
        this.statusesUrl = statusesUrl;
        this.title = title;
        this.updatedAt = updatedAt;
        this.url = url;
        this.user = user;
    }

    /**
     * Getter for Links.
     * @return Returns the Links2
     */
    @JsonGetter("_links")
    public Links2 getLinks() {
        return links;
    }

    /**
     * Setter for Links.
     * @param links Value for Links2
     */
    @JsonSetter("_links")
    public void setLinks(Links2 links) {
        this.links = links;
    }

    /**
     * Getter for ActiveLockReason.
     * @return Returns the Object
     */
    @JsonGetter("active_lock_reason")
    public Object getActiveLockReason() {
        return activeLockReason;
    }

    /**
     * Setter for ActiveLockReason.
     * @param activeLockReason Value for Object
     */
    @JsonSetter("active_lock_reason")
    public void setActiveLockReason(Object activeLockReason) {
        this.activeLockReason = activeLockReason;
    }

    /**
     * Getter for Assignee.
     * @return Returns the Object
     */
    @JsonGetter("assignee")
    public Object getAssignee() {
        return assignee;
    }

    /**
     * Setter for Assignee.
     * @param assignee Value for Object
     */
    @JsonSetter("assignee")
    public void setAssignee(Object assignee) {
        this.assignee = assignee;
    }

    /**
     * Getter for Assignees.
     * @return Returns the List of SimplePullRequest1Assignees
     */
    @JsonGetter("assignees")
    public List<SimplePullRequest1Assignees> getAssignees() {
        return assignees;
    }

    /**
     * Setter for Assignees.
     * @param assignees Value for List of SimplePullRequest1Assignees
     */
    @JsonSetter("assignees")
    public void setAssignees(List<SimplePullRequest1Assignees> assignees) {
        this.assignees = assignees;
    }

    /**
     * Getter for AuthorAssociation.
     * @return Returns the AuthorAssociationEnum
     */
    @JsonGetter("author_association")
    public AuthorAssociationEnum getAuthorAssociation() {
        return authorAssociation;
    }

    /**
     * Setter for AuthorAssociation.
     * @param authorAssociation Value for AuthorAssociationEnum
     */
    @JsonSetter("author_association")
    public void setAuthorAssociation(AuthorAssociationEnum authorAssociation) {
        this.authorAssociation = authorAssociation;
    }

    /**
     * Getter for AutoMerge.
     * @return Returns the Object
     */
    @JsonGetter("auto_merge")
    public Object getAutoMerge() {
        return autoMerge;
    }

    /**
     * Setter for AutoMerge.
     * @param autoMerge Value for Object
     */
    @JsonSetter("auto_merge")
    public void setAutoMerge(Object autoMerge) {
        this.autoMerge = autoMerge;
    }

    /**
     * Getter for Base.
     * @return Returns the Base28
     */
    @JsonGetter("base")
    public Base28 getBase() {
        return base;
    }

    /**
     * Setter for Base.
     * @param base Value for Base28
     */
    @JsonSetter("base")
    public void setBase(Base28 base) {
        this.base = base;
    }

    /**
     * Getter for Body.
     * @return Returns the String
     */
    @JsonGetter("body")
    public String getBody() {
        return body;
    }

    /**
     * Setter for Body.
     * @param body Value for String
     */
    @JsonSetter("body")
    public void setBody(String body) {
        this.body = body;
    }

    /**
     * Getter for ClosedAt.
     * @return Returns the String
     */
    @JsonGetter("closed_at")
    public String getClosedAt() {
        return closedAt;
    }

    /**
     * Setter for ClosedAt.
     * @param closedAt Value for String
     */
    @JsonSetter("closed_at")
    public void setClosedAt(String closedAt) {
        this.closedAt = closedAt;
    }

    /**
     * Getter for CommentsUrl.
     * @return Returns the String
     */
    @JsonGetter("comments_url")
    public String getCommentsUrl() {
        return commentsUrl;
    }

    /**
     * Setter for CommentsUrl.
     * @param commentsUrl Value for String
     */
    @JsonSetter("comments_url")
    public void setCommentsUrl(String commentsUrl) {
        this.commentsUrl = commentsUrl;
    }

    /**
     * Getter for CommitsUrl.
     * @return Returns the String
     */
    @JsonGetter("commits_url")
    public String getCommitsUrl() {
        return commitsUrl;
    }

    /**
     * Setter for CommitsUrl.
     * @param commitsUrl Value for String
     */
    @JsonSetter("commits_url")
    public void setCommitsUrl(String commitsUrl) {
        this.commitsUrl = commitsUrl;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the String
     */
    @JsonGetter("created_at")
    public String getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for String
     */
    @JsonSetter("created_at")
    public void setCreatedAt(String createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for DiffUrl.
     * @return Returns the String
     */
    @JsonGetter("diff_url")
    public String getDiffUrl() {
        return diffUrl;
    }

    /**
     * Setter for DiffUrl.
     * @param diffUrl Value for String
     */
    @JsonSetter("diff_url")
    public void setDiffUrl(String diffUrl) {
        this.diffUrl = diffUrl;
    }

    /**
     * Getter for Draft.
     * @return Returns the boolean
     */
    @JsonGetter("draft")
    public boolean getDraft() {
        return draft;
    }

    /**
     * Setter for Draft.
     * @param draft Value for boolean
     */
    @JsonSetter("draft")
    public void setDraft(boolean draft) {
        this.draft = draft;
    }

    /**
     * Getter for Head.
     * @return Returns the Head12
     */
    @JsonGetter("head")
    public Head12 getHead() {
        return head;
    }

    /**
     * Setter for Head.
     * @param head Value for Head12
     */
    @JsonSetter("head")
    public void setHead(Head12 head) {
        this.head = head;
    }

    /**
     * Getter for HtmlUrl.
     * @return Returns the String
     */
    @JsonGetter("html_url")
    public String getHtmlUrl() {
        return htmlUrl;
    }

    /**
     * Setter for HtmlUrl.
     * @param htmlUrl Value for String
     */
    @JsonSetter("html_url")
    public void setHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
    }

    /**
     * Getter for Id.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for IssueUrl.
     * @return Returns the String
     */
    @JsonGetter("issue_url")
    public String getIssueUrl() {
        return issueUrl;
    }

    /**
     * Setter for IssueUrl.
     * @param issueUrl Value for String
     */
    @JsonSetter("issue_url")
    public void setIssueUrl(String issueUrl) {
        this.issueUrl = issueUrl;
    }

    /**
     * Getter for Labels.
     * @return Returns the List of Label10
     */
    @JsonGetter("labels")
    public List<Label10> getLabels() {
        return labels;
    }

    /**
     * Setter for Labels.
     * @param labels Value for List of Label10
     */
    @JsonSetter("labels")
    public void setLabels(List<Label10> labels) {
        this.labels = labels;
    }

    /**
     * Getter for Locked.
     * @return Returns the boolean
     */
    @JsonGetter("locked")
    public boolean getLocked() {
        return locked;
    }

    /**
     * Setter for Locked.
     * @param locked Value for boolean
     */
    @JsonSetter("locked")
    public void setLocked(boolean locked) {
        this.locked = locked;
    }

    /**
     * Getter for MergeCommitSha.
     * @return Returns the String
     */
    @JsonGetter("merge_commit_sha")
    public String getMergeCommitSha() {
        return mergeCommitSha;
    }

    /**
     * Setter for MergeCommitSha.
     * @param mergeCommitSha Value for String
     */
    @JsonSetter("merge_commit_sha")
    public void setMergeCommitSha(String mergeCommitSha) {
        this.mergeCommitSha = mergeCommitSha;
    }

    /**
     * Getter for MergedAt.
     * @return Returns the String
     */
    @JsonGetter("merged_at")
    public String getMergedAt() {
        return mergedAt;
    }

    /**
     * Setter for MergedAt.
     * @param mergedAt Value for String
     */
    @JsonSetter("merged_at")
    public void setMergedAt(String mergedAt) {
        this.mergedAt = mergedAt;
    }

    /**
     * Getter for Milestone.
     * @return Returns the Object
     */
    @JsonGetter("milestone")
    public Object getMilestone() {
        return milestone;
    }

    /**
     * Setter for Milestone.
     * @param milestone Value for Object
     */
    @JsonSetter("milestone")
    public void setMilestone(Object milestone) {
        this.milestone = milestone;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for Number.
     * @return Returns the int
     */
    @JsonGetter("number")
    public int getNumber() {
        return number;
    }

    /**
     * Setter for Number.
     * @param number Value for int
     */
    @JsonSetter("number")
    public void setNumber(int number) {
        this.number = number;
    }

    /**
     * Getter for PatchUrl.
     * @return Returns the String
     */
    @JsonGetter("patch_url")
    public String getPatchUrl() {
        return patchUrl;
    }

    /**
     * Setter for PatchUrl.
     * @param patchUrl Value for String
     */
    @JsonSetter("patch_url")
    public void setPatchUrl(String patchUrl) {
        this.patchUrl = patchUrl;
    }

    /**
     * Getter for RequestedReviewers.
     * @return Returns the List of SimplePullRequest1RequestedReviewers
     */
    @JsonGetter("requested_reviewers")
    public List<SimplePullRequest1RequestedReviewers> getRequestedReviewers() {
        return requestedReviewers;
    }

    /**
     * Setter for RequestedReviewers.
     * @param requestedReviewers Value for List of SimplePullRequest1RequestedReviewers
     */
    @JsonSetter("requested_reviewers")
    public void setRequestedReviewers(List<SimplePullRequest1RequestedReviewers> requestedReviewers) {
        this.requestedReviewers = requestedReviewers;
    }

    /**
     * Getter for RequestedTeams.
     * @return Returns the List of Team4
     */
    @JsonGetter("requested_teams")
    public List<Team4> getRequestedTeams() {
        return requestedTeams;
    }

    /**
     * Setter for RequestedTeams.
     * @param requestedTeams Value for List of Team4
     */
    @JsonSetter("requested_teams")
    public void setRequestedTeams(List<Team4> requestedTeams) {
        this.requestedTeams = requestedTeams;
    }

    /**
     * Getter for ReviewCommentUrl.
     * @return Returns the String
     */
    @JsonGetter("review_comment_url")
    public String getReviewCommentUrl() {
        return reviewCommentUrl;
    }

    /**
     * Setter for ReviewCommentUrl.
     * @param reviewCommentUrl Value for String
     */
    @JsonSetter("review_comment_url")
    public void setReviewCommentUrl(String reviewCommentUrl) {
        this.reviewCommentUrl = reviewCommentUrl;
    }

    /**
     * Getter for ReviewCommentsUrl.
     * @return Returns the String
     */
    @JsonGetter("review_comments_url")
    public String getReviewCommentsUrl() {
        return reviewCommentsUrl;
    }

    /**
     * Setter for ReviewCommentsUrl.
     * @param reviewCommentsUrl Value for String
     */
    @JsonSetter("review_comments_url")
    public void setReviewCommentsUrl(String reviewCommentsUrl) {
        this.reviewCommentsUrl = reviewCommentsUrl;
    }

    /**
     * Getter for State.
     * @return Returns the State129Enum
     */
    @JsonGetter("state")
    public State129Enum getState() {
        return state;
    }

    /**
     * Setter for State.
     * @param state Value for State129Enum
     */
    @JsonSetter("state")
    public void setState(State129Enum state) {
        this.state = state;
    }

    /**
     * Getter for StatusesUrl.
     * @return Returns the String
     */
    @JsonGetter("statuses_url")
    public String getStatusesUrl() {
        return statusesUrl;
    }

    /**
     * Setter for StatusesUrl.
     * @param statusesUrl Value for String
     */
    @JsonSetter("statuses_url")
    public void setStatusesUrl(String statusesUrl) {
        this.statusesUrl = statusesUrl;
    }

    /**
     * Getter for Title.
     * @return Returns the String
     */
    @JsonGetter("title")
    public String getTitle() {
        return title;
    }

    /**
     * Setter for Title.
     * @param title Value for String
     */
    @JsonSetter("title")
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the String
     */
    @JsonGetter("updated_at")
    public String getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for String
     */
    @JsonSetter("updated_at")
    public void setUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for User.
     * @return Returns the Object
     */
    @JsonGetter("user")
    public Object getUser() {
        return user;
    }

    /**
     * Setter for User.
     * @param user Value for Object
     */
    @JsonSetter("user")
    public void setUser(Object user) {
        this.user = user;
    }

    /**
     * Converts this SimplePullRequest1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SimplePullRequest1 [" + "links=" + links + ", activeLockReason=" + activeLockReason
                + ", assignee=" + assignee + ", assignees=" + assignees + ", authorAssociation="
                + authorAssociation + ", autoMerge=" + autoMerge + ", base=" + base + ", body="
                + body + ", closedAt=" + closedAt + ", commentsUrl=" + commentsUrl + ", commitsUrl="
                + commitsUrl + ", createdAt=" + createdAt + ", diffUrl=" + diffUrl + ", draft="
                + draft + ", head=" + head + ", htmlUrl=" + htmlUrl + ", id=" + id + ", issueUrl="
                + issueUrl + ", labels=" + labels + ", locked=" + locked + ", mergeCommitSha="
                + mergeCommitSha + ", mergedAt=" + mergedAt + ", milestone=" + milestone
                + ", nodeId=" + nodeId + ", number=" + number + ", patchUrl=" + patchUrl
                + ", requestedReviewers=" + requestedReviewers + ", requestedTeams="
                + requestedTeams + ", reviewCommentUrl=" + reviewCommentUrl + ", reviewCommentsUrl="
                + reviewCommentsUrl + ", state=" + state + ", statusesUrl=" + statusesUrl
                + ", title=" + title + ", updatedAt=" + updatedAt + ", url=" + url + ", user="
                + user + "]";
    }

    /**
     * Builds a new {@link SimplePullRequest1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SimplePullRequest1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(links, activeLockReason, assignee, assignees,
                authorAssociation, autoMerge, base, body, closedAt, commentsUrl, commitsUrl,
                createdAt, diffUrl, draft, head, htmlUrl, id, issueUrl, labels, locked,
                mergeCommitSha, mergedAt, milestone, nodeId, number, patchUrl, requestedReviewers,
                requestedTeams, reviewCommentUrl, reviewCommentsUrl, state, statusesUrl, title,
                updatedAt, url, user);
        return builder;
    }

    /**
     * Class to build instances of {@link SimplePullRequest1}.
     */
    public static class Builder {
        private Links2 links;
        private Object activeLockReason;
        private Object assignee;
        private List<SimplePullRequest1Assignees> assignees;
        private AuthorAssociationEnum authorAssociation;
        private Object autoMerge;
        private Base28 base;
        private String body;
        private String closedAt;
        private String commentsUrl;
        private String commitsUrl;
        private String createdAt;
        private String diffUrl;
        private boolean draft;
        private Head12 head;
        private String htmlUrl;
        private int id;
        private String issueUrl;
        private List<Label10> labels;
        private boolean locked;
        private String mergeCommitSha;
        private String mergedAt;
        private Object milestone;
        private String nodeId;
        private int number;
        private String patchUrl;
        private List<SimplePullRequest1RequestedReviewers> requestedReviewers;
        private List<Team4> requestedTeams;
        private String reviewCommentUrl;
        private String reviewCommentsUrl;
        private State129Enum state;
        private String statusesUrl;
        private String title;
        private String updatedAt;
        private String url;
        private Object user;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  links  Links2 value for links.
         * @param  activeLockReason  Object value for activeLockReason.
         * @param  assignee  Object value for assignee.
         * @param  assignees  List of SimplePullRequest1Assignees value for assignees.
         * @param  authorAssociation  AuthorAssociationEnum value for authorAssociation.
         * @param  autoMerge  Object value for autoMerge.
         * @param  base  Base28 value for base.
         * @param  body  String value for body.
         * @param  closedAt  String value for closedAt.
         * @param  commentsUrl  String value for commentsUrl.
         * @param  commitsUrl  String value for commitsUrl.
         * @param  createdAt  String value for createdAt.
         * @param  diffUrl  String value for diffUrl.
         * @param  draft  boolean value for draft.
         * @param  head  Head12 value for head.
         * @param  htmlUrl  String value for htmlUrl.
         * @param  id  int value for id.
         * @param  issueUrl  String value for issueUrl.
         * @param  labels  List of Label10 value for labels.
         * @param  locked  boolean value for locked.
         * @param  mergeCommitSha  String value for mergeCommitSha.
         * @param  mergedAt  String value for mergedAt.
         * @param  milestone  Object value for milestone.
         * @param  nodeId  String value for nodeId.
         * @param  number  int value for number.
         * @param  patchUrl  String value for patchUrl.
         * @param  requestedReviewers  List of SimplePullRequest1RequestedReviewers value for
         *         requestedReviewers.
         * @param  requestedTeams  List of Team4 value for requestedTeams.
         * @param  reviewCommentUrl  String value for reviewCommentUrl.
         * @param  reviewCommentsUrl  String value for reviewCommentsUrl.
         * @param  state  State129Enum value for state.
         * @param  statusesUrl  String value for statusesUrl.
         * @param  title  String value for title.
         * @param  updatedAt  String value for updatedAt.
         * @param  url  String value for url.
         * @param  user  Object value for user.
         */
        public Builder(Links2 links, Object activeLockReason, Object assignee,
                List<SimplePullRequest1Assignees> assignees,
                AuthorAssociationEnum authorAssociation, Object autoMerge, Base28 base, String body,
                String closedAt, String commentsUrl, String commitsUrl, String createdAt,
                String diffUrl, boolean draft, Head12 head, String htmlUrl, int id, String issueUrl,
                List<Label10> labels, boolean locked, String mergeCommitSha, String mergedAt,
                Object milestone, String nodeId, int number, String patchUrl,
                List<SimplePullRequest1RequestedReviewers> requestedReviewers,
                List<Team4> requestedTeams, String reviewCommentUrl, String reviewCommentsUrl,
                State129Enum state, String statusesUrl, String title, String updatedAt, String url,
                Object user) {
            this.links = links;
            this.activeLockReason = activeLockReason;
            this.assignee = assignee;
            this.assignees = assignees;
            this.authorAssociation = authorAssociation;
            this.autoMerge = autoMerge;
            this.base = base;
            this.body = body;
            this.closedAt = closedAt;
            this.commentsUrl = commentsUrl;
            this.commitsUrl = commitsUrl;
            this.createdAt = createdAt;
            this.diffUrl = diffUrl;
            this.draft = draft;
            this.head = head;
            this.htmlUrl = htmlUrl;
            this.id = id;
            this.issueUrl = issueUrl;
            this.labels = labels;
            this.locked = locked;
            this.mergeCommitSha = mergeCommitSha;
            this.mergedAt = mergedAt;
            this.milestone = milestone;
            this.nodeId = nodeId;
            this.number = number;
            this.patchUrl = patchUrl;
            this.requestedReviewers = requestedReviewers;
            this.requestedTeams = requestedTeams;
            this.reviewCommentUrl = reviewCommentUrl;
            this.reviewCommentsUrl = reviewCommentsUrl;
            this.state = state;
            this.statusesUrl = statusesUrl;
            this.title = title;
            this.updatedAt = updatedAt;
            this.url = url;
            this.user = user;
        }

        /**
         * Setter for links.
         * @param  links  Links2 value for links.
         * @return Builder
         */
        public Builder links(Links2 links) {
            this.links = links;
            return this;
        }

        /**
         * Setter for activeLockReason.
         * @param  activeLockReason  Object value for activeLockReason.
         * @return Builder
         */
        public Builder activeLockReason(Object activeLockReason) {
            this.activeLockReason = activeLockReason;
            return this;
        }

        /**
         * Setter for assignee.
         * @param  assignee  Object value for assignee.
         * @return Builder
         */
        public Builder assignee(Object assignee) {
            this.assignee = assignee;
            return this;
        }

        /**
         * Setter for assignees.
         * @param  assignees  List of SimplePullRequest1Assignees value for assignees.
         * @return Builder
         */
        public Builder assignees(List<SimplePullRequest1Assignees> assignees) {
            this.assignees = assignees;
            return this;
        }

        /**
         * Setter for authorAssociation.
         * @param  authorAssociation  AuthorAssociationEnum value for authorAssociation.
         * @return Builder
         */
        public Builder authorAssociation(AuthorAssociationEnum authorAssociation) {
            this.authorAssociation = authorAssociation;
            return this;
        }

        /**
         * Setter for autoMerge.
         * @param  autoMerge  Object value for autoMerge.
         * @return Builder
         */
        public Builder autoMerge(Object autoMerge) {
            this.autoMerge = autoMerge;
            return this;
        }

        /**
         * Setter for base.
         * @param  base  Base28 value for base.
         * @return Builder
         */
        public Builder base(Base28 base) {
            this.base = base;
            return this;
        }

        /**
         * Setter for body.
         * @param  body  String value for body.
         * @return Builder
         */
        public Builder body(String body) {
            this.body = body;
            return this;
        }

        /**
         * Setter for closedAt.
         * @param  closedAt  String value for closedAt.
         * @return Builder
         */
        public Builder closedAt(String closedAt) {
            this.closedAt = closedAt;
            return this;
        }

        /**
         * Setter for commentsUrl.
         * @param  commentsUrl  String value for commentsUrl.
         * @return Builder
         */
        public Builder commentsUrl(String commentsUrl) {
            this.commentsUrl = commentsUrl;
            return this;
        }

        /**
         * Setter for commitsUrl.
         * @param  commitsUrl  String value for commitsUrl.
         * @return Builder
         */
        public Builder commitsUrl(String commitsUrl) {
            this.commitsUrl = commitsUrl;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  String value for createdAt.
         * @return Builder
         */
        public Builder createdAt(String createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for diffUrl.
         * @param  diffUrl  String value for diffUrl.
         * @return Builder
         */
        public Builder diffUrl(String diffUrl) {
            this.diffUrl = diffUrl;
            return this;
        }

        /**
         * Setter for draft.
         * @param  draft  boolean value for draft.
         * @return Builder
         */
        public Builder draft(boolean draft) {
            this.draft = draft;
            return this;
        }

        /**
         * Setter for head.
         * @param  head  Head12 value for head.
         * @return Builder
         */
        public Builder head(Head12 head) {
            this.head = head;
            return this;
        }

        /**
         * Setter for htmlUrl.
         * @param  htmlUrl  String value for htmlUrl.
         * @return Builder
         */
        public Builder htmlUrl(String htmlUrl) {
            this.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for issueUrl.
         * @param  issueUrl  String value for issueUrl.
         * @return Builder
         */
        public Builder issueUrl(String issueUrl) {
            this.issueUrl = issueUrl;
            return this;
        }

        /**
         * Setter for labels.
         * @param  labels  List of Label10 value for labels.
         * @return Builder
         */
        public Builder labels(List<Label10> labels) {
            this.labels = labels;
            return this;
        }

        /**
         * Setter for locked.
         * @param  locked  boolean value for locked.
         * @return Builder
         */
        public Builder locked(boolean locked) {
            this.locked = locked;
            return this;
        }

        /**
         * Setter for mergeCommitSha.
         * @param  mergeCommitSha  String value for mergeCommitSha.
         * @return Builder
         */
        public Builder mergeCommitSha(String mergeCommitSha) {
            this.mergeCommitSha = mergeCommitSha;
            return this;
        }

        /**
         * Setter for mergedAt.
         * @param  mergedAt  String value for mergedAt.
         * @return Builder
         */
        public Builder mergedAt(String mergedAt) {
            this.mergedAt = mergedAt;
            return this;
        }

        /**
         * Setter for milestone.
         * @param  milestone  Object value for milestone.
         * @return Builder
         */
        public Builder milestone(Object milestone) {
            this.milestone = milestone;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for number.
         * @param  number  int value for number.
         * @return Builder
         */
        public Builder number(int number) {
            this.number = number;
            return this;
        }

        /**
         * Setter for patchUrl.
         * @param  patchUrl  String value for patchUrl.
         * @return Builder
         */
        public Builder patchUrl(String patchUrl) {
            this.patchUrl = patchUrl;
            return this;
        }

        /**
         * Setter for requestedReviewers.
         * @param  requestedReviewers  List of SimplePullRequest1RequestedReviewers value for
         *         requestedReviewers.
         * @return Builder
         */
        public Builder requestedReviewers(
                List<SimplePullRequest1RequestedReviewers> requestedReviewers) {
            this.requestedReviewers = requestedReviewers;
            return this;
        }

        /**
         * Setter for requestedTeams.
         * @param  requestedTeams  List of Team4 value for requestedTeams.
         * @return Builder
         */
        public Builder requestedTeams(List<Team4> requestedTeams) {
            this.requestedTeams = requestedTeams;
            return this;
        }

        /**
         * Setter for reviewCommentUrl.
         * @param  reviewCommentUrl  String value for reviewCommentUrl.
         * @return Builder
         */
        public Builder reviewCommentUrl(String reviewCommentUrl) {
            this.reviewCommentUrl = reviewCommentUrl;
            return this;
        }

        /**
         * Setter for reviewCommentsUrl.
         * @param  reviewCommentsUrl  String value for reviewCommentsUrl.
         * @return Builder
         */
        public Builder reviewCommentsUrl(String reviewCommentsUrl) {
            this.reviewCommentsUrl = reviewCommentsUrl;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  State129Enum value for state.
         * @return Builder
         */
        public Builder state(State129Enum state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for statusesUrl.
         * @param  statusesUrl  String value for statusesUrl.
         * @return Builder
         */
        public Builder statusesUrl(String statusesUrl) {
            this.statusesUrl = statusesUrl;
            return this;
        }

        /**
         * Setter for title.
         * @param  title  String value for title.
         * @return Builder
         */
        public Builder title(String title) {
            this.title = title;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  String value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for user.
         * @param  user  Object value for user.
         * @return Builder
         */
        public Builder user(Object user) {
            this.user = user;
            return this;
        }

        /**
         * Builds a new {@link SimplePullRequest1} object using the set fields.
         * @return {@link SimplePullRequest1}
         */
        public SimplePullRequest1 build() {
            return new SimplePullRequest1(links, activeLockReason, assignee, assignees,
                    authorAssociation, autoMerge, base, body, closedAt, commentsUrl, commitsUrl,
                    createdAt, diffUrl, draft, head, htmlUrl, id, issueUrl, labels, locked,
                    mergeCommitSha, mergedAt, milestone, nodeId, number, patchUrl,
                    requestedReviewers, requestedTeams, reviewCommentUrl, reviewCommentsUrl, state,
                    statusesUrl, title, updatedAt, url, user);
        }
    }
}
