/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Environment2 type.
 */
public class Environment2 {
    private Integer id;
    private String nodeId;
    private String name;
    private String url;
    private String htmlUrl;

    /**
     * Default constructor.
     */
    public Environment2() {
    }

    /**
     * Initialization constructor.
     * @param  id  Integer value for id.
     * @param  nodeId  String value for nodeId.
     * @param  name  String value for name.
     * @param  url  String value for url.
     * @param  htmlUrl  String value for htmlUrl.
     */
    public Environment2(
            Integer id,
            String nodeId,
            String name,
            String url,
            String htmlUrl) {
        this.id = id;
        this.nodeId = nodeId;
        this.name = name;
        this.url = url;
        this.htmlUrl = htmlUrl;
    }

    /**
     * Getter for Id.
     * The id of the environment.
     * @return Returns the Integer
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getId() {
        return id;
    }

    /**
     * Setter for Id.
     * The id of the environment.
     * @param id Value for Integer
     */
    @JsonSetter("id")
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for NodeId.
     * @return Returns the String
     */
    @JsonGetter("node_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNodeId() {
        return nodeId;
    }

    /**
     * Setter for NodeId.
     * @param nodeId Value for String
     */
    @JsonSetter("node_id")
    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    /**
     * Getter for Name.
     * The name of the environment.
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the environment.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for HtmlUrl.
     * @return Returns the String
     */
    @JsonGetter("html_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getHtmlUrl() {
        return htmlUrl;
    }

    /**
     * Setter for HtmlUrl.
     * @param htmlUrl Value for String
     */
    @JsonSetter("html_url")
    public void setHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
    }

    /**
     * Converts this Environment2 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Environment2 [" + "id=" + id + ", nodeId=" + nodeId + ", name=" + name + ", url="
                + url + ", htmlUrl=" + htmlUrl + "]";
    }

    /**
     * Builds a new {@link Environment2.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Environment2.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .nodeId(getNodeId())
                .name(getName())
                .url(getUrl())
                .htmlUrl(getHtmlUrl());
        return builder;
    }

    /**
     * Class to build instances of {@link Environment2}.
     */
    public static class Builder {
        private Integer id;
        private String nodeId;
        private String name;
        private String url;
        private String htmlUrl;



        /**
         * Setter for id.
         * @param  id  Integer value for id.
         * @return Builder
         */
        public Builder id(Integer id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for nodeId.
         * @param  nodeId  String value for nodeId.
         * @return Builder
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for htmlUrl.
         * @param  htmlUrl  String value for htmlUrl.
         * @return Builder
         */
        public Builder htmlUrl(String htmlUrl) {
            this.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * Builds a new {@link Environment2} object using the set fields.
         * @return {@link Environment2}
         */
        public Environment2 build() {
            return new Environment2(id, nodeId, name, url, htmlUrl);
        }
    }
}
