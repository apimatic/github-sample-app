/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.github.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;

/**
 * This is a model class for UsersPackagesPackageNameResponse type.
 */
public class UsersPackagesPackageNameResponse {
    private int id;
    private String name;
    private PackageType2Enum packageType;
    private String url;
    private String htmlUrl;
    private int versionCount;
    private Visibility4Enum visibility;
    private Object owner;
    private Object repository;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;

    /**
     * Default constructor.
     */
    public UsersPackagesPackageNameResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  int value for id.
     * @param  name  String value for name.
     * @param  packageType  PackageType2Enum value for packageType.
     * @param  url  String value for url.
     * @param  htmlUrl  String value for htmlUrl.
     * @param  versionCount  int value for versionCount.
     * @param  visibility  Visibility4Enum value for visibility.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  owner  Object value for owner.
     * @param  repository  Object value for repository.
     */
    public UsersPackagesPackageNameResponse(
            int id,
            String name,
            PackageType2Enum packageType,
            String url,
            String htmlUrl,
            int versionCount,
            Visibility4Enum visibility,
            LocalDateTime createdAt,
            LocalDateTime updatedAt,
            Object owner,
            Object repository) {
        this.id = id;
        this.name = name;
        this.packageType = packageType;
        this.url = url;
        this.htmlUrl = htmlUrl;
        this.versionCount = versionCount;
        this.visibility = visibility;
        this.owner = owner;
        this.repository = repository;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Id.
     * Unique identifier of the package.
     * @return Returns the int
     */
    @JsonGetter("id")
    public int getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Unique identifier of the package.
     * @param id Value for int
     */
    @JsonSetter("id")
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Getter for Name.
     * The name of the package.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the package.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for PackageType.
     * @return Returns the PackageType2Enum
     */
    @JsonGetter("package_type")
    public PackageType2Enum getPackageType() {
        return packageType;
    }

    /**
     * Setter for PackageType.
     * @param packageType Value for PackageType2Enum
     */
    @JsonSetter("package_type")
    public void setPackageType(PackageType2Enum packageType) {
        this.packageType = packageType;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for HtmlUrl.
     * @return Returns the String
     */
    @JsonGetter("html_url")
    public String getHtmlUrl() {
        return htmlUrl;
    }

    /**
     * Setter for HtmlUrl.
     * @param htmlUrl Value for String
     */
    @JsonSetter("html_url")
    public void setHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
    }

    /**
     * Getter for VersionCount.
     * The number of versions of the package.
     * @return Returns the int
     */
    @JsonGetter("version_count")
    public int getVersionCount() {
        return versionCount;
    }

    /**
     * Setter for VersionCount.
     * The number of versions of the package.
     * @param versionCount Value for int
     */
    @JsonSetter("version_count")
    public void setVersionCount(int versionCount) {
        this.versionCount = versionCount;
    }

    /**
     * Getter for Visibility.
     * @return Returns the Visibility4Enum
     */
    @JsonGetter("visibility")
    public Visibility4Enum getVisibility() {
        return visibility;
    }

    /**
     * Setter for Visibility.
     * @param visibility Value for Visibility4Enum
     */
    @JsonSetter("visibility")
    public void setVisibility(Visibility4Enum visibility) {
        this.visibility = visibility;
    }

    /**
     * Getter for Owner.
     * @return Returns the Object
     */
    @JsonGetter("owner")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getOwner() {
        return owner;
    }

    /**
     * Setter for Owner.
     * @param owner Value for Object
     */
    @JsonSetter("owner")
    public void setOwner(Object owner) {
        this.owner = owner;
    }

    /**
     * Getter for Repository.
     * @return Returns the Object
     */
    @JsonGetter("repository")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getRepository() {
        return repository;
    }

    /**
     * Setter for Repository.
     * @param repository Value for Object
     */
    @JsonSetter("repository")
    public void setRepository(Object repository) {
        this.repository = repository;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Converts this UsersPackagesPackageNameResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UsersPackagesPackageNameResponse [" + "id=" + id + ", name=" + name
                + ", packageType=" + packageType + ", url=" + url + ", htmlUrl=" + htmlUrl
                + ", versionCount=" + versionCount + ", visibility=" + visibility + ", createdAt="
                + createdAt + ", updatedAt=" + updatedAt + ", owner=" + owner + ", repository="
                + repository + "]";
    }

    /**
     * Builds a new {@link UsersPackagesPackageNameResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UsersPackagesPackageNameResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, name, packageType, url, htmlUrl, versionCount, visibility,
                createdAt, updatedAt)
                .owner(getOwner())
                .repository(getRepository());
        return builder;
    }

    /**
     * Class to build instances of {@link UsersPackagesPackageNameResponse}.
     */
    public static class Builder {
        private int id;
        private String name;
        private PackageType2Enum packageType;
        private String url;
        private String htmlUrl;
        private int versionCount;
        private Visibility4Enum visibility;
        private LocalDateTime createdAt;
        private LocalDateTime updatedAt;
        private Object owner;
        private Object repository;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  int value for id.
         * @param  name  String value for name.
         * @param  packageType  PackageType2Enum value for packageType.
         * @param  url  String value for url.
         * @param  htmlUrl  String value for htmlUrl.
         * @param  versionCount  int value for versionCount.
         * @param  visibility  Visibility4Enum value for visibility.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         */
        public Builder(int id, String name, PackageType2Enum packageType, String url,
                String htmlUrl, int versionCount, Visibility4Enum visibility,
                LocalDateTime createdAt, LocalDateTime updatedAt) {
            this.id = id;
            this.name = name;
            this.packageType = packageType;
            this.url = url;
            this.htmlUrl = htmlUrl;
            this.versionCount = versionCount;
            this.visibility = visibility;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
        }

        /**
         * Setter for id.
         * @param  id  int value for id.
         * @return Builder
         */
        public Builder id(int id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for packageType.
         * @param  packageType  PackageType2Enum value for packageType.
         * @return Builder
         */
        public Builder packageType(PackageType2Enum packageType) {
            this.packageType = packageType;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for htmlUrl.
         * @param  htmlUrl  String value for htmlUrl.
         * @return Builder
         */
        public Builder htmlUrl(String htmlUrl) {
            this.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * Setter for versionCount.
         * @param  versionCount  int value for versionCount.
         * @return Builder
         */
        public Builder versionCount(int versionCount) {
            this.versionCount = versionCount;
            return this;
        }

        /**
         * Setter for visibility.
         * @param  visibility  Visibility4Enum value for visibility.
         * @return Builder
         */
        public Builder visibility(Visibility4Enum visibility) {
            this.visibility = visibility;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for owner.
         * @param  owner  Object value for owner.
         * @return Builder
         */
        public Builder owner(Object owner) {
            this.owner = owner;
            return this;
        }

        /**
         * Setter for repository.
         * @param  repository  Object value for repository.
         * @return Builder
         */
        public Builder repository(Object repository) {
            this.repository = repository;
            return this;
        }

        /**
         * Builds a new {@link UsersPackagesPackageNameResponse} object using the set fields.
         * @return {@link UsersPackagesPackageNameResponse}
         */
        public UsersPackagesPackageNameResponse build() {
            return new UsersPackagesPackageNameResponse(id, name, packageType, url, htmlUrl,
                    versionCount, visibility, createdAt, updatedAt, owner, repository);
        }
    }
}
