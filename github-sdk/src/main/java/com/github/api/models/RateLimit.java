/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for RateLimit type.
 */
public class RateLimit {
    private int limit;
    private int remaining;
    private int reset;
    private int used;

    /**
     * Default constructor.
     */
    public RateLimit() {
    }

    /**
     * Initialization constructor.
     * @param  limit  int value for limit.
     * @param  remaining  int value for remaining.
     * @param  reset  int value for reset.
     * @param  used  int value for used.
     */
    public RateLimit(
            int limit,
            int remaining,
            int reset,
            int used) {
        this.limit = limit;
        this.remaining = remaining;
        this.reset = reset;
        this.used = used;
    }

    /**
     * Getter for Limit.
     * @return Returns the int
     */
    @JsonGetter("limit")
    public int getLimit() {
        return limit;
    }

    /**
     * Setter for Limit.
     * @param limit Value for int
     */
    @JsonSetter("limit")
    public void setLimit(int limit) {
        this.limit = limit;
    }

    /**
     * Getter for Remaining.
     * @return Returns the int
     */
    @JsonGetter("remaining")
    public int getRemaining() {
        return remaining;
    }

    /**
     * Setter for Remaining.
     * @param remaining Value for int
     */
    @JsonSetter("remaining")
    public void setRemaining(int remaining) {
        this.remaining = remaining;
    }

    /**
     * Getter for Reset.
     * @return Returns the int
     */
    @JsonGetter("reset")
    public int getReset() {
        return reset;
    }

    /**
     * Setter for Reset.
     * @param reset Value for int
     */
    @JsonSetter("reset")
    public void setReset(int reset) {
        this.reset = reset;
    }

    /**
     * Getter for Used.
     * @return Returns the int
     */
    @JsonGetter("used")
    public int getUsed() {
        return used;
    }

    /**
     * Setter for Used.
     * @param used Value for int
     */
    @JsonSetter("used")
    public void setUsed(int used) {
        this.used = used;
    }

    /**
     * Converts this RateLimit into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "RateLimit [" + "limit=" + limit + ", remaining=" + remaining + ", reset=" + reset
                + ", used=" + used + "]";
    }

    /**
     * Builds a new {@link RateLimit.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link RateLimit.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(limit, remaining, reset, used);
        return builder;
    }

    /**
     * Class to build instances of {@link RateLimit}.
     */
    public static class Builder {
        private int limit;
        private int remaining;
        private int reset;
        private int used;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  limit  int value for limit.
         * @param  remaining  int value for remaining.
         * @param  reset  int value for reset.
         * @param  used  int value for used.
         */
        public Builder(int limit, int remaining, int reset, int used) {
            this.limit = limit;
            this.remaining = remaining;
            this.reset = reset;
            this.used = used;
        }

        /**
         * Setter for limit.
         * @param  limit  int value for limit.
         * @return Builder
         */
        public Builder limit(int limit) {
            this.limit = limit;
            return this;
        }

        /**
         * Setter for remaining.
         * @param  remaining  int value for remaining.
         * @return Builder
         */
        public Builder remaining(int remaining) {
            this.remaining = remaining;
            return this;
        }

        /**
         * Setter for reset.
         * @param  reset  int value for reset.
         * @return Builder
         */
        public Builder reset(int reset) {
            this.reset = reset;
            return this;
        }

        /**
         * Setter for used.
         * @param  used  int value for used.
         * @return Builder
         */
        public Builder used(int used) {
            this.used = used;
            return this;
        }

        /**
         * Builds a new {@link RateLimit} object using the set fields.
         * @return {@link RateLimit}
         */
        public RateLimit build() {
            return new RateLimit(limit, remaining, reset, used);
        }
    }
}
