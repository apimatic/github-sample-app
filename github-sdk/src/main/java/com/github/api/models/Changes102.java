/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Changes102 type.
 */
public class Changes102 {
    private Color color;
    private Description description;
    private Name name;

    /**
     * Default constructor.
     */
    public Changes102() {
    }

    /**
     * Initialization constructor.
     * @param  color  Color value for color.
     * @param  description  Description value for description.
     * @param  name  Name value for name.
     */
    public Changes102(
            Color color,
            Description description,
            Name name) {
        this.color = color;
        this.description = description;
        this.name = name;
    }

    /**
     * Getter for Color.
     * @return Returns the Color
     */
    @JsonGetter("color")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Color getColor() {
        return color;
    }

    /**
     * Setter for Color.
     * @param color Value for Color
     */
    @JsonSetter("color")
    public void setColor(Color color) {
        this.color = color;
    }

    /**
     * Getter for Description.
     * @return Returns the Description
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Description getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for Description
     */
    @JsonSetter("description")
    public void setDescription(Description description) {
        this.description = description;
    }

    /**
     * Getter for Name.
     * @return Returns the Name
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Name getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for Name
     */
    @JsonSetter("name")
    public void setName(Name name) {
        this.name = name;
    }

    /**
     * Converts this Changes102 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Changes102 [" + "color=" + color + ", description=" + description + ", name=" + name
                + "]";
    }

    /**
     * Builds a new {@link Changes102.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Changes102.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .color(getColor())
                .description(getDescription())
                .name(getName());
        return builder;
    }

    /**
     * Class to build instances of {@link Changes102}.
     */
    public static class Builder {
        private Color color;
        private Description description;
        private Name name;



        /**
         * Setter for color.
         * @param  color  Color value for color.
         * @return Builder
         */
        public Builder color(Color color) {
            this.color = color;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  Description value for description.
         * @return Builder
         */
        public Builder description(Description description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  Name value for name.
         * @return Builder
         */
        public Builder name(Name name) {
            this.name = name;
            return this;
        }

        /**
         * Builds a new {@link Changes102} object using the set fields.
         * @return {@link Changes102}
         */
        public Changes102 build() {
            return new Changes102(color, description, name);
        }
    }
}
