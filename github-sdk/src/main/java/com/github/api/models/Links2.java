/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for Links2 type.
 */
public class Links2 {
    private Html comments;
    private Html commits;
    private Html statuses;
    private Html html;
    private Html issue;
    private Html reviewComments;
    private Html reviewComment;
    private Html self;

    /**
     * Default constructor.
     */
    public Links2() {
    }

    /**
     * Initialization constructor.
     * @param  comments  Html value for comments.
     * @param  commits  Html value for commits.
     * @param  statuses  Html value for statuses.
     * @param  html  Html value for html.
     * @param  issue  Html value for issue.
     * @param  reviewComments  Html value for reviewComments.
     * @param  reviewComment  Html value for reviewComment.
     * @param  self  Html value for self.
     */
    public Links2(
            Html comments,
            Html commits,
            Html statuses,
            Html html,
            Html issue,
            Html reviewComments,
            Html reviewComment,
            Html self) {
        this.comments = comments;
        this.commits = commits;
        this.statuses = statuses;
        this.html = html;
        this.issue = issue;
        this.reviewComments = reviewComments;
        this.reviewComment = reviewComment;
        this.self = self;
    }

    /**
     * Getter for Comments.
     * @return Returns the Html
     */
    @JsonGetter("comments")
    public Html getComments() {
        return comments;
    }

    /**
     * Setter for Comments.
     * @param comments Value for Html
     */
    @JsonSetter("comments")
    public void setComments(Html comments) {
        this.comments = comments;
    }

    /**
     * Getter for Commits.
     * @return Returns the Html
     */
    @JsonGetter("commits")
    public Html getCommits() {
        return commits;
    }

    /**
     * Setter for Commits.
     * @param commits Value for Html
     */
    @JsonSetter("commits")
    public void setCommits(Html commits) {
        this.commits = commits;
    }

    /**
     * Getter for Statuses.
     * @return Returns the Html
     */
    @JsonGetter("statuses")
    public Html getStatuses() {
        return statuses;
    }

    /**
     * Setter for Statuses.
     * @param statuses Value for Html
     */
    @JsonSetter("statuses")
    public void setStatuses(Html statuses) {
        this.statuses = statuses;
    }

    /**
     * Getter for Html.
     * @return Returns the Html
     */
    @JsonGetter("html")
    public Html getHtml() {
        return html;
    }

    /**
     * Setter for Html.
     * @param html Value for Html
     */
    @JsonSetter("html")
    public void setHtml(Html html) {
        this.html = html;
    }

    /**
     * Getter for Issue.
     * @return Returns the Html
     */
    @JsonGetter("issue")
    public Html getIssue() {
        return issue;
    }

    /**
     * Setter for Issue.
     * @param issue Value for Html
     */
    @JsonSetter("issue")
    public void setIssue(Html issue) {
        this.issue = issue;
    }

    /**
     * Getter for ReviewComments.
     * @return Returns the Html
     */
    @JsonGetter("review_comments")
    public Html getReviewComments() {
        return reviewComments;
    }

    /**
     * Setter for ReviewComments.
     * @param reviewComments Value for Html
     */
    @JsonSetter("review_comments")
    public void setReviewComments(Html reviewComments) {
        this.reviewComments = reviewComments;
    }

    /**
     * Getter for ReviewComment.
     * @return Returns the Html
     */
    @JsonGetter("review_comment")
    public Html getReviewComment() {
        return reviewComment;
    }

    /**
     * Setter for ReviewComment.
     * @param reviewComment Value for Html
     */
    @JsonSetter("review_comment")
    public void setReviewComment(Html reviewComment) {
        this.reviewComment = reviewComment;
    }

    /**
     * Getter for Self.
     * @return Returns the Html
     */
    @JsonGetter("self")
    public Html getSelf() {
        return self;
    }

    /**
     * Setter for Self.
     * @param self Value for Html
     */
    @JsonSetter("self")
    public void setSelf(Html self) {
        this.self = self;
    }

    /**
     * Converts this Links2 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Links2 [" + "comments=" + comments + ", commits=" + commits + ", statuses="
                + statuses + ", html=" + html + ", issue=" + issue + ", reviewComments="
                + reviewComments + ", reviewComment=" + reviewComment + ", self=" + self + "]";
    }

    /**
     * Builds a new {@link Links2.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Links2.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(comments, commits, statuses, html, issue, reviewComments,
                reviewComment, self);
        return builder;
    }

    /**
     * Class to build instances of {@link Links2}.
     */
    public static class Builder {
        private Html comments;
        private Html commits;
        private Html statuses;
        private Html html;
        private Html issue;
        private Html reviewComments;
        private Html reviewComment;
        private Html self;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  comments  Html value for comments.
         * @param  commits  Html value for commits.
         * @param  statuses  Html value for statuses.
         * @param  html  Html value for html.
         * @param  issue  Html value for issue.
         * @param  reviewComments  Html value for reviewComments.
         * @param  reviewComment  Html value for reviewComment.
         * @param  self  Html value for self.
         */
        public Builder(Html comments, Html commits, Html statuses, Html html, Html issue,
                Html reviewComments, Html reviewComment, Html self) {
            this.comments = comments;
            this.commits = commits;
            this.statuses = statuses;
            this.html = html;
            this.issue = issue;
            this.reviewComments = reviewComments;
            this.reviewComment = reviewComment;
            this.self = self;
        }

        /**
         * Setter for comments.
         * @param  comments  Html value for comments.
         * @return Builder
         */
        public Builder comments(Html comments) {
            this.comments = comments;
            return this;
        }

        /**
         * Setter for commits.
         * @param  commits  Html value for commits.
         * @return Builder
         */
        public Builder commits(Html commits) {
            this.commits = commits;
            return this;
        }

        /**
         * Setter for statuses.
         * @param  statuses  Html value for statuses.
         * @return Builder
         */
        public Builder statuses(Html statuses) {
            this.statuses = statuses;
            return this;
        }

        /**
         * Setter for html.
         * @param  html  Html value for html.
         * @return Builder
         */
        public Builder html(Html html) {
            this.html = html;
            return this;
        }

        /**
         * Setter for issue.
         * @param  issue  Html value for issue.
         * @return Builder
         */
        public Builder issue(Html issue) {
            this.issue = issue;
            return this;
        }

        /**
         * Setter for reviewComments.
         * @param  reviewComments  Html value for reviewComments.
         * @return Builder
         */
        public Builder reviewComments(Html reviewComments) {
            this.reviewComments = reviewComments;
            return this;
        }

        /**
         * Setter for reviewComment.
         * @param  reviewComment  Html value for reviewComment.
         * @return Builder
         */
        public Builder reviewComment(Html reviewComment) {
            this.reviewComment = reviewComment;
            return this;
        }

        /**
         * Setter for self.
         * @param  self  Html value for self.
         * @return Builder
         */
        public Builder self(Html self) {
            this.self = self;
            return this;
        }

        /**
         * Builds a new {@link Links2} object using the set fields.
         * @return {@link Links2}
         */
        public Links2 build() {
            return new Links2(comments, commits, statuses, html, issue, reviewComments,
                    reviewComment, self);
        }
    }
}
