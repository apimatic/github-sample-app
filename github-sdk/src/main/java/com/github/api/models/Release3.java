/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for Release3 type.
 */
public class Release3 {
    private Author7 author;
    private String createdAt;
    private Boolean draft;
    private String htmlUrl;
    private Integer id;
    private OptionalNullable<String> name;
    private Boolean prerelease;
    private String publishedAt;
    private String tagName;
    private String targetCommitish;
    private String url;

    /**
     * Default constructor.
     */
    public Release3() {
    }

    /**
     * Initialization constructor.
     * @param  author  Author7 value for author.
     * @param  createdAt  String value for createdAt.
     * @param  draft  Boolean value for draft.
     * @param  htmlUrl  String value for htmlUrl.
     * @param  id  Integer value for id.
     * @param  name  String value for name.
     * @param  prerelease  Boolean value for prerelease.
     * @param  publishedAt  String value for publishedAt.
     * @param  tagName  String value for tagName.
     * @param  targetCommitish  String value for targetCommitish.
     * @param  url  String value for url.
     */
    public Release3(
            Author7 author,
            String createdAt,
            Boolean draft,
            String htmlUrl,
            Integer id,
            String name,
            Boolean prerelease,
            String publishedAt,
            String tagName,
            String targetCommitish,
            String url) {
        this.author = author;
        this.createdAt = createdAt;
        this.draft = draft;
        this.htmlUrl = htmlUrl;
        this.id = id;
        this.name = OptionalNullable.of(name);
        this.prerelease = prerelease;
        this.publishedAt = publishedAt;
        this.tagName = tagName;
        this.targetCommitish = targetCommitish;
        this.url = url;
    }

    /**
     * Internal initialization constructor.
     */
    protected Release3(Author7 author, String createdAt, Boolean draft, String htmlUrl, Integer id,
            OptionalNullable<String> name, Boolean prerelease, String publishedAt, String tagName,
            String targetCommitish, String url) {
        this.author = author;
        this.createdAt = createdAt;
        this.draft = draft;
        this.htmlUrl = htmlUrl;
        this.id = id;
        this.name = name;
        this.prerelease = prerelease;
        this.publishedAt = publishedAt;
        this.tagName = tagName;
        this.targetCommitish = targetCommitish;
        this.url = url;
    }

    /**
     * Getter for Author.
     * @return Returns the Author7
     */
    @JsonGetter("author")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Author7 getAuthor() {
        return author;
    }

    /**
     * Setter for Author.
     * @param author Value for Author7
     */
    @JsonSetter("author")
    public void setAuthor(Author7 author) {
        this.author = author;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the String
     */
    @JsonGetter("created_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for String
     */
    @JsonSetter("created_at")
    public void setCreatedAt(String createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for Draft.
     * @return Returns the Boolean
     */
    @JsonGetter("draft")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getDraft() {
        return draft;
    }

    /**
     * Setter for Draft.
     * @param draft Value for Boolean
     */
    @JsonSetter("draft")
    public void setDraft(Boolean draft) {
        this.draft = draft;
    }

    /**
     * Getter for HtmlUrl.
     * @return Returns the String
     */
    @JsonGetter("html_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getHtmlUrl() {
        return htmlUrl;
    }

    /**
     * Setter for HtmlUrl.
     * @param htmlUrl Value for String
     */
    @JsonSetter("html_url")
    public void setHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
    }

    /**
     * Getter for Id.
     * @return Returns the Integer
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for Integer
     */
    @JsonSetter("id")
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Internal Getter for Name.
     * @return Returns the Internal String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetName() {
        return this.name;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    public String getName() {
        return OptionalNullable.getFrom(name);
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = OptionalNullable.of(name);
    }

    /**
     * UnSetter for Name.
     */
    public void unsetName() {
        name = null;
    }

    /**
     * Getter for Prerelease.
     * @return Returns the Boolean
     */
    @JsonGetter("prerelease")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getPrerelease() {
        return prerelease;
    }

    /**
     * Setter for Prerelease.
     * @param prerelease Value for Boolean
     */
    @JsonSetter("prerelease")
    public void setPrerelease(Boolean prerelease) {
        this.prerelease = prerelease;
    }

    /**
     * Getter for PublishedAt.
     * @return Returns the String
     */
    @JsonGetter("published_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPublishedAt() {
        return publishedAt;
    }

    /**
     * Setter for PublishedAt.
     * @param publishedAt Value for String
     */
    @JsonSetter("published_at")
    public void setPublishedAt(String publishedAt) {
        this.publishedAt = publishedAt;
    }

    /**
     * Getter for TagName.
     * @return Returns the String
     */
    @JsonGetter("tag_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTagName() {
        return tagName;
    }

    /**
     * Setter for TagName.
     * @param tagName Value for String
     */
    @JsonSetter("tag_name")
    public void setTagName(String tagName) {
        this.tagName = tagName;
    }

    /**
     * Getter for TargetCommitish.
     * @return Returns the String
     */
    @JsonGetter("target_commitish")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTargetCommitish() {
        return targetCommitish;
    }

    /**
     * Setter for TargetCommitish.
     * @param targetCommitish Value for String
     */
    @JsonSetter("target_commitish")
    public void setTargetCommitish(String targetCommitish) {
        this.targetCommitish = targetCommitish;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Converts this Release3 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Release3 [" + "author=" + author + ", createdAt=" + createdAt + ", draft=" + draft
                + ", htmlUrl=" + htmlUrl + ", id=" + id + ", name=" + name + ", prerelease="
                + prerelease + ", publishedAt=" + publishedAt + ", tagName=" + tagName
                + ", targetCommitish=" + targetCommitish + ", url=" + url + "]";
    }

    /**
     * Builds a new {@link Release3.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Release3.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .author(getAuthor())
                .createdAt(getCreatedAt())
                .draft(getDraft())
                .htmlUrl(getHtmlUrl())
                .id(getId())
                .prerelease(getPrerelease())
                .publishedAt(getPublishedAt())
                .tagName(getTagName())
                .targetCommitish(getTargetCommitish())
                .url(getUrl());
        builder.name = internalGetName();
        return builder;
    }

    /**
     * Class to build instances of {@link Release3}.
     */
    public static class Builder {
        private Author7 author;
        private String createdAt;
        private Boolean draft;
        private String htmlUrl;
        private Integer id;
        private OptionalNullable<String> name;
        private Boolean prerelease;
        private String publishedAt;
        private String tagName;
        private String targetCommitish;
        private String url;



        /**
         * Setter for author.
         * @param  author  Author7 value for author.
         * @return Builder
         */
        public Builder author(Author7 author) {
            this.author = author;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  String value for createdAt.
         * @return Builder
         */
        public Builder createdAt(String createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for draft.
         * @param  draft  Boolean value for draft.
         * @return Builder
         */
        public Builder draft(Boolean draft) {
            this.draft = draft;
            return this;
        }

        /**
         * Setter for htmlUrl.
         * @param  htmlUrl  String value for htmlUrl.
         * @return Builder
         */
        public Builder htmlUrl(String htmlUrl) {
            this.htmlUrl = htmlUrl;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  Integer value for id.
         * @return Builder
         */
        public Builder id(Integer id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = OptionalNullable.of(name);
            return this;
        }

        /**
         * UnSetter for name.
         * @return Builder
         */
        public Builder unsetName() {
            name = null;
            return this;
        }

        /**
         * Setter for prerelease.
         * @param  prerelease  Boolean value for prerelease.
         * @return Builder
         */
        public Builder prerelease(Boolean prerelease) {
            this.prerelease = prerelease;
            return this;
        }

        /**
         * Setter for publishedAt.
         * @param  publishedAt  String value for publishedAt.
         * @return Builder
         */
        public Builder publishedAt(String publishedAt) {
            this.publishedAt = publishedAt;
            return this;
        }

        /**
         * Setter for tagName.
         * @param  tagName  String value for tagName.
         * @return Builder
         */
        public Builder tagName(String tagName) {
            this.tagName = tagName;
            return this;
        }

        /**
         * Setter for targetCommitish.
         * @param  targetCommitish  String value for targetCommitish.
         * @return Builder
         */
        public Builder targetCommitish(String targetCommitish) {
            this.targetCommitish = targetCommitish;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Builds a new {@link Release3} object using the set fields.
         * @return {@link Release3}
         */
        public Release3 build() {
            return new Release3(author, createdAt, draft, htmlUrl, id, name, prerelease,
                    publishedAt, tagName, targetCommitish, url);
        }
    }
}
