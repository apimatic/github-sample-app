/*
 * GitHubAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.github.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for FeedsResponse type.
 */
public class FeedsResponse {
    private String timelineUrl;
    private String userUrl;
    private String currentUserPublicUrl;
    private String currentUserUrl;
    private String currentUserActorUrl;
    private String currentUserOrganizationUrl;
    private List<String> currentUserOrganizationUrls;
    private String securityAdvisoriesUrl;
    private String repositoryDiscussionsUrl;
    private String repositoryDiscussionsCategoryUrl;
    private Links links;

    /**
     * Default constructor.
     */
    public FeedsResponse() {
    }

    /**
     * Initialization constructor.
     * @param  timelineUrl  String value for timelineUrl.
     * @param  userUrl  String value for userUrl.
     * @param  links  Links value for links.
     * @param  currentUserPublicUrl  String value for currentUserPublicUrl.
     * @param  currentUserUrl  String value for currentUserUrl.
     * @param  currentUserActorUrl  String value for currentUserActorUrl.
     * @param  currentUserOrganizationUrl  String value for currentUserOrganizationUrl.
     * @param  currentUserOrganizationUrls  List of String value for currentUserOrganizationUrls.
     * @param  securityAdvisoriesUrl  String value for securityAdvisoriesUrl.
     * @param  repositoryDiscussionsUrl  String value for repositoryDiscussionsUrl.
     * @param  repositoryDiscussionsCategoryUrl  String value for repositoryDiscussionsCategoryUrl.
     */
    public FeedsResponse(
            String timelineUrl,
            String userUrl,
            Links links,
            String currentUserPublicUrl,
            String currentUserUrl,
            String currentUserActorUrl,
            String currentUserOrganizationUrl,
            List<String> currentUserOrganizationUrls,
            String securityAdvisoriesUrl,
            String repositoryDiscussionsUrl,
            String repositoryDiscussionsCategoryUrl) {
        this.timelineUrl = timelineUrl;
        this.userUrl = userUrl;
        this.currentUserPublicUrl = currentUserPublicUrl;
        this.currentUserUrl = currentUserUrl;
        this.currentUserActorUrl = currentUserActorUrl;
        this.currentUserOrganizationUrl = currentUserOrganizationUrl;
        this.currentUserOrganizationUrls = currentUserOrganizationUrls;
        this.securityAdvisoriesUrl = securityAdvisoriesUrl;
        this.repositoryDiscussionsUrl = repositoryDiscussionsUrl;
        this.repositoryDiscussionsCategoryUrl = repositoryDiscussionsCategoryUrl;
        this.links = links;
    }

    /**
     * Getter for TimelineUrl.
     * @return Returns the String
     */
    @JsonGetter("timeline_url")
    public String getTimelineUrl() {
        return timelineUrl;
    }

    /**
     * Setter for TimelineUrl.
     * @param timelineUrl Value for String
     */
    @JsonSetter("timeline_url")
    public void setTimelineUrl(String timelineUrl) {
        this.timelineUrl = timelineUrl;
    }

    /**
     * Getter for UserUrl.
     * @return Returns the String
     */
    @JsonGetter("user_url")
    public String getUserUrl() {
        return userUrl;
    }

    /**
     * Setter for UserUrl.
     * @param userUrl Value for String
     */
    @JsonSetter("user_url")
    public void setUserUrl(String userUrl) {
        this.userUrl = userUrl;
    }

    /**
     * Getter for CurrentUserPublicUrl.
     * @return Returns the String
     */
    @JsonGetter("current_user_public_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrentUserPublicUrl() {
        return currentUserPublicUrl;
    }

    /**
     * Setter for CurrentUserPublicUrl.
     * @param currentUserPublicUrl Value for String
     */
    @JsonSetter("current_user_public_url")
    public void setCurrentUserPublicUrl(String currentUserPublicUrl) {
        this.currentUserPublicUrl = currentUserPublicUrl;
    }

    /**
     * Getter for CurrentUserUrl.
     * @return Returns the String
     */
    @JsonGetter("current_user_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrentUserUrl() {
        return currentUserUrl;
    }

    /**
     * Setter for CurrentUserUrl.
     * @param currentUserUrl Value for String
     */
    @JsonSetter("current_user_url")
    public void setCurrentUserUrl(String currentUserUrl) {
        this.currentUserUrl = currentUserUrl;
    }

    /**
     * Getter for CurrentUserActorUrl.
     * @return Returns the String
     */
    @JsonGetter("current_user_actor_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrentUserActorUrl() {
        return currentUserActorUrl;
    }

    /**
     * Setter for CurrentUserActorUrl.
     * @param currentUserActorUrl Value for String
     */
    @JsonSetter("current_user_actor_url")
    public void setCurrentUserActorUrl(String currentUserActorUrl) {
        this.currentUserActorUrl = currentUserActorUrl;
    }

    /**
     * Getter for CurrentUserOrganizationUrl.
     * @return Returns the String
     */
    @JsonGetter("current_user_organization_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrentUserOrganizationUrl() {
        return currentUserOrganizationUrl;
    }

    /**
     * Setter for CurrentUserOrganizationUrl.
     * @param currentUserOrganizationUrl Value for String
     */
    @JsonSetter("current_user_organization_url")
    public void setCurrentUserOrganizationUrl(String currentUserOrganizationUrl) {
        this.currentUserOrganizationUrl = currentUserOrganizationUrl;
    }

    /**
     * Getter for CurrentUserOrganizationUrls.
     * @return Returns the List of String
     */
    @JsonGetter("current_user_organization_urls")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getCurrentUserOrganizationUrls() {
        return currentUserOrganizationUrls;
    }

    /**
     * Setter for CurrentUserOrganizationUrls.
     * @param currentUserOrganizationUrls Value for List of String
     */
    @JsonSetter("current_user_organization_urls")
    public void setCurrentUserOrganizationUrls(List<String> currentUserOrganizationUrls) {
        this.currentUserOrganizationUrls = currentUserOrganizationUrls;
    }

    /**
     * Getter for SecurityAdvisoriesUrl.
     * @return Returns the String
     */
    @JsonGetter("security_advisories_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSecurityAdvisoriesUrl() {
        return securityAdvisoriesUrl;
    }

    /**
     * Setter for SecurityAdvisoriesUrl.
     * @param securityAdvisoriesUrl Value for String
     */
    @JsonSetter("security_advisories_url")
    public void setSecurityAdvisoriesUrl(String securityAdvisoriesUrl) {
        this.securityAdvisoriesUrl = securityAdvisoriesUrl;
    }

    /**
     * Getter for RepositoryDiscussionsUrl.
     * A feed of discussions for a given repository.
     * @return Returns the String
     */
    @JsonGetter("repository_discussions_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRepositoryDiscussionsUrl() {
        return repositoryDiscussionsUrl;
    }

    /**
     * Setter for RepositoryDiscussionsUrl.
     * A feed of discussions for a given repository.
     * @param repositoryDiscussionsUrl Value for String
     */
    @JsonSetter("repository_discussions_url")
    public void setRepositoryDiscussionsUrl(String repositoryDiscussionsUrl) {
        this.repositoryDiscussionsUrl = repositoryDiscussionsUrl;
    }

    /**
     * Getter for RepositoryDiscussionsCategoryUrl.
     * A feed of discussions for a given repository and category.
     * @return Returns the String
     */
    @JsonGetter("repository_discussions_category_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRepositoryDiscussionsCategoryUrl() {
        return repositoryDiscussionsCategoryUrl;
    }

    /**
     * Setter for RepositoryDiscussionsCategoryUrl.
     * A feed of discussions for a given repository and category.
     * @param repositoryDiscussionsCategoryUrl Value for String
     */
    @JsonSetter("repository_discussions_category_url")
    public void setRepositoryDiscussionsCategoryUrl(String repositoryDiscussionsCategoryUrl) {
        this.repositoryDiscussionsCategoryUrl = repositoryDiscussionsCategoryUrl;
    }

    /**
     * Getter for Links.
     * @return Returns the Links
     */
    @JsonGetter("_links")
    public Links getLinks() {
        return links;
    }

    /**
     * Setter for Links.
     * @param links Value for Links
     */
    @JsonSetter("_links")
    public void setLinks(Links links) {
        this.links = links;
    }

    /**
     * Converts this FeedsResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "FeedsResponse [" + "timelineUrl=" + timelineUrl + ", userUrl=" + userUrl
                + ", links=" + links + ", currentUserPublicUrl=" + currentUserPublicUrl
                + ", currentUserUrl=" + currentUserUrl + ", currentUserActorUrl="
                + currentUserActorUrl + ", currentUserOrganizationUrl=" + currentUserOrganizationUrl
                + ", currentUserOrganizationUrls=" + currentUserOrganizationUrls
                + ", securityAdvisoriesUrl=" + securityAdvisoriesUrl + ", repositoryDiscussionsUrl="
                + repositoryDiscussionsUrl + ", repositoryDiscussionsCategoryUrl="
                + repositoryDiscussionsCategoryUrl + "]";
    }

    /**
     * Builds a new {@link FeedsResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link FeedsResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(timelineUrl, userUrl, links)
                .currentUserPublicUrl(getCurrentUserPublicUrl())
                .currentUserUrl(getCurrentUserUrl())
                .currentUserActorUrl(getCurrentUserActorUrl())
                .currentUserOrganizationUrl(getCurrentUserOrganizationUrl())
                .currentUserOrganizationUrls(getCurrentUserOrganizationUrls())
                .securityAdvisoriesUrl(getSecurityAdvisoriesUrl())
                .repositoryDiscussionsUrl(getRepositoryDiscussionsUrl())
                .repositoryDiscussionsCategoryUrl(getRepositoryDiscussionsCategoryUrl());
        return builder;
    }

    /**
     * Class to build instances of {@link FeedsResponse}.
     */
    public static class Builder {
        private String timelineUrl;
        private String userUrl;
        private Links links;
        private String currentUserPublicUrl;
        private String currentUserUrl;
        private String currentUserActorUrl;
        private String currentUserOrganizationUrl;
        private List<String> currentUserOrganizationUrls;
        private String securityAdvisoriesUrl;
        private String repositoryDiscussionsUrl;
        private String repositoryDiscussionsCategoryUrl;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  timelineUrl  String value for timelineUrl.
         * @param  userUrl  String value for userUrl.
         * @param  links  Links value for links.
         */
        public Builder(String timelineUrl, String userUrl, Links links) {
            this.timelineUrl = timelineUrl;
            this.userUrl = userUrl;
            this.links = links;
        }

        /**
         * Setter for timelineUrl.
         * @param  timelineUrl  String value for timelineUrl.
         * @return Builder
         */
        public Builder timelineUrl(String timelineUrl) {
            this.timelineUrl = timelineUrl;
            return this;
        }

        /**
         * Setter for userUrl.
         * @param  userUrl  String value for userUrl.
         * @return Builder
         */
        public Builder userUrl(String userUrl) {
            this.userUrl = userUrl;
            return this;
        }

        /**
         * Setter for links.
         * @param  links  Links value for links.
         * @return Builder
         */
        public Builder links(Links links) {
            this.links = links;
            return this;
        }

        /**
         * Setter for currentUserPublicUrl.
         * @param  currentUserPublicUrl  String value for currentUserPublicUrl.
         * @return Builder
         */
        public Builder currentUserPublicUrl(String currentUserPublicUrl) {
            this.currentUserPublicUrl = currentUserPublicUrl;
            return this;
        }

        /**
         * Setter for currentUserUrl.
         * @param  currentUserUrl  String value for currentUserUrl.
         * @return Builder
         */
        public Builder currentUserUrl(String currentUserUrl) {
            this.currentUserUrl = currentUserUrl;
            return this;
        }

        /**
         * Setter for currentUserActorUrl.
         * @param  currentUserActorUrl  String value for currentUserActorUrl.
         * @return Builder
         */
        public Builder currentUserActorUrl(String currentUserActorUrl) {
            this.currentUserActorUrl = currentUserActorUrl;
            return this;
        }

        /**
         * Setter for currentUserOrganizationUrl.
         * @param  currentUserOrganizationUrl  String value for currentUserOrganizationUrl.
         * @return Builder
         */
        public Builder currentUserOrganizationUrl(String currentUserOrganizationUrl) {
            this.currentUserOrganizationUrl = currentUserOrganizationUrl;
            return this;
        }

        /**
         * Setter for currentUserOrganizationUrls.
         * @param  currentUserOrganizationUrls  List of String value for
         *         currentUserOrganizationUrls.
         * @return Builder
         */
        public Builder currentUserOrganizationUrls(List<String> currentUserOrganizationUrls) {
            this.currentUserOrganizationUrls = currentUserOrganizationUrls;
            return this;
        }

        /**
         * Setter for securityAdvisoriesUrl.
         * @param  securityAdvisoriesUrl  String value for securityAdvisoriesUrl.
         * @return Builder
         */
        public Builder securityAdvisoriesUrl(String securityAdvisoriesUrl) {
            this.securityAdvisoriesUrl = securityAdvisoriesUrl;
            return this;
        }

        /**
         * Setter for repositoryDiscussionsUrl.
         * @param  repositoryDiscussionsUrl  String value for repositoryDiscussionsUrl.
         * @return Builder
         */
        public Builder repositoryDiscussionsUrl(String repositoryDiscussionsUrl) {
            this.repositoryDiscussionsUrl = repositoryDiscussionsUrl;
            return this;
        }

        /**
         * Setter for repositoryDiscussionsCategoryUrl.
         * @param  repositoryDiscussionsCategoryUrl  String value for
         *         repositoryDiscussionsCategoryUrl.
         * @return Builder
         */
        public Builder repositoryDiscussionsCategoryUrl(String repositoryDiscussionsCategoryUrl) {
            this.repositoryDiscussionsCategoryUrl = repositoryDiscussionsCategoryUrl;
            return this;
        }

        /**
         * Builds a new {@link FeedsResponse} object using the set fields.
         * @return {@link FeedsResponse}
         */
        public FeedsResponse build() {
            return new FeedsResponse(timelineUrl, userUrl, links, currentUserPublicUrl,
                    currentUserUrl, currentUserActorUrl, currentUserOrganizationUrl,
                    currentUserOrganizationUrls, securityAdvisoriesUrl, repositoryDiscussionsUrl,
                    repositoryDiscussionsCategoryUrl);
        }
    }
}
